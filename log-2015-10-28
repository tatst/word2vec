Script started on Wed Oct 28 12:56:51 2015
bash: /path/to/your/virtualenvwrapper.sh: No such file or directory
[?1034hbash-3.2$ vi wori[Kd2
word2phrase    word2phrase.c  word2vec       word2vec.c     
bash-3.2$ vi word2vec.c 
[?1049h[?1h=[1;25r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[25;1H"word2vec.c" 703L, 46009C[>c[1;1H//  Copyright 2013 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <pthread.h>

#define MAX_STRING 100 /* 最大文字数は100字まで */
#define EXP_TABLE_SIZE 1000
#define MAX_EXP 6
#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;1H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25hset number[?25l[1;1H[93m  1 [m//  Copyright 2013 Google Inc. All Rights Reserved.
[93m  2 [m//
[93m  3 [m//  Licensed under the Apache License, Version 2.0 (the "License");
[93m  4 [m//  you may not use this file except in compliance with the License.
[93m  5 [m//  You may obtain a copy of the License at
[93m  6 [m//
[93m  7 [m//      http://www.apache.org/licenses/LICENSE-2.0
[93m  8 [m//
[93m  9 [m//  Unless required by applicable law or agreed to in writing, software
[93m 10 [m//  distributed under the License is distributed on an "AS IS" BASIS,
[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[12;1H[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* 最大文字数は100字まで */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;5H[?12l[?25h[2;5H[3;5H[4;5H[5;5H[6;5H[7;5H[8;5H[9;5H[10;5H[11;5H[12;5H[13;5H[14;5H[15;5H[16;5H[17;5H[18;5H[19;5H[20;5H[21;5H[22;5H[23;5H[24;5H[?25l[1;24r[24;1H
[1;25r[24;1H[93m 25 [m#define MAX_CODE_LENGTH 40 /* 最大コード長は40字まで */[25;1H[K[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 26 [?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[23;1H[93m 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in thh[24;1H[93m    [me vocabulary[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 28 [?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[24;1H[93m 29 [mtypedef float real;[19C // Precision of float numbers[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 30 [?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[24;1H[93m 31 [m/* 構造体型struct vocab_wordを宣言 */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 32 [mstruct vocab_word {[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 33 [m  long long cn; /* long long型(64 bit符号付整数型) cn */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 34 [m  int *point; /* int型ポインタpointを宣言 */[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 35 [m  char *word, *code, codelen; /* char型(1 byte文字型)codelenとポインタword，[24;1H[93m    [mcodeを宣言 */[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[19;23H[46m{[m[24;1H[93m 36 [m[46m}[m; /* この段階で変数無し */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[18;23H{[23;5H}
[93m 37 [?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[23;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* 最大文字数MAX_STRINN[24;1H[93m    [mGを引数に持つchar型(1 byte文字型)train_fileとoutput_fileを宣言 */[23;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* char型savee[24;1H[93m    [m_vocab_fileとread_vocab_fileを宣言 */[23;5H[?12l[?25h[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m 40 [mstruct vocab_word *vocab; /* 構造体型struct vocab_wordでポインタvocab(これは[23;1H[93m    [m変数だからvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelenを持つ[24;1H[93m    [m)を宣言 */[22;5H[?12l[?25h[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_thrr[23;1H[93m    [meads = 12, min_reduce = 1; /* スレッド数num_threads = 12，binary = 0は565行[94m>>[m[24;1H[93m    [m目で使用 */[22;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 42 [mint *vocab_hash; /* int型ポインタvocab_hash(SearchVocab()で使用) */[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long  [24;1H[93m    [mlong型vocab_max_size, vocab_sizeとlayer1_sizeを宣言 */[23;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, cc[24;1H[93m    [mlasses = 0; /* 560行目でclassesを使用) */[23;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3; /* 655, 656行目よりalpha[94m>>[m[24;1H[93m    [mは学習比(learning rate) */[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* real型ポインタ */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 47 [mclock_t start;[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 48 [?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[23;1H[93m 49 [mint hs = 0, negative = 5; /* hsは344行目，negativeは350行目で初出 */
[93m 50 [mconst int table_size = 1e8;[23;5H[?12l[?25h[24;5H[?25l[1;24r[24;1H
[1;25r[24;1H[93m 51 [mint *table; /* int型ポインタtable */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 52 [m/* void型(値を返さない関数)InitUnigramTable()←かなり後に出てくる */[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;[23;5H[?12l[?25h[24;5H[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;[23;5H[?12l[?25h[24;5H[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(inn[23;1H[93m    [mt)分のメモリを動的に割り当て(このメモリはどこで解放？) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power[24;1H[94m@                                                                               [22;5H[?12l[?25h[?25l[1;24r[m[1;1H[3M[1;25r[21;1H[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, powerr[22;1H[93m    [m);
[93m 59 [m  i = 0;
[93m 60 [m  d1 = pow(vocab[i].cn, power) / train_words_pow;[21;5H[?12l[?25h[23;5H[24;5H[?25l[1;24r[24;1H
[1;25r[24;1H[93m 61 [m  for (a = 0; a < table_size; a++) {[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 62 [m    table[a] = i;
[93m 63 [m    if (a / (double)table_size > d1) {[23;5H[?12l[?25h[24;5H[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 64 [m      i++;
[93m 65 [m      d1 += pow(vocab[i].cn, power) / train_words_pow;[23;5H[?12l[?25h[24;5H[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 66 [m    }
[93m 67 [m    if (i >= vocab_size) i = vocab_size - 1;[23;5H[?12l[?25h[24;5H[?25l[1;24r[24;1H
[1;25r[24;1H[93m 68 [m  }[?12l[?25h[?25l[1;24r[24;1H
[1;25r[6;29H[46m{[m[24;1H[93m 69 [m[46m}[?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[5;29H{[23;5H}
[93m 70 [?12l[?25h[?25l[1;24r[m[1;1H[3M[1;25r[22;1H[93m 71 [m// Reads a single word from a file, assuming space + tab + EOL to be word boo[23;1H[93m    [mundaries /* ファイルから1単語読込み，スペース・タブ・行末を単語の切れ目と見[94m>>[m[24;1H[93m    [mなす */[22;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 72 [mvoid ReadWord(char *word, FILE *fin) { /* char型ポインタwordとファイルポイン[24;1H[93m    [mタfinが引数のvoid型関数ReadWord() */[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 73 [m  int a = 0, ch; /* int型aとch */[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 74 [m  while (!feof(fin)) { /* ファイルポインタfinがファイルの終端に達した時にル[94m>>[m[24;1H[93m    [mープ終了 */[23;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 75 [m    ch = fgetc(fin); /* ファイルポインタfinから1文字読込んでint型で返す */
[93m 76 [m    if (ch == 13) continue; /* ch == 13(キャリッジ・リターン(CR)'/r'を表す)[94m>[24;1H@                                                                               [23;5H[?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[22;1H[93m 76 [m    if (ch == 13) continue; /* ch == 13(キャリッジ・リターン(CR)'/r'を表す)[94m>>[m[23;1H[93m    [mの時処理をスキップして75行目に戻る */
[93m 77 [m    if ((ch == ' ') || (ch == '\t') || (ch == '\n')) {/* 空白・タブ・改行が[94m>[24;1H@                                                                               [22;5H[?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[23;1H[93m 77 [m    if ((ch == ' ') || (ch == '\t') || (ch == '\n')) {/* 空白・タブ・改行が[94m>>[m[24;1H[93m    [mある場合，86行目まで */[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 78 [m      if (a > 0) { /* 文頭以外の時(最初は条件を満たさない) */[24;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 79 [m[7C if (ch == '\n') ungetc(ch, fin); /* 文頭以外の箇所で改行の'\n'が出て[24;1H[93m    [mきたらファイルポインタfinに1文字返却しchを返す */[23;5H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m 80 [m[7C break; /* 文頭以外の箇所で改行・タブ・空白(単語の切れ目)が出てきたら[24;1H[93m    [m74行目からのループを脱出 */[23;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 81 [m      }[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 82 [m      if (ch == '\n') { /* 文頭を含めて改行が有る場合 */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 83 [m[7C strcpy(word, (char *)"</s>"); /* 配列wordに文字列"</s>"をコピー */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 84 [m[7C return;[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 85 [m      } else continue; /* 改行が無い場合処理をスキップして75行目に戻る */[24;5H[?12l[?25h[?25l[1;24r[24;1H
[1;25r[24;1H[93m 86 [m    } /* 77行目から */[24;5H[?12l[?25h[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m 87 [m    word[a] = ch; /* 配列wordのa番目にint型chを代入 */
[93m 88 [m    a++;
[93m 89 [m    if (a >= MAX_STRING - 1) a--;   // Truncate too long words /* 長すぎる単[24;1H[94m@                                                                               [22;5H[?12l[?25h[23;5H[?25l[1;24r[m[1;1H[2M[1;25r[22;1H[93m 89 [m    if (a >= MAX_STRING - 1) a--;   // Truncate too long words /* 長すぎる単[23;1H[93m    [m語を削除 */
[93m 90 [m  } /* 74行目から */[22;5H[?12l[?25h[24;5H[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m 91 [m  word[a] = 0; /* 文頭以外の箇所で改行・タブ・空白が出た時word[a]に0を代入 **[23;1H[93m    [m/
[93m 92 [m} /* 72行目から */[22;5H[?12l[?25h[24;5H[?25l[1;24r[24;1H
[1;25r[24;1H[93m 93 [?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[23;1H[93m 94 [m// Returns hash value of a word /* 単語のhash値を返す */
[93m 95 [mint GetWordHash(char *word) { /* char型ポインタwordを引数に持つint型関数GetW[24;1H[94m@                                                                               [23;5H[?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[22;1H[93m 95 [mint GetWordHash(char *word) { /* char型ポインタwordを引数に持つint型関数GetWW[23;1H[93m    [mordHash */
[93m 96 [m  unsigned long long a, hash = 0; /* 符号無long long型a, hash */[22;5H[?12l[?25h[24;5H[?25l
:[?12l[?25hq[?25l[25;1H[K[25;1H[?1l>[?12l[?25h[?1049lbash-3.2$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': tatst
Password for 'https://tatst@github.com': 
Counting objects: 10, done.
Delta compression using up to 4 threads.
Compressing objects:  10% (1/10)   Compressing objects:  20% (2/10)   Compressing objects:  30% (3/10)   Compressing objects:  40% (4/10)   Compressing objects:  50% (5/10)   Compressing objects:  60% (6/10)   Compressing objects:  70% (7/10)   Compressing objects:  80% (8/10)   Compressing objects:  90% (9/10)   Compressing objects: 100% (10/10)   Compressing objects: 100% (10/10), done.
Writing objects:  10% (1/10)   Writing objects:  20% (2/10)   Writing objects:  30% (3/10)   Writing objects:  40% (4/10)   Writing objects:  50% (5/10)   Writing objects:  50% (5/10), 160.00 KiB | 36.00 KiB/s   Writing objects:  50% (5/10), 1.11 MiB | 161.00 KiB/s   Writing objects:  50% (5/10), 4.55 MiB | 576.00 KiB/s   Writing objects:  50% (5/10), 9.61 MiB | 1.03 MiB/s   Writing objects:  50% (5/10), 11.48 MiB | 1.15 MiB/s   Writing objects:  50% (5/10), 13.93 MiB | 1.27 MiB/s   Writing objects:  50% (5/10), 19.24 MiB | 3.64 MiB/s   Writing objects:  50% (5/10), 24.49 MiB | 4.04 MiB/s   Writing objects:  50% (5/10), 29.05 MiB | 4.13 MiB/s   Writing objects:  50% (5/10), 34.19 MiB | 4.74 MiB/s   Writing objects:  50% (5/10), 37.61 MiB | 4.34 MiB/s   Writing objects:  50% (5/10), 42.98 MiB | 4.34 MiB/s   Writing objects:  50% (5/10), 47.98 MiB | 4.34 MiB/s   Writing objects:  60% (6/10), 50.61 MiB | 4.46 MiB/s   Writing objects:  70% (7/10), 50.61 MiB | 4.46 MiB/s   Writing objects:  80% (8/10), 50.61 MiB | 4.46 MiB/s   Writing objects:  90% (9/10), 50.61 MiB | 4.46 MiB/s   Writing objects: 100% (10/10), 50.61 MiB | 4.46 MiB/s   Writing objects: 100% (10/10), 51.30 MiB | 4.42 MiB/s, done.
Total 10 (delta 6), reused 0 (delta 0)
remote: warning: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.[K
remote: warning: See http://git.io/iEPt8g for more information.[K
remote: warning: File vectors.bin is 55.03 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB[K
To https://github.com/tatst/word2vec.git
   2c48481..ffbc187  other -> other
bash-3.2$ git pushvi word2vec.c 
[?1049h[?1h=[1;25r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[25;1H"word2vec.c" 703L, 46009C[>c[1;1H//  Copyright 2013 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <pthread.h>

#define MAX_STRING 100 /* 最大文字数は100字まで */
#define EXP_TABLE_SIZE 1000
#define MAX_EXP 6
#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;1H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25hset number[?25l[1;1H[93m  1 [m//  Copyright 2013 Google Inc. All Rights Reserved.
[93m  2 [m//
[93m  3 [m//  Licensed under the Apache License, Version 2.0 (the "License");
[93m  4 [m//  you may not use this file except in compliance with the License.
[93m  5 [m//  You may obtain a copy of the License at
[93m  6 [m//
[93m  7 [m//      http://www.apache.org/licenses/LICENSE-2.0
[93m  8 [m//
[93m  9 [m//  Unless required by applicable law or agreed to in writing, software
[93m 10 [m//  distributed under the License is distributed on an "AS IS" BASIS,
[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[12;1H[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* 最大文字数は100字まで */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;5H[?12l[?25h[?25l[25;1H[K[25;1H:.,.+2[?12l[?25h[?25l[25;6H[K[25;6H[?12l[?25h[?25l[25;5H[K[25;5H[?12l[?25h[?25l[25;4H[K[25;4H[?12l[?25h[?25l[25;3H[K[25;3H[?12l[?25h[?25l[25;2H[K[25;2H[?12l[?25h376[?25l[27m[m[H[2J[1;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1にメモリを[2;1H[93m    [m動的に割当， 540行目で解放*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1eにメモリ[4;1H[93m    [mを動的に割当，541行目で解放 */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* 読出モードでtrain_fileを開き，ファ[94m>>[m[6;1H[93m    [mイルポインタfiに代入，374行目から538行目までの無限ループの後539行目で閉じる  [7;1H[93m    [m*/
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);   [9;1H[93m    [m/* ファイルfiのファイル位置演算子をSEEK_SETを基準にfile_size / (long long)nuu[10;1H[93m    [mm_threads * (long long)idバイト移動 */
[93m374 [m  while (1) { /* 無限ループ(538行目まで) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387行目まで */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 41行目debug_mode = 2よりTRUE，384行目まで **[16;1H[93m    [m/
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 11[19;1H[93m    [m3, alpha,
[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SECC[22;1H[93m    [m * 1000));
[93m383 [m[7C fflush(stdout);
[93m384 [m      }[13;11H[?12l[?25hw[48C[?25l[25;1H[1m-- INSERT --[13;61H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l[13;65H[K[13;65H[?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l 実際 */[?12l[?25h[?25lの */[?12l[?25h[?25lw */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25ld_ */[?12l[?25h[?25l_c */[?12l[?25h[?25lco */[13;78H[?12l[?25h[?25l[14;24r[14;1H[L[1;25r[13;77Hou **[14;1H[93m    [m/[13;79H[?12l[?25h[?25lun  [14;1H[93m    [m*/[13;80H[?12l[?25h[?25lntt[14;1H[93m    [m */[?12l[?25h[?25l[93m [mを */[?12l[?25h[?25l記録 */[?12l[?25h[15;40H[13;22Hactual += word_count - last_word_count[15;40H[25;1H[K[15;39H[?25l[?12l[?25h[16;39H[18;24H[19;39H[?25l[41C11[20;1H[93m [m[21;34H[46m([mreal[46m)[?12l[?25h[?25l[m(real)[22;39H[?12l[?25h[24;27H[?25l[1;24r[1;1H[2M[1;25r[14;33H[46m{[m[46C**[15;1H[93m [23;1H384 [m      [46m}[m
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_[24;1H[94m@                                                                               [23;11H[?12l[?25h[?25l[1;24r[m[1;1H[2M[1;25r[12;33H{[46C**[13;1H[93m [m[21;11H}
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train__[23;1H[93m    [mwords + 1));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[22;39H[?12l[?25h[24;39H[?25l[1;24r[1;1H[3M[1;25r[5;51H[46m{[m[22;1H[93m387 [m    [46m}[m
[93m388 [m    if (sentence_length == 0) { /* if文(406行目まで),364行目より当初はsentenn[24;1H[93m    [mce_length == 0だが389行目からの無限ループで最終的にsentence_lengthが1000にな[23;1H[94m@                                                                               [24;1H@                                                                               [22;9H[?12l[?25h[?25l[1;24r[m[1;1H[3M[1;25r[2;51H{[19;9H}
[93m388 [m    if (sentence_length == 0) { /* if文(406行目まで),364行目より当初はsentenn[21;1H[93m    [mce_length == 0だが389行目からの無限ループで最終的にsentence_lengthが1000にな[22;1H[93m    [mる */
[93m389 [m      while (1) { /* 無限ループ(404行目まで) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114行目で定義したReadWordIndexで単語の[94m>[24;1H@                                                                               [20;39H[?12l[?25h[23;39H[?25l[1;24r[m[24;1H
[1;25r[23;1H[93m390 [m        word = ReadWordIndex(fi); /* 114行目で定義したReadWordIndexで単語の[94m>>[m[24;1H[93m    [m位置をint型でwordに代入 */[23;39H[?12l[?25h[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m391 [m[7C if (feof(fi)) break; /* ファイルポインタが終端に達した時389行目から[94m>>[m[23;1H[93m    [mの無限ループから脱出 */
[93m392 [m[7C if (word == -1) continue; /* word == -1の時処理をスキップして390行目[24;1H[94m@                                                                               [22;39H[?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[23;1H[93m392 [m        if (word == -1) continue; /* word == -1の時処理をスキップして390行目 [24;1H[93m    [mに戻る */[23;39H[?12l[?25h[?25l[1;24r[1;1H[2M[1;25r[23;1H[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389行目からの無限ループから脱出 */[23;25H[?12l[?25h[24;39H[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping thh[23;1H[93m    [me ranking same
[93m396 [m[7C if (sample > 0) { /* sample > 0 の時(400行目まで) */[22;39H[?12l[?25h[21;39H[20;25H[18;39H[20;25H[21;39H[22;39H[24;39H[?25l[1;24r[1;1H[3M[1;25r[22;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (([23;1H[93m    [msample * train_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[94m@                                                                               [22;39H[?12l[?25h[?25l[1;24r[m[24;1H
[1;25r[23;1H[93m398 [m          next_random = next_random * (unsigned long long)25214903917 + 11;  [24;1H[93m    [m/* 線形合同法で乱数生成 */[23;39H[?12l[?25h[?25l

:[?12l[?25hq[?25l[97m[41mE37: No write since last change (add ! to override)[23;39H[?12l[?25h[?25l[m[25;1H[K[25;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 46044C written[23;39H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25hq[?25l[25;1H[K[25;1H[?1l>[?12l[?25h[?1049lbash-3.2$ make
gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
bash-3.2$ makevi word2vec.c 
[?1049h[?1h=[1;25r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[25;1H"word2vec.c" 703L, 46044C[>c[1;1H//  Copyright 2013 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <pthread.h>

#define MAX_STRING 100 /* 最大文字数は100字まで */
#define EXP_TABLE_SIZE 1000
#define MAX_EXP 6
#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;1H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25hseet[?25l[25;5H[K[25;5H[?12l[?25h[?25l[25;4H[K[25;4H[?12l[?25ht number[?25l[1;1H[93m  1 [m//  Copyright 2013 Google Inc. All Rights Reserved.
[93m  2 [m//
[93m  3 [m//  Licensed under the Apache License, Version 2.0 (the "License");
[93m  4 [m//  you may not use this file except in compliance with the License.
[93m  5 [m//  You may obtain a copy of the License at
[93m  6 [m//
[93m  7 [m//      http://www.apache.org/licenses/LICENSE-2.0
[93m  8 [m//
[93m  9 [m//  Unless required by applicable law or agreed to in writing, software
[93m 10 [m//  distributed under the License is distributed on an "AS IS" BASIS,
[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[12;1H[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* 最大文字数は100字まで */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000 /* 365行目と403行目で使用 */[1;5H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25h275[?25l[27m[m[H[2J[1;1H[93m266 [m  long long a, i; /* long long型変数a, i */
[93m267 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1; /* 0 <= a < vocaa[3;1H[93m    [mb_hash_sizeの時vocab_hash[a]に-1を代入 */
[93m268 [m  fin = fopen(train_file, "rb"); /* train_fileをバイナリモードで読出専用で開[5;1H[93m    [mく */
[93m269 [m  if (fin == NULL) { /* ポインタfinがNULLの時 */
[93m270 [m    printf("ERROR: training data file not found!\n");
[93m271 [m    exit(1);
[93m272 [m  }
[93m273 [m  vocab_size = 0;
[93m274 [m  AddWordToVocab((char *)"</s>"); /* 単語を語彙に加える関数AddWordToVocab */[12;1H[93m275 [m  while (1) { /* 無限ループ */
[93m276 [m    ReadWord(word, fin); /* 72行目で定義したReadWord関数でtrain_fileの単語を[14;1H[93m    [m読み込む */
[93m277 [m    if (feof(fin)) break; /* ファイルポインタが終端に達した時無限ループから[94m>>[m[16;1H[93m    [m脱出 */
[93m278 [m    train_words++; /* train_wordsに1を足す */
[93m279 [m    if ((debug_mode > 1) && (train_words % 100000 == 0)) { /* debug_mode > 11[19;1H[93m    [mかつtrain_wordsが100000で割切れる時，41行目よりdebug_mode == 2 > 1 */
[93m280 [m      printf("%lldK%c", train_words / 1000, 13);
[93m281 [m      fflush(stdout);
[93m282 [m    }
[93m283 [m    i = SearchVocab(word); /* 103行目で定義した語彙中の単語の位置を返す関数SS[24;1H[93m    [mearchVocab */[12;7H[?12l[?25hwhile[?25l [46m([m1[46m)[?12l[?25h[?25l[m(1)[?12l[?25h[?25l[46m([m1[46m)[?12l[?25h[?25l[m(1)[?12l[?25h [?25l[1;24r[1;1H[6M[1;25r[6;17H[46m{[m[19;1H[93m284 [m    if (i == -1) { /* i == -1の時 */
[93m285 [m      a = AddWordToVocab(word);
[93m286 [m      vocab[a].cn = 1;
[93m287 [m    } else vocab[i].cn++;
[93m288 [m    if (vocab_size > vocab_hash_size * 0.7) ReduceVocab();
[93m289 [m  [46m}[?12l[?25h[?25l[6;17H[?12l[?25h[?25l[24;7H[?12l[?25h[?25l[6;17H[?12l[?25h[?25l[24;7H[?12l[?25h[?25l[m
[1m-- INSERT --[24;8H[?12l[?25h[?25l[m[6;17H{[24;7H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 2 */[?12l[?25h[?25l27 */[?12l[?25h[?25l75 */[?12l[?25h[?25l5行目 */[?12l[?25h[?25lからの */[?12l[?25h[?25l無限ループ */[?12l[?25h[?25lここまで */[?12l[?25h[23;43H[22;30H[21;27H[20;36H[19;41H[17;42H[?25l[12;62H[46m{[m[17C11[13;1H[93m [m[16;9H[46m}[?12l[?25h[?25l[m[12;62H{[17C11[13;1H[93m [m[16;9H}[15;26H[?12l[?25h[14;43H[12;43H[11;43H[9;42H[7;43H[6;35H[?25l， */[?12l[?25h[?25l2 */[?12l[?25h[?25l28 */[?12l[?25h[?25l89 */[?12l[?25h[?25l9行目 */[?12l[?25h[?25lまで */[?12l[?25h[7;45H[9;44H[11;45H[12;45H[14;45H[15;26H[14;45H[12;45H[11;45H[9;44H[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[11;50H[12;68H[?25l[46m{[m[17C11[13;1H[93m [m[16;9H[46m}[12;63H[?12l[?25h[?25l[m[17C11[13;1H[93m [12;62H[?12l[?25h[?25l[m[12;12H[46m([47C)[m {[17C11[13;1H[93m [m[16;9H}[12;61H[?12l[?25h[?25l[19C11[13;1H[93m [12;60H[?12l[?25h[?25l[m[12;12H([20C[46m([25C)[m)[19C11[13;1H[93m [12;59H[?12l[?25h[?25l[m[12;33H([25C)[20C11[13;1H[93m [12;58H[?12l[?25h[?25l[m[46m([25C)[m[20C11[13;1H[93m [12;34H[?12l[?25h[?25l[m[46C11[13;1H[93m [12;33H[?12l[?25h[?25l[m([25C)[20C11[13;1H[93m [12;32H[?12l[?25h[?25l[m[12;13H[46m([14C)[m[51C11[13;1H[93m [12;29H[?12l[?25h[?25l[m[51C11[13;1H[93m [12;28H[?12l[?25h[?25l[m[12;13H([14C)[51C11[13;1H[93m [12;27H[?12l[?25h[?25l[m[46m([14C)[m[51C11[13;1H[93m [12;14H[?12l[?25h[?25l[m[66C11[13;1H[93m [12;13H[?12l[?25h[m[25;1H[K[12;12H[?25l[46m([m([14C)[31C[46m)[m[19C11[13;1H[93m [12;12H[?12l[?25h[?25l[25;1H[m:.[?12l[?25h[?25l[25;2H[K[25;2H[?12l[?25hq[?25l[97m[41mE37: No write since last change (add ! to override)[12;12H[?12l[?25h[?25l[m[25;1H[K[25;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 46114C written[12;12H[?12l[?25h[?25l[25;1H[K[25;1H:[?12l[?25hq[?25l[25;1H[K[25;1H[?1l>[?12l[?25h[?1049lbash-3.2$ vi word2vec.c [C[C[C[C[C[C[C[C[C[Cmake[Kvi word2vec.c [C[C[C[C[C[C[C[C[C[Cmake[K
gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
bash-3.2$ ls
LICENSE				log-2015-10-22
README.txt			log-2015-10-26
compute-accuracy		log-2015-10-27
compute-accuracy.c		log-2015-10-28
demo-analogy.sh			makefile
demo-classes.sh			questions-phrases.txt
demo-phrase-accuracy.sh		questions-words.txt
demo-phrases.sh			text8
demo-train-big-model-v1.sh	text8.zip
demo-word-accuracy.sh		vectors.bin
demo-word.sh			word-analogy
distance			word-analogy.c
distance.c			word2phrase
log-2015-10-19			word2phrase.c
log-2015-10-19.txt		word2vec
log-2015-10-21			word2vec.c
bash-3.2$ cd text8
bash: cd: text8: Not a directory
bash-3.2$ vi text8[K8
[?1049h[?1h=[1;25r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[25;1H"text8" Interrupted[>c[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [1;1H[?12l[?25h[?25l[m[25;1H[K[25;1H:[?12l[?25hq[?25l[25;1H[K[25;1H[?1l>[?12l[?25h[?1049lbash-3.2$ 
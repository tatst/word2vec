Script started on Thu Oct 22 12:33:20 2015
bash: /path/to/your/virtualenvwrapper.sh: No such file or directory
[?1034hbash-3.2$ vi word2
word2phrase    word2phrase.c  word2vec       word2vec.c     
bash-3.2$ vi word2vec.c
[?1049h[?1h=[1;29r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[29;1H"word2vec.c" 703L, 34928C[>c[1;1H//  Copyright 2013 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <pthread.h>

#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
#define EXP_TABLE_SIZE 1000
#define MAX_EXP 6
#define MAX_SENTENCE_LENGTH 1000
#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */

const int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabulary[1;1H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25hset number[?25l[1;1H[93m  1 [m//  Copyright 2013 Google Inc. All Rights Reserved.
[93m  2 [m//
[93m  3 [m//  Licensed under the Apache License, Version 2.0 (the "License");
[93m  4 [m//  you may not use this file except in compliance with the License.
[93m  5 [m//  You may obtain a copy of the License at
[93m  6 [m//
[93m  7 [m//      http://www.apache.org/licenses/LICENSE-2.0
[93m  8 [m//
[93m  9 [m//  Unless required by applicable law or agreed to in writing, software
[93m 10 [m//  distributed under the License is distributed on an "AS IS" BASIS,
[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[28;1H[93m    [mary[1;5H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25h363[?25l[27m[m[H[2J[1;1H[93m352 [m    if (syn1neg == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢[2;1H[93m    [m„É™„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */
[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[4;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[10;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[17;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;[15;5H[?12l[?25h[16;5H[17;5H[18;5H[19;5H[20;5H[21;5H[22;5H[23;5H[24;5H[25;5H[26;5H[27;5H[28;5H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[27;5H[?12l[?25h[28;5H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[27;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[28;1H[93m    [m;[27;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m383 [m[7C fflush(stdout);[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 1[28;1H[94m@                                                                                        [27;5H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[28;1H[93m    [m));[27;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m387 [m    }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m388 [m    if (sentence_length == 0) {[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[28;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[27;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[28;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[27;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m392 [m[7C if (word == -1) continue;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m393 [m[7C word_count++;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[28;1H[93m    [m same[27;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m396 [m[7C if (sample > 0) {[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [28;1H[93m    [mtrain_words) / vocab[word].cn;[27;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m400 [m[7C }[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m401 [m[7C sen[sentence_length] = word;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m402 [m[7C sentence_length++;[28;5H[?12l[?25h[?25l[1;28r[1;1H[3M[1;29r[26;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[27;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }[26;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m405 [m      sentence_position = 0;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m406 [m    }[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;[27;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m409 [m      local_iter--;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m411 [m      word_count = 0;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m412 [m      last_word_count = 0;[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[27;5H[?12l[?25h[28;5H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m415 [m      continue;
[93m416 [m    }[27;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m417 [m    word = sen[sentence_position];[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m418 [m    if (word == -1) continue;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;[27;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m422 [m    b = next_random % window;[28;5H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m423 [m    if (cbow) {  //train the cbow architecture
[93m424 [m      // in -> hidden[27;5H[?12l[?25h[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m425 [m      cw = 0;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m428 [m[7C if (c < 0) continue;[28;5H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m429 [m[7C if (c >= sentence_length) continue;[28;5H[?12l[?25h[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H    if[?25l [46m([mcbow[46m)[?12l[?25h[?25l[m(cbow)[?12l[?25hcbo[?25l[46m([mcbow[46m)[?12l[?25h[?25l[m(cbow)[?12l[?25h {  //train the cbow architectur[23;5H[22;5H[45C[?25l[29;1H[1m-- INSERT --[22;51H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l „Åì„Åì„Åã„Çâ */[?12l[?25h[?25l4 */[?12l[?25h[?25l48 */[?12l[?25h[?25l83 */[?12l[?25h[?25l3Ë°åÁõÆ */[?12l[?25h[?25l„Åæ„Åß */[?12l[?25h[?25lË™≠„ÅøÈ£õ„Å∞„Åô */[?12l[?25h[29;1H[K[22;82H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h483[?25l[29;4H[K[29;4H[?12l[?25h4[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;11H[?12l[?25hf[?25l[29;1H:[?12l[?25h423[?25l[27m[m[H[2J[1;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window;
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ483Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[24;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;9H[?12l[?25hi[13;10H[14;10Hf[?25l [46m([mcbow[46m)[?12l[?25h[?25l[m(cbow)[?12l[?25hcbo[?25l[46m([mcbow[46m)[?12l[?25h[?25l[m(cbow)[?12l[?25h {  //train the cbow architecture /* [2C[2C[2C[2C48[?25l8Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;86H[K[14;65H[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;67H[?12l[?25h[m8[?25l82Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;66H[?12l[?25h[29;1H[K[14;65H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;9H[?12l[?25h} else {  //train skip-gra[15;5H[14;5H [29C[?25l[29;1H[1m-- INSERT --[14;36H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [29;1H[K[14;39H[?25l[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /*  */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;16H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /*  */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;16H[?12l[?25h[?25l{[?12l[?25h  //train skip-gram /* [?25l[29;1H[1m-- INSERT --[14;41H[?12l[?25h[?25l[m 5 */[?12l[?25h[?25l53 */[?12l[?25h[?25l32 */[?12l[?25h[?25l2Ë°åÁõÆ */[?12l[?25h[?25l„Åæ„Åß */[?12l[?25h[15;21H[16;21H[17;21H[18;21H[19;21H[20;21H[21;21H[22;21H[21;21H[20;21H[19;21H[18;21H[17;21H[16;21H[15;21H; a < window * 2 + 1 - b; a+[?25l[15;15H[46m([34C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[15;15H([34C) [?12l[?25hif[?25l [46m([11C)[15;55H[?12l[?25h[?25l([?12l[?25h[?25l[m([11C)[15;57H[?12l[?25h != windo[?25l[15;55H[46m([11C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[15;55H([11C) [?12l[?25h[?25l[15;55H[46m([11C)[?12l[?25h[?25l[?12l[?25h[?25l[m[15;55H([11C)[?12l[?25hindo[?25l[15;55H[46m([11C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[15;55H([11C) [?12l[?25h[29;1H[K[15;68H[?25l[?12l[?25h [?25l[27m[m[H[2J[1;1H[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;11H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) [46m{[m
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;69H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;11H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) [46m{[m
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;69H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;11H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) [46m{[m
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;69H[?12l[?25h[?25l[29;1H[1m-- INSERT --[m[14;69H{[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 5 */[?12l[?25h[?25l53 */[?12l[?25h[?25l31 */[?12l[?25h[?25l1Ë°åÁõÆ */[?12l[?25h[?25l„Åæ„Åß */[?12l[?25h[?25lÔºå */[14;87H[?12l[?25h[?25l[?12l[?25h[?25l[14;55H[46m([11C)[?12l[?25h[?25l[?12l[?25h[?25l[m[14;55H([11C)[?12l[?25h[?25l[46m([11C)[14;56H[?12l[?25h[?25l[?12l[?25h[?25l[m([11C)[14;54H[?12l[?25h[?25l[14;15H[46m([34C)[?12l[?25h[m[29;1H[K[14;50H[?25l[?12l[?25h[?25l[14;15H([34C)[?12l[?25h[?25l[29;1H/[?12l[?25hb[?25l[14;44H[?12l[?25h[?25l[29;1H?[14;20H[?12l[?25h[?25l[29;1H[3;46H[?12l[?25h[?25l[29;1H[3;22H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[29;1H[K[1;38H[?12l[?25h[?25l[29;1H?b[1;27H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[29;1H[K[1;45H[?12l[?25h[?25l[29;1H?b[1;28r[1;1H[L[1;29r[1;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[29;1H[K[1;39H[?12l[?25h[?25l[29;1H?b[1;28r[1;1H[5L[1;29r[1;1H[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[29;1H[K[1;19H[?12l[?25h[?25l[29;1H?b[1;28r[1;1H[2L[1;29r[1;1H[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;[29;1H[K[1;62H[?12l[?25h[?25l[29;1H/b[3;19H[?12l[?25h[?25l[29;1H[8;39H[?12l[?25h[?25l[29;1H[9;45H[?12l[?25h[?25l[29;1H[10;27H[?12l[?25h[?25l[29;1H[10;38H[?12l[?25h[?25l[29;1H[16;22H[?12l[?25h[?25l[29;1H[16;46H[?12l[?25h[?25l[29;1H[27;20H[?12l[?25h[?25l

[27;44H[?12l[?25h[?25l

[1;28r[1;1H[8M[1;29r[21;1H[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[29;1H[K[28;41H[?12l[?25h[?25l
/b[1;28r[1;1H[3M[1;29r[26;1H[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output[29;1H[K[27;24H[?12l[?25h[?25l

/b[1;28r[1;1H[4M[1;29r[25;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[29;1H[K[28;29H[?12l[?25h[?25l
?b[23;24H[?12l[?25h[?25l[29;1H[21;41H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hb =[?25l[27m[m[H[2J[1;1H[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[93m556 [m  start = clock();
[93m557 [m  for (a = 0; a < num_threads; a++) pthread_create(&pt[a], NULL, TrainModelThread, (vv[5;1H[93m    [moid *)a);
[93m558 [m  for (a = 0; a < num_threads; a++) pthread_join(pt[a], NULL);
[93m559 [m  fo = fopen(output_file, "wb");
[93m560 [m  if (classes == 0) {
[93m561 [m    // Save the word vectors
[93m562 [m    fprintf(fo, "%lld %lld\n", vocab_size, layer1_size);
[93m563 [m    for (a = 0; a < vocab_size; a++) {
[93m564 [m      fprintf(fo, "%s ", vocab[a].word);
[93m565 [m      if (binary) for (b = 0; b < layer1_size; b++) fwrite(&syn0[a * layer1_size + b]][14;1H[93m    [m, sizeof(real), 1, fo);
[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[16;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[23;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å [25;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[28;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */[13;28H[?12l[?25h[?25l[29;1H/b =[15;21H[?12l[?25h[?25l[29;1H?[13;28H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window;
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;9H[?12l[?25h[?25l[29;1H/b =[27m[m[H[2J[1;1H[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[93m556 [m  start = clock();
[93m557 [m  for (a = 0; a < num_threads; a++) pthread_create(&pt[a], NULL, TrainModelThread, (vv[5;1H[93m    [moid *)a);
[93m558 [m  for (a = 0; a < num_threads; a++) pthread_join(pt[a], NULL);
[93m559 [m  fo = fopen(output_file, "wb");
[93m560 [m  if (classes == 0) {
[93m561 [m    // Save the word vectors
[93m562 [m    fprintf(fo, "%lld %lld\n", vocab_size, layer1_size);
[93m563 [m    for (a = 0; a < vocab_size; a++) {
[93m564 [m      fprintf(fo, "%s ", vocab[a].word);
[93m565 [m      if (binary) for (b = 0; b < layer1_size; b++) fwrite(&syn0[a * layer1_size + b]][14;1H[93m    [m, sizeof(real), 1, fo);
[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[16;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[23;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å [25;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[28;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */[13;28H[?12l[?25h[?25l[29;1H?b =[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window;
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;9H[?12l[?25h[?25l[29;1H?b =[27m[m[H[2J[1;1H[93m348 [m     syn1[a * layer1_size + b] = 0;
[93m349 [m  }
[93m350 [m  if (negative>0) { /* negative=5„Çà„Çä„Åì„ÅÆifÊñá„ÅØTRUE */
[93m351 [m    a = posix_memalign((void **)&syn1neg, 128, (long long)vocab_size * layer1_size *  [5;1H[93m    [msizeof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„Çí[94m>>[m[6;1H[93m    [mÂâ≤ÂΩì„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1neg„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ122[7;1H[93m    [m8„ÅÆÂÄçÊï∞ */
[93m352 [m    if (syn1neg == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢[9;1H[93m    [m„É™„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */
[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[11;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[17;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[24;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;[14;45H[?12l[?25h[?25l[29;1H?b =[10;47H[?12l[?25h[?25l[29;1H/[14;45H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window;
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;9H[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;10H[?12l[?25h[m = next_random % window;[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l „Åì„ÅÆ */[?12l[?25h[?25lb */[?12l[?25h[?25lb„ÅØ */[?12l[?25h[?25l4 */[?12l[?25h[?25l48 */[?12l[?25h[?25l83 */[?12l[?25h[?25l3Ë°åÁõÆ */[?12l[?25h[?25l‰ª•Èôç„Åß */[?12l[?25h[?25l */[14;59H[K[14;56H[?12l[?25h[?25l„ÅÆ */[?12l[?25h[?25le */[?12l[?25h[?25lel */[?12l[?25h[?25lls */[?12l[?25h[?25lse */[?12l[?25h[?25le„Åß */[?12l[?25h[?25l‰Ωø„ÅÜ */[?12l[?25h[29;1H[K[14;66H[?25l[?12l[?25h4[?25l[29;1H:[?12l[?25h8[?25l[29;2H[K[29;2H[?12l[?25h484[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå */[15;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;11H[?12l[?25hfor[?25l [46m([34C)[14;15H[?12l[?25h[?25l[m([34C)[14;16H[?12l[?25ha = b; a < window * 2 + 1 - b; a+[?25l[14;15H[46m([34C)[?12l[?25h[?25l[m[14;15H([34C)[?12l[?25h if[?25l [46m([11C)[14;55H[?12l[?25h[?25l[m([11C)[14;56H[?12l[?25ha != windo[?25l[14;55H[46m([11C)[?12l[?25h[?25l[m[14;55H([11C)[?12l[?25h { /* 531[2C[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[14;88H[?12l[?25h[?25l[15;28r[m[15;1H[L[1;29r[14;87Hnexx[15;1H[93m    [mt_random % window */[?12l[?25h[14;89H[?25lbnee[15;1H[93m    [mxt_random % window */[14;88H[?12l[?25h[?25lnexx[15;1H[93m    [mt_random % window */[15;25H[K[14;87H[?12l[?25hne[15;5Ht_random % window[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l  */[?12l[?25h[?25l b */[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l<= */[?12l[?25h[?25l  */[?12l[?25h[?25l a */[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l  */[?12l[?25h[?25l w */[?12l[?25h[?25lwi */[?12l[?25h[?25lin */[?12l[?25h[?25lnd */[?12l[?25h[?25ldo */[?12l[?25h[?25low */[?12l[?25h[?25l  */[?12l[?25h[?25l * */[?12l[?25h[?25l*2 */[?12l[?25h[?25l  */[?12l[?25h[?25l + */[?12l[?25h[?25l  */[?12l[?25h[?25l 1 */[?12l[?25h[?25l  */[?12l[?25h[?25l - */[?12l[?25h[?25l-b */[?12l[?25h[?25lb„ÅÆ */[?12l[?25h[?25lÈñì */[?12l[?25h[?25l„ÅßÔºå */[?12l[?25h[?25la */[?12l[?25h[?25l  */[?12l[?25h[?25l ! */[?12l[?25h[?25l!= */[?12l[?25h[?25l  */[?12l[?25h[?25l w */[?12l[?25h[?25lwi */[?12l[?25h[?25lin */[?12l[?25h[?25lnd */[?12l[?25h[?25ldo */[?12l[?25h[?25low */[?12l[?25h[?25lw„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[29;1H[K[15;16H[?25l[?12l[?25h[?25l[29;1H?b =[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;9H[?12l[?25h[?25l[29;1H:.,.+483[?12l[?25h[?25l[29;8H[K[29;8H[?12l[?25h[?25l[29;7H[K[29;7H[?12l[?25h[?25l[29;6H[K[29;6H[?12l[?25h[?25l[29;5H[K[29;5H[?12l[?25h[?25l[29;4H[K[29;4H[?12l[?25h[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h484[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºånexx[15;1H[93m    [mt_random % window = b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */
[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;11H[?12l[?25hfor[?25l [46m([34C)[m[38Cxx[15;1H[93m [14;15H[?12l[?25h[?25l[m([34C)[38Cxx[15;1H[93m [14;16H[?12l[?25h[ma = b; a < window * 2 + 1 - b; a+[?25l[14;15H[46m([34C)[m[38Cxx[15;1H[93m [14;50H[?12l[?25h[?25l[m[14;15H([34C)[38Cxx[15;1H[93m [14;51H[?12l[?25h[m if[?25l [46m([11C)[m[21Cxx[15;1H[93m [14;55H[?12l[?25h[?25l[m([11C)[21Cxx[15;1H[93m [14;56H[?12l[?25h[ma != windo[?25l[14;55H[46m([11C)[m[21Cxx[15;1H[93m [14;67H[?12l[?25h[?25l[m[14;55H([11C)[21Cxx[15;1H[93m [14;68H[?12l[?25h[m { /* 531[2C[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[14;88H[?12l[?25h[?25l[m(nee[15;1H[93m    [mxt_random % window = b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;88H[?12l[?25hn[15;5Hxt_random % window =[?25l[14;87H[46m([mnee[15;1H[93m [m[22C=[46m)[m b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;26H[?12l[?25h[?25l[?12l[?25h[?25l[14;87H(nee[15;1H[93m [m[23C)[?12l[?25h[14;89H[?25l[46m([mnee[15;1H[93m [m[23C[46m)[14;88H[?12l[?25h[?25l[m(4nn[15;1H[93m    [mext_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;89H[?12l[?25h[?25l422[15;1H[93m    [mnext_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;5H[?12l[?25h[?25l[93m [m4next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;6H[?12l[?25h[?25l[93m [mnext_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;80H[K[15;5H[?12l[?25h[?25l[93m [m2next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;6H[?12l[?25h[?25l2Ë°åÁõÆnext_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;10H[?12l[?25h[?25l„Çà„Çänext_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;14H[?12l[?25h[?25l next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[15;15H[?12l[?25h next_random % window [?25l[14;87H[46m([m422[15;1H[93m [m[35C[46m)[?12l[?25h[?25l)[?12l[?25h[?25l[m[14;87H(422[15;1H[93m [m[35C) [?12l[?25hb <= a[16;48H[?25l [?12l[?25h[29;1H[K[16;48H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hsentence__[?25l[29;11H[K[29;11H[?12l[?25hposition[?25l[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;17H[?12l[?25h[?25l[29;1H?sentence_position[2;19H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H?sentence_position[4;20H[?12l[?25h[?25l[29;1H[1;28r[1;1H[9L[1;29r[1;1H[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[28;1H[94m@                                                                                        [m[29;1H[K[1;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H?sentence_position[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H?sentence_position[29;19H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H?sentence_position[29;19H[K[29;1H[13;9H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;17H[?12l[?25h[?25l[29;1H?sentence_position[2;19H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H?sentence_position[4;20H[?12l[?25h[?25l[29;1H[1;28r[1;1H[9L[1;29r[1;1H[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[28;1H[94m@                                                                                        [m[29;1H[K[1;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H?sentence_position[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H?sentence_position[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H?sentence_position[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H?sentence_position[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25hsentence_positi[?25l[29;1H?sentence_position[14;11H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0;
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position];
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[14;11H[?12l[?25h[21C[?25l[29;1H[1m-- INSERT --[14;33H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l64 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25ll */[?12l[?25h[?25llo */[?12l[?25h[?25lon */[?12l[?25h[?25lng */[?12l[?25h[?25l  */[?12l[?25h[?25l l */[?12l[?25h[?25llo */[?12l[?25h[?25lon */[?12l[?25h[?25lng */[?12l[?25h[?25l  */[?12l[?25h[?25l s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_p */[?12l[?25h[?25lpo */[?12l[?25h[?25los */[?12l[?25h[?25lsi */[?12l[?25h[?25lit */[?12l[?25h[?25lti */[?12l[?25h[?25lio */[?12l[?25h[?25lon */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l  */[?12l[?25h[?25l 0 */[?12l[?25h[?25l0„Å® */[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;79HÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„Åå */[?12l[?25h[?25lÔºå */[?12l[?25h[?25l„Åì„Åì„Åß„ÇÇ */[?12l[?25h[?25lÊîπ„ÇÅ„Å¶ */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h[29;1H[K[15;25H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hsentence_ps[?25l[29;12H[K[29;12H[?12l[?25hosition[?25l[27;20H[?12l[?25h[?25l

?[14;56H[?12l[?25h[?25l[29;1H/[27;20H[?12l[?25h[?25l

?[14;56H[?12l[?25h[?25l[29;1H[14;11H[?12l[?25h[?25l[29;1H/[14;56H[?12l[?25h[?25l[29;1H[27;20H[?12l[?25h[?25l

[1;28r[1;1H[9M[1;29r[20;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[29;1H[K[28;17H[?12l[?25h[?25l
?sentence_position[18;20H[?12l[?25hsentence_positio[?25l[18;19H[46m[[17C][?12l[?25h[?25l[m[18;19H[[17C][?12l[?25h[?25l[29;1H[1m-- INSERT --[m[29;13H[K[18;39H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l  */[?12l[?25h[?25l s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25ln[ */[?12l[?25h[?25l[s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_p */[?12l[?25h[?25lpo */[?12l[?25h[?25los */[?12l[?25h[?25lsi */[?12l[?25h[?25lit */[?12l[?25h[?25lti */[?12l[?25h[?25lio */[?12l[?25h[?25lon */[?12l[?25h[?25l[18;53H[46m[[m[16Cn[46m][m */[?12l[?25h[?25l[18;53H[[17C]= */[?12l[?25h[?25l[18;53H[46m[[17C][?12l[?25h[?25l[m[18;53H[[17C]=[?12l[?25h[?25l[18;53H[46m[[17C][?12l[?25h[?25l[m[18;53H[[17C] = */[?12l[?25h=[?25l  */[?12l[?25h[?25l s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25ln[ */[?12l[?25h[?25l[s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25le */[18;84H[K[18;81H[?12l[?25h[?25ls */[18;83H[K[18;80H[?12l[?25h[?25l[ */[18;82H[K[18;79H[?12l[?25h[?25l[0 */[?12l[?25h[?25l[46m[[m0[46m][m */[?12l[?25h[?25l[0]  */[?12l[?25h[?25l ( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([ms[46m)[m */[?12l[?25h[?25lse[46m)[m */[?12l[?25h[?25len[46m)[m */[18;86H[?12l[?25h[?25l[19;28r[19;1H[L[1;29r[18;85Hnt[46m)[m **[19;1H[93m    [m/[18;87H[?12l[?25h[?25lte[46m)[m  [19;1H[93m    [m*/[18;88H[?12l[?25h[?25len[46m))[m[19;1H[93m    [m */[18;89H[?12l[?25h[?25lncc[19;1H[93m    [m[46m)[m */[?12l[?25h[?25l[93m [me[46m)[m */[?12l[?25h[?25le_[46m)[m */[?12l[?25h[?25l_p[46m)[m */[?12l[?25h[?25lpo[46m)[m */[?12l[?25h[?25los[46m)[m */[?12l[?25h[?25lsi[46m)[m */[?12l[?25h[?25lit[46m)[m */[?12l[?25h[?25lti[46m)[m */[?12l[?25h[?25lio[46m)[m */[?12l[?25h[?25lon[46m)[m */[?12l[?25h[?25ln=[46m)[m */[?12l[?25h[?25l=0[46m)[m */[?12l[?25h[?25l[18;82H(sentencc[19;1H[93m [m[15C)[?12l[?25h[?25ln =0) */[?12l[?25h=[?25l= 0) */[?12l[?25h[?25l[18;82H[46m([msentencc[19;1H[93m [m[17C[46m)[?12l[?25h[?25l[m0ÊïÖ[46m)[m */[?12l[?25h[?25l0[46m)[m */[19;23H[K[19;19H[?12l[?25h[?25l0„ÇÜ„Åà[46m)[m */[?12l[?25h[29;1H[K[19;21H[?25l[18;82H(sentencc[19;1H[93m [m[21C)[?12l[?25h[?25l[29;1H/sentence_position[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[29;1H[K[28;17H[?12l[?25h[?25l
/sentence_position[27m[m[H[2J[1;1H[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[20;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[25;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[26;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;[14;19H[?12l[?25h[?25l[29;1H/sentence_position[26;17H[?12l[?25h[?25l


?[14;19H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position]; /* word = sen[sentence_position] = sen[0] (sentencc[4;1H[93m    [me_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H?sentence_position[3;83H[?12l[?25h[?25l[29;1H[3;54H[?12l[?25h[?25l[29;1H[3;20H[?12l[?25hsentence_positio[?25l[3;19H[46m[[17C][m[51Ccc[4;1H[93m [3;37H[?12l[?25h[?25l[m[3;19H[[17C][51Ccc[4;1H[93m [3;38H[?12l[?25h[m; /* word = [?25l en[sentence_position] = sen[0] (sentencee[4;1H[93m    [m_position = 0„ÇÜ„Åà) */[4;26H[K[3;50H[?12l[?25h[?25l n[sentence_position] = sen[0] (sentence__[4;1H[93m    [mposition = 0„ÇÜ„Åà) */[4;25H[K[3;50H[?12l[?25h[?25l [46m[[msentence_position[46m][m = sen[0] (sentence_pp[4;1H[93m    [mosition = 0„ÇÜ„Åà) */[4;24H[K[3;50H[?12l[?25h[?25l sentence_position] = sen[0] (sentence_poo[4;1H[93m    [msition = 0„ÇÜ„Åà) */[4;23H[K[3;50H[?12l[?25h[?25l entence_position] = sen[0] (sentence_poss[4;1H[93m    [mition = 0„ÇÜ„Åà) */[4;22H[K[3;50H[?12l[?25h[?25l ntence_position] = sen[0] (sentence_posii[4;1H[93m    [mtion = 0„ÇÜ„Åà) */[4;21H[K[3;50H[?12l[?25h[?25l tence_position] = sen[0] (sentence_positt[4;1H[93m    [mion = 0„ÇÜ„Åà) */[4;20H[K[3;50H[?12l[?25h[?25l ence_position] = sen[0] (sentence_positii[4;1H[93m    [mon = 0„ÇÜ„Åà) */[4;19H[K[3;50H[?12l[?25h[?25l nce_position] = sen[0] (sentence_positioo[4;1H[93m    [mn = 0„ÇÜ„Åà) */[4;18H[K[3;50H[?12l[?25h[?25l ce_position] = sen[0] (sentence_positionn[4;1H[93m    [m = 0„ÇÜ„Åà) */[4;17H[K[3;50H[?12l[?25h[?25l e_position] = sen[0] (sentence_position  [4;1H[93m    [m= 0„ÇÜ„Åà) */[4;16H[K[3;50H[?12l[?25h[?25l _position] = sen[0] (sentence_position ==[4;1H[93m    [m 0„ÇÜ„Åà) */[4;15H[K[3;50H[?12l[?25h[?25l position] = sen[0] (sentence_position =  [4;1H[93m    [m0„ÇÜ„Åà) */[4;14H[K[3;50H[?12l[?25h[?25l osition] = sen[0] (sentence_position = 00[4;1H[93m    [m„ÇÜ„Åà) */[4;13H[K[3;50H[?12l[?25h[?25l sition] = sen[0] (sentence_position = 0[94m>>[m[4;1H[93m [3;50H[?12l[?25h[?25l[m ition] = sen[0] (sentence_position = 0„ÇÜ [4;1H[93m [m[3C„Åà) */[4;11H[K[3;50H[?12l[?25h[?25l tion] = sen[0] (sentence_position = 0„ÇÜ[94m>>[m[4;1H[93m [3;50H[?12l[?25h[?25l[m ion] = sen[0] (sentence_position = 0„ÇÜ„Åà [4;1H[93m    [m) */[4;9H[K[3;50H[?12l[?25h[?25l on] = sen[0] (sentence_position = 0„ÇÜ„Åà))[4;1H[93m    [m */[4;8H[K[3;50H[?12l[?25h[?25l n] = sen[0] (sentence_position = 0„ÇÜ„Åà)  [4;1H[93m    [m*/[4;7H[K[3;50H[?12l[?25h[?25l ] = sen[0] (sentence_position = 0„ÇÜ„Åà) **[4;1H[93m    [m/[4;6H[K[3;50H[?12l[?25h[?25l[3;28r[28;1H
[1;29r[3;1H[93m417 [m    word = sen[sentence_position]; /* word =  = sen[0] (sentence_position = 0„ÇÜ„Åà) */[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[29;1H[K[3;50H[?12l[?25h[?25l = sen[0] (sentence_position = 0„ÇÜ„Åà) */[3;89H[K[3;50H[?12l[?25h[?25l  sen[0] (sentence_position = 0„ÇÜ„Åà) */[3;88H[K[3;50H[?12l[?25h[?25l sen[0] (sentence_position = 0„ÇÜ„Åà) */[3;87H[K[3;50H[?12l[?25h[?25l[29;1H?sentence_position[3;20H[?12l[?25h[?25l[29;1H[1;28r[1;1H[11L[1;29r[1;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[2;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[29;1H[K[1;56H[?12l[?25h[?25l[29;1H?sentence_position[1;11H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;[14;11H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [12;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) {
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;[14;11H[?12l[?25h[16;9H[17;11H[18;11H[19;11H[20;11H[19;11H[18;11H[17;11H[?25l [46m([52C)[17;12H[?12l[?25h[?25l[m([52C)[17;13H[?12l[?25hfeo[?25lf[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25hf[?25l[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25h ||[?25l [46m([38C)[17;25H[?12l[?25h[?25l[m([38C)[17;26H[?12l[?25hword_count > train_words / num_[17;9H[?25l[29;1H/[?12l[?25hfeof(fi[?25l[17;13H[?12l[?25h[?25l[29;1H?[1;28r[1;1H[5L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[29;1H[K[1;17H[?12l[?25h[?25l[29;1H/feof(fi[22;13H[?12l[?25hfeo[?25lf[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25hf[?25l[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25h ||[?25l [46m([38C)[22;25H[?12l[?25h[?25l[m([38C)[22;26H[?12l[?25hword_count > train_words / num_thread[?25l[22;25H[46m([38C)[?12l[?25h[?25l[22;12H([m[12C([38C)[46m)[?12l[?25h[?25l[m[22;12H([52C)[?12l[?25h [?25l[29;1H[1m-- INSERT --[22;68H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l „Éï„Ç°„Ç§„É´ */[?12l[?25h[?25l[23;28r[23;1H[L[1;29r[22;80H„Éù„Ç§„É≥„Çø **[23;1H[93m    [m/[22;88H[?12l[?25h[?25l„Åå [23;1H[93m    [m */[?12l[?25h[?25l[93m [mÁµÇÁ´Ø */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lÈÅî„Åó„Åü */[?12l[?25h[?25lËã•„Åè„ÅØ */[?12l[?25h[?25lw */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25ld_ */[?12l[?25h[?25l_c */[?12l[?25h[?25lco */[?12l[?25h[?25lou */[?12l[?25h[?25lun */[?12l[?25h[?25lnt */[?12l[?25h[?25lt„Åå */[?12l[?25h[?25lt */[?12l[?25h[?25ltr */[?12l[?25h[?25lra */[?12l[?25h[?25lai */[?12l[?25h[?25lin */[?12l[?25h[?25ln_ */[?12l[?25h[?25l_w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25lds */[?12l[?25h[?25ls/ */[?12l[?25h[?25ls / */[?12l[?25h/[?25l  */[?12l[?25h[?25l n */[?12l[?25h[?25lnu */[?12l[?25h[?25lum */[?12l[?25h[?25lm_ */[?12l[?25h[?25l_t */[?12l[?25h[?25lth */[?12l[?25h[?25lhr */[?12l[?25h[?25lre */[?12l[?25h[?25lea */[?12l[?25h[?25lad */[?12l[?25h[?25lds */[?12l[?25h[?25ls„Çà„Çä */[?12l[?25h[?25lÂ§ö„ÅÑ */[?12l[?25h[?25lÂ†¥Âêà */[?12l[?25h[24;61H[23;72Hword_count[2Ctrain_words / num_threads[2C[24;61H[25;24H[26;84H[27;26H[28;31H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[27;31H[?12l[?25h[28;83H[?25l[1;28r[28;1H
[1;29r[28;1H[93m415 [m      continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[18;67H[46m{[m[21C  [19;1H[93m [28;1H416 [m    [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[17;67H{[21C  [18;1H[93m [m[27;9H}
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[27;34H[?12l[?25h[28;55H[?25l[1;28r[28;1H
[1;29r[28;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[27;74H[?12l[?25h[28;71H[?25l[1;28r[28;1H
[1;29r[28;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m424 [m      // in -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m425 [m      cw = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;[27;33H[?12l[?25h[28;48H[?25l[1;28r[28;1H
[1;29r[28;1H[93m430 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_size[28;1H[94m@                                                                                        [27;43H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m432 [m        for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m433 [m[7C cw++;
[93m434 [m      }[27;18H[?12l[?25h[?25l[19;69H[46m{[28;11H}[?12l[?25h[m[29;1H[K[28;11H[?25l[?12l[?25h[?25l
:[?12l[?25h484[?25l[29;4H[K[29;4H[?12l[?25h3[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output[14;9H[?12l[?25h[15;9H[17;9H    c = sentence_position - window + a;[?25l[29;1H/[?12l[?25hsentence/[?25l[29;10H[K[29;10H[?12l[?25h_position[?25l[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;17H[?12l[?25h[?25l[29;1H?sentence_position[2;19H[?12l[?25h[?25l[29;1H/[14;17H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;17H[?12l[?25h[?25l[29;1H?sentence_position[2;19H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    }
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H?sentence_position[4;58H[?12l[?25h[?25l[29;1H[4;20H[?12l[?25h[?25l[29;1H[1;28r[1;1H[11L[1;29r[1;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[2;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    }
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[5;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[29;1H[K[1;56H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m404 [m      }[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[2;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */[1;56H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m402 [m[7C sentence_length++;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m401 [m[7C sen[sentence_length] = word;[?12l[?25h[?25l[29;1H/sentence_position[6;11H[?12l[?25h[8;9H[?25l[27m[m[H[2J[1;1H[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[5;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[7;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[11;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) [46m{[m
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[17;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[19;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[24;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [27;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[14;35H[?12l[?25h[?25l[1;28r[1;1H[11M[1;29r[18;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[23;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[26;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    [46m}[m
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[28;1H[94m@                                                                                        [27;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[27;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[27;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m[29;1H[1m-- INSERT --[3;36H[?12l[?25h[?25l[m{[27;9H}[3;37H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l 4[?12l[?25h[?25l40[?12l[?25h[?25l06[?12l[?25h[?25l6Ë°åÁõÆ[?12l[?25h[?25l„Åæ„Åß[?12l[?25h[?25l [?12l[?25h[?25l ?[?12l[?25h[?25l[3;52H[K[3;52H[?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l/:[?12l[?25h[?25l[3;54H[K[3;54H[?12l[?25h[29;1H[K[3;53H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h406[?25l[3;35H[46m{[27;9H}[?12l[?25h[?25l[m

[1m-- INSERT --[27;10H[?12l[?25h[?25l[m[3;35H{[27;9H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l 3[?12l[?25h[?25l38[?12l[?25h[?25l88[?12l[?25h[?25l8Ë°åÁõÆ[?12l[?25h[?25l„Åã„Çâ[?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[29;1H[K[27;27H[?25l[?12l[?25h[?25l

:[?12l[?25h388[?25l[3;9H[?12l[?25hif[?25l [46m([20C)[3;12H[?12l[?25h[?25l[m([20C)[3;13H[?12l[?25hsentence_length == [?25l[3;12H[46m([20C)[?12l[?25h[?25l[m[3;12H([20C)[?12l[?25h[?25l [46m{[27;9H}[3;35H[?12l[?25h[?25l[m{[27;9H}[3;36H[?12l[?25h /* [?25l[29;1H[1m-- INSERT --[3;41H[?12l[?25h[?25l[m i406Ë°åÁõÆ„Åæ„Åß */[3;41H[?12l[?25h[?25lif406Ë°åÁõÆ„Åæ„Åß */[3;42H[?12l[?25h[?25lfÊñá406Ë°åÁõÆ„Åæ„Åß */[3;44H[?12l[?25h[?25l(406Ë°åÁõÆ„Åæ„Åß */[3;45H[?12l[?25h406[2C[2C[2C[2C[2C[?25l[3;44H[46m([11C)[m */[?12l[?25h[?25l[3;44H([11C)[4;52H[?12l[?25h[5;57H[7;57H[9;38H[10;26H[11;57H[12;57H[?25l[32Cgg[13;1H[93m [m[14;29H[46m{[19;13H}[14;30H[?12l[?25h[?25l[m{[19;13H}[15;57H[?12l[?25h[17;57H[18;57H[?25l[14;29H[46m{[19;13H}[?12l[?25h[?25l[m[14;29H{[19;13H}[20;41H[?12l[?25h[21;31H[22;57H[?25l[4;21H[46m{[24;11H}[?12l[?25h[?25l[m[4;21H{[24;11H}[25;57H[?12l[?25h[27;28H[?25l[1;28r[28;1H
[1;29r[27;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [28;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà */[27;57H[?12l[?25h[26;28H[24;57H[26;28H[?25l[27;12H[46m([52C)[m[23C  [28;1H[93m [27;13H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[26;12H([52C)[23C  [27;1H[93m 
408 [m      word_count_actual += word_count - last_word_count;[28;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m409 [m      local_iter--;[28;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */[28;13H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[27;13H[?12l[?25h[28;13H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[27;13H[?12l[?25h[28;13H[?25l[1;28r[28;1H
[1;29r[28;1H[93m415 [m      continue;[28;13H[?12l[?25h[27;13H[26;13H[25;13H[24;13H[23;13H[22;13H[21;13H[?25l[19;12H[46m([52C)[m[23C  [20;1H[93m [19;13H[?12l[?25h[?25l[m([52C)[23C  [20;1H[93m [18;13H[?12l[?25h[m 388[2C[2C[2C[2C */[19;28Hrd_count > train_words / n[29;1H[K[19;53H[?25l[?12l[?25hnum_thread[?25l[19;25H[46m([38C)[m[24C  [20;1H[93m [19;64H[?12l[?25h[?25l[m[19;12H[46m([m[12C([38C)[46m)[m[23C  [20;1H[93m [19;65H[?12l[?25h[?25l[m[19;12H([52C)[23C  [20;1H[93m [19;66H[?12l[?25h[m [?25l[1;28r[28;1H
[1;29r[18;67H[46m{[m[21C  [19;1H[93m [28;1H416 [m    [46m}[?12l[?25h[?25l[18;67H[?12l[?25h[?25l[m[22C  [19;1H[93m [28;9H[?12l[?25h[?25l[18;67H[?12l[?25h[?25l[m[22C  [19;1H[93m [28;9H[?12l[?25h[?25l[18;67H[?12l[?25h[?25l[m[22C  [19;1H[93m [28;9H[?12l[?25h[?25l[18;67H[?12l[?25h[?25l[m{[21C  [19;1H[93m [m[28;9H}[18;68H[?12l[?25h /* [2C[2C[2C[2C[2C[2C[2C[2C[19;5H[2C[2C[2C[2C[2C[2C[2C[2C[2Cword_count[2Ctrain_words / num_threads[2C[2C[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[19;73H[?12l[?25h[?25l[m( */[?12l[?25h[?25l(4 */[?12l[?25h[?25l41 */[?12l[?25h[?25l15 */[?12l[?25h[?25l1 */[19;78H[K[19;75H[?12l[?25h[?25l16 */[?12l[?25h[?25l6Ë°åÁõÆ */[?12l[?25h[?25l„Åæ„Åß */[?12l[?25h[?25l[19;72H[46m([11C)[m */[?12l[?25h[?25l[19;72H([11C)[20;61H[?12l[?25h[21;24H[22;84H[23;26H[24;31H[25;31H[26;83H[27;20H[?25l[18;67H[46m{[m[21C  [19;1H[93m [m[28;9H[46m}[?12l[?25h[?25l[m[18;67H{[21C  [19;1H[93m [m[28;9H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l 4[?12l[?25h[?25l40[?12l[?25h[?25l07[?12l[?25h[?25l7Ë°åÁõÆ[?12l[?25h[?25l„Åã„Çâ[?12l[?25h[?25l [?12l[?25h[?25l :[?12l[?25h[?25l[28;26H[K[28;26H[?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */[28;28H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[27;28H[?12l[?25h[28;28H[?25l[1;28r[28;1H
[1;29r[28;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[28;28H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[27;28H[?12l[?25h[28;28H[?25l[1;28r[28;1H
[1;29r[28;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[28;28H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m424 [m      // in -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m425 [m      cw = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;28H[?12l[?25h[27;18H[26;26H[25;28H[24;28H[23;28H[22;28H[21;28H[20;28H[19;28H[18;28H[17;20H[16;28H[15;28H[14;28H[13;26H[12;28H[11;24H[10;28H[8;28H[7;28H[5;28H[7;28H[?25l[?12l[?25h[?25l}[?12l[?25h[8;9H[10;9H[11;9H[12;9H[13;9H[14;9H[15;9H[16;9H[17;9H[?25l[8;67H[46m{[m[21C  [9;1H[93m [m[18;9H[46m}[?12l[?25h[?25l[m[8;67H{[21C  [9;1H[93m [m[18;9H}[19;9H[?12l[?25h[20;9H[21;9H[22;9H[23;9H[24;9H[25;9H[26;9H[27;9H[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;[27;9H[?12l[?25h[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m430 [m[7C last_word = sen[c];[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_size[28;1H[94m@                                                                                        [27;9H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m432 [m        for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[27;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m433 [m[7C cw++;
[93m434 [m      }[27;9H[?12l[?25h[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m435 [m      if (cw) {[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m438 [m[9C f = 0;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;9H[?12l[?25h[29;1H[K[28;8H[?25l[?12l[?25h[7C[?25l
[1m-- INSERT --[m[28;14H 2 = vocab[word].point[d] * layer1_size;[28;54H[K[28;15H[?12l[?25h[?25l e2 = vocab[word].point[d] * layer1_size;[28;16H[?12l[?25h[29;1H[K[28;15H[?25l[?12l[?25h[?25l
1 change; before #63  2 seconds ago[28;14H l[?12l[?25h[?25l[29;20H2  35 seconds ago[4;11H[K[4;9H[?12l[?25h[?25l[29;11Hafter #62  38 seconds ago[29;36H[K[4;10H /* 407Ë°åÁõÆ„Åã„Çâ */[4;10H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 35526C written[4;10H[?12l[?25h[5;10H[6;10H[7;10H[8;10H[9;10H[10;10H[11;10H[12;10H[13;10H[14;10H[15;10H[16;10H[17;10H   [?25l[29;1H[1m-- INSERT --[m[29;14H[K[17;12H f (c >= sentence_length) continue;[17;47H[K[17;13H[?12l[?25h[?25l ef (c >= sentence_length) continue;[17;14H[?12l[?25h[29;1H[K[17;13H[?25l[?12l[?25h[?25l[29;1H1 change; before #64  3 seconds ago[17;12H i[?12l[?25h[?25l[29;20H2  50 seconds ago[4;11H[K[4;9H[?12l[?25h[?25l[29;11Hafter #62  54 seconds ago[29;36H[K[4;10H /* 407Ë°åÁõÆ„Åã„Çâ */[4;10H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 35526C written[4;10H[?12l[?25h[5;10H[6;10H[7;10H[8;10H[9;10H[10;10H[11;10H[12;10H[13;10H[14;10H[15;10H[16;10H[17;10H   [?25l[29;1H[K[29;1H:[?12l[?25h [17;13H[?25l[29;1H/[?12l[?25hsentence_position[?25l[27m[m[H[2J[1;1H[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[20;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[25;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[26;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;[14;19H[?12l[?25h[?25l[29;1H?sentence_position[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[20;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[25;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[26;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;[14;19H[?12l[?25h[?25l[29;1H/sentence_position[26;17H[?12l[?25h[?25l


[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[15;9H[16;9H[17;9H[?25l[15;51H[46m{[18;9H}[?12l[?25h[?25l[m[15;51H{[18;9H}[19;7H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[15;7H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[15;7H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[15;7H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++;
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  }
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[15;7H[?12l[?25h[?25l[29;1H[1m-- INSERT --[15;8H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l74 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ */[?12l[?25h[?25lÁÑ°Èôê„É´„Éº„Éó */[?12l[?25h[?25lÁµÇ„Çè„Çä */[?12l[?25h[?25l */[15;40H[K[15;37H[?12l[?25h[?25l */[15;38H[K[15;35H[?12l[?25h[?25l„Çä */[?12l[?25h[?25l[11;51H[46m{[14;9H}[?12l[?25h[?25l[m[11;51H{[14;9H}[13;20H[?12l[?25h[12;31H[11;37H[10;29H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l64 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l */[10;41H[K[10;38H[?12l[?25h[?25l4 */[10;39H[K[10;36H[?12l[?25h[?25l6 */[10;38H[K[10;35H[?12l[?25h[?25l3 */[10;37H[K[10;34H[?12l[?25h[?25l  */[10;36H[K[10;33H[?12l[?25h[?25l s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_p */[?12l[?25h[?25lpo */[?12l[?25h[?25los */[?12l[?25h[?25lsi */[?12l[?25h[?25lit */[?12l[?25h[?25lti */[?12l[?25h[?25lio */[?12l[?25h[?25lon */[?12l[?25h[?25ln„ÅØ */[?12l[?25h[?25l„Åì„Åì„Åß */[?12l[?25h[?25l1 */[?12l[?25h[?25l1Â¢ó„Åà„Çã */[?12l[?25h[29;1H[K[10;41H[?25l[?12l[?25h[10;9H[?25l[29;1H/[?12l[?25hsentence_position[?25l[10;33H[?12l[?25h[?25l[29;1H?[10;9H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;17H[?12l[?25h[?25l[29;1H?sentence_position[2;19H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* word = sen[0] (sentence_position = 0„ÇÜ„Åà) */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;17H[?12l[?25h[?25l[29;1H?sentence_position[4;58H[?12l[?25h[?25l[46m([25C)[4;57H[?12l[?25h[?25l[m([25C)[4;56H[?12l[?25h[?25l [46m([25C)[4;57H[?12l[?25h[?25l[m([25C)[4;58H[?12l[?25hsentence_position[?25l[46m([25C)[4;57H[?12l[?25h[?25l[m([25C)[4;56H[?12l[?25h[?25l[46m[[m0[46m][?12l[?25h[?25l[m[0][?12l[?25h[?25l[46m[[m0[46m][?12l[?25h[?25l[m[0][?12l[?25h[?25l[29;1H[1m-- INSERT --[m[29;13H[K[4;44H[?12l[?25h[?25l[5;28r[5;1H[L[1;29r[4;42H ÊúÄÂàù„ÅØword = sen[0] (sentence_position = 0„ÇÜ„Åà))[5;1H[93m    [m */[4;49H[?12l[?25hw[6;34H[4;50Hord = se[?25ln[46m[[m0[46m][m[27C))[5;1H[93m [4;59H[?12l[?25h[?25l[m[30C))[5;1H[93m [4;60H[?12l[?25h[?25l[m[29C))[5;1H[93m [4;61H[?12l[?25h[?25l[m[28C))[5;1H[93m [4;62H[?12l[?25h[m[29;1H[K[4;61H[?25l[28C))[5;1H[93m [4;61H[?12l[?25h[?25l[m[0][27C))[5;1H[93m [4;62H[?12l[?25h[?25l[m][46m([msentence_position = 0„ÇÜ„Åà[46m)[m  [5;1H[93m    [m*/[5;7H[K[4;62H[?12l[?25h[?25l]sentence_position = 0„ÇÜ„Åà) **[5;1H[93m    [m/[5;6H[K[4;62H[?12l[?25h[?25l[4;28r[28;1H
[1;29r[4;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0]entence_position = 0„ÇÜ„Åà) */[28;1H[93m440 [m[9C // Propagate hidden -> output[4;62H[?12l[?25h[?25l]ntence_position = 0„ÇÜ„Åà) */[4;89H[K[4;62H[?12l[?25h[?25l]tence_position = 0„ÇÜ„Åà) */[4;88H[K[4;62H[?12l[?25h[?25l]ence_position = 0„ÇÜ„Åà) */[4;87H[K[4;62H[?12l[?25h[?25l]nce_position = 0„ÇÜ„Åà) */[4;86H[K[4;62H[?12l[?25h[?25l]ce_position = 0„ÇÜ„Åà) */[4;85H[K[4;62H[?12l[?25h[?25l]e_position = 0„ÇÜ„Åà) */[4;84H[K[4;62H[?12l[?25h[?25l]_position = 0„ÇÜ„Åà) */[4;83H[K[4;62H[?12l[?25h[?25l]position = 0„ÇÜ„Åà) */[4;82H[K[4;62H[?12l[?25h[?25l]osition = 0„ÇÜ„Åà) */[4;81H[K[4;62H[?12l[?25h[?25l]sition = 0„ÇÜ„Åà) */[4;80H[K[4;62H[?12l[?25h[?25l]ition = 0„ÇÜ„Åà) */[4;79H[K[4;62H[?12l[?25h[?25l]tion = 0„ÇÜ„Åà) */[4;78H[K[4;62H[?12l[?25h[?25l]ion = 0„ÇÜ„Åà) */[4;77H[K[4;62H[?12l[?25h[?25l]on = 0„ÇÜ„Åà) */[4;76H[K[4;62H[?12l[?25h[?25l]n = 0„ÇÜ„Åà) */[4;75H[K[4;62H[?12l[?25h[?25l] = 0„ÇÜ„Åà) */[4;74H[K[4;62H[?12l[?25h[?25l]= 0„ÇÜ„Åà) */[4;73H[K[4;62H[?12l[?25h[?25l] 0„ÇÜ„Åà) */[4;72H[K[4;62H[?12l[?25h[?25l]0„ÇÜ„Åà) */[4;71H[K[4;62H[?12l[?25h[?25l]„ÇÜ„Åà) */[4;70H[K[4;62H[?12l[?25h[?25l„Åà) */[4;68H[K[4;62H[?12l[?25h[?25l]) */[4;66H[K[4;62H[?12l[?25h[?25l] */[4;65H[K[4;62H[?12l[?25h[5;33H[6;54H[7;55H[8;62H[9;62H[10;61H[11;25H[12;17H[13;62H[14;47H[15;32H[?25l[29;1H[1m-- INSERT --[15;33H[?12l[?25h[14;33H[15;33H[14;33H[13;33H[12;18H[11;26H[12;18H[13;33H[12;18H[13;33H[14;33H[15;33H[16;33H[m[29;1H[K[16;32H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output[14;9H[?12l[?25h[15;9H[17;9H[18;9H[19;9H[20;9H[19;9H[18;9H[17;9H    c = sentence_position - window + a;[18;32H[?25l[29;1H[1m-- INSERT --[18;33H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l c */[?12l[?25h[?25lc< */[?12l[?25h[?25lc */[18;41H[K[18;38H[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h */[29;1H[K[18;42H[?25l[?12l[?25h[18;13H[?25l[29;1H/[?12l[?25hwindow[?25l[27m[m[H[2J[1;1H[93m627 
628 [mint main(int argc, char **argv) { /* mainÈñ¢Êï∞Ôºå703Ë°åÁõÆ„Åæ„Åß */
[93m629 [m  int i;
[93m630 [m  if (argc == 1) {
[93m631 [m    printf("WORD VECTOR estimation toolkit v 0.1c\n\n");
[93m632 [m    printf("Options:\n");
[93m633 [m    printf("Parameters for training:\n");
[93m634 [m    printf("\t-train <file>\n");
[93m635 [m    printf("\t\tUse text data from <file> to train the model\n");
[93m636 [m    printf("\t-output <file>\n");
[93m637 [m    printf("\t\tUse <file> to save the resulting word vectors / word clusters\n");
[93m638 [m    printf("\t-size <int>\n");
[93m639 [m    printf("\t\tSet size of word vectors; default is 100\n");
[93m640 [m    printf("\t-window <int>\n");
[93m641 [m    printf("\t\tSet max skip length between words; default is 5\n");
[93m642 [m    printf("\t-sample <float>\n");
[93m643 [m    printf("\t\tSet threshold for occurrence of words. Those that appear with higher  [18;1H[93m    [mfrequency in the training data\n");
[93m644 [m    printf("\t\twill be randomly down-sampled; default is 1e-3, useful range is (0, 11[20;1H[93m    [me-5)\n");
[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([25;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");[14;20H[?12l[?25h[?25l[29;1H/window[27m[m[H[2J[1;1H[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[9;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");
[93m668 [m    printf("\t\tUse the continuous bag of words model; default is 1 (use 0 for skip-gg[12;1H[93m    [mram model)\n");
[93m669 [m    printf("\nExamples:\n");
[93m670 [m    printf("./word2vec -train data.txt -output vec.txt -size 200 -window 5 -sample 1ee[15;1H[93m    [m-4 -negative 5 -hs 0 -binary 0 -cbow 1 -iter 3\n\n");
[93m671 [m    return 0;
[93m672 [m  }
[93m673 [m  output_file[0] = 0;
[93m674 [m  save_vocab_file[0] = 0;
[93m675 [m  read_vocab_file[0] = 0;
[93m676 [m  if ((i = ArgPos((char *)"-size", argc, argv)) > 0) layer1_size = atoi(argv[i + 1]);[22;1H[93m677 [m  if ((i = ArgPos((char *)"-train", argc, argv)) > 0) strcpy(train_file, argv[i + 1]))[23;1H[93m    [m;
[93m678 [m  if ((i = ArgPos((char *)"-save-vocab", argc, argv)) > 0) strcpy(save_vocab_file, arr[25;1H[93m    [mgv[i + 1]);
[93m679 [m  if ((i = ArgPos((char *)"-read-vocab", argc, argv)) > 0) strcpy(read_vocab_file, arr[27;1H[93m    [mgv[i + 1]);
[93m680 [m  if ((i = ArgPos((char *)"-debug", argc, argv)) > 0) debug_mode = atoi(argv[i + 1]);[14;71H[?12l[?25h[?25l[29;1H?window[27m[m[H[2J[1;1H[93m627 
628 [mint main(int argc, char **argv) { /* mainÈñ¢Êï∞Ôºå703Ë°åÁõÆ„Åæ„Åß */
[93m629 [m  int i;
[93m630 [m  if (argc == 1) {
[93m631 [m    printf("WORD VECTOR estimation toolkit v 0.1c\n\n");
[93m632 [m    printf("Options:\n");
[93m633 [m    printf("Parameters for training:\n");
[93m634 [m    printf("\t-train <file>\n");
[93m635 [m    printf("\t\tUse text data from <file> to train the model\n");
[93m636 [m    printf("\t-output <file>\n");
[93m637 [m    printf("\t\tUse <file> to save the resulting word vectors / word clusters\n");
[93m638 [m    printf("\t-size <int>\n");
[93m639 [m    printf("\t\tSet size of word vectors; default is 100\n");
[93m640 [m    printf("\t-window <int>\n");
[93m641 [m    printf("\t\tSet max skip length between words; default is 5\n");
[93m642 [m    printf("\t-sample <float>\n");
[93m643 [m    printf("\t\tSet threshold for occurrence of words. Those that appear with higher  [18;1H[93m    [mfrequency in the training data\n");
[93m644 [m    printf("\t\twill be randomly down-sampled; default is 1e-3, useful range is (0, 11[20;1H[93m    [me-5)\n");
[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([25;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");[14;20H[?12l[?25h[?25l[29;1H?window[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue; /* c < */
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;37H[?12l[?25h[?25l[29;1H?window[13;77H[?12l[?25h[?25l[29;1H[13;48H[?12l[?25h[?25l[29;1H[13;29H[?12l[?25h[?25l[29;1H[12;61H[?12l[?25h[?25l[29;1H[12;27H[?12l[?25h[?25l[29;1H[2;39H[?12l[?25h[?25l[29;1H[1;63H[?12l[?25h[?25l[29;1H[1;29H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[20;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[14;37H[?12l[?25h[?25l[29;1H?window[13;61H[?12l[?25h[?25l[29;1H[13;27H[?12l[?25h[?25l[29;1H[9;27H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */[14;47H[?12l[?25h[?25l[29;1H/window[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;27H[?12l[?25h[?25l[29;1H?window[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */[14;47H[?12l[?25h[?25l[29;1H/window[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;27H[?12l[?25h[?25l[29;1H?window[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */[14;47H[?12l[?25h[?25l[29;1H/window[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;27H[?12l[?25hwindow; /* [?25l[29;1H[1m-- INSERT --[14;40H[?12l[?25h[?25l[m 4„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;39H[?12l[?25h[?25l41„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;40H[?12l[?25h[?25l1Ë°åÁõÆ„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;44H[?12l[?25h[?25l„Çà„Çä„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;48H[?12l[?25h[?25lw„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;49H[?12l[?25h[?25lwi„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;50H[?12l[?25h[?25lin„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;51H[?12l[?25h[?25lnd„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;52H[?12l[?25h[?25ldo„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;53H[?12l[?25h[?25low„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;54H[?12l[?25h[?25lw „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;55H[?12l[?25h[?25l =„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;56H[?12l[?25h[?25l= „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ */[14;57H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;56H 5„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ **[15;1H[93m    [m/[14;58H[?12l[?25h[?25l5,„Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ  [15;1H[93m    [m*/[14;59H[?12l[?25h[?25l, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[15;4H[93m [m */[14;60H[?12l[?25h[29;1H[K[14;59H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hnext_random[?25l[27m[m[H[2J[1;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [26;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[14;17H[?12l[?25h[?25l[29;1H?next_random[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[15;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[26;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }[14;13H[?12l[?25h[?25l[29;1H?next_random[13;23H[?12l[?25h[?25l[29;1H[13;9H[?12l[?25h[?25l[29;1H[1;28r[1;1H[13L[1;29r[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[6;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[9;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[12;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;[29;1H[K[1;26H[?12l[?25h[?25l[29;1H?next_random[1;28r[1;1H[L[1;29r[1;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;1H[94m@                                                                                        [m[29;1H[K[1;29H[?12l[?25h[?25l[29;1H?next_random[1;15H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[28;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,[14;26H[?12l[?25h[?25l[29;1H/next_random[27m[m[H[2J[1;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[3;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [5;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[10;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [13;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[20;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[23;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [26;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;[14;15H[?12l[?25h[?25l[29;1H/next_random[14;29H[?12l[?25h[?25l[29;1H[15;26H[?12l[?25h[?25l[29;1H[1;28r[1;1H[13M[1;29r[16;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[28;1H[94m@                                                                                        [m[29;1H[K[27;9H[?12l[?25h[?25l

/next_random[27;23H[?12l[?25h[?25l

[1;28r[28;1H
[1;29r[27;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [28;1H[93m    [m */[29;1H[K[27;13H[?12l[?25h[?25l

/next_random[27m[m[H[2J[1;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [26;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[14;17H[?12l[?25h[?25l[29;1H/next_random[14;31H[?12l[?25h[?25l[13;22H[46m{[19;15H}[13;22H[?12l[?25h[?25l[m{[19;15H}[12;26H[?12l[?25h[11;30H[?25l[10;27H[46m{[13;15H}[10;27H[?12l[?25h[?25l[m{[13;15H}[9;31H[?12l[?25h[8;31H[7;13H[6;31H[5;31H[4;31H[3;31H[2;31H[1;31H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[29;1H[K[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;1H[94m@                                                                                        [1;31H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m440 [m[9C // Propagate hidden -> output[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m438 [m[9C f = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m435 [m      if (cw) {[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m434 [m      }[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m433 [m[7C cw++;[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m431 [m[7C if (last_word == -1) continue;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m430 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m429 [m[7C if (c >= sentence_length) continue;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m428 [m[7C if (c < 0) continue;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m427 [m[7C c = sentence_position - window + a;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m425 [m      cw = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m424 [m      // in -> hidden[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[1;31H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[2;1H[93m    [m */[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m418 [m    if (word == -1) continue;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[1;31H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m415 [m      continue;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[1;31H[?12l[?25h[2;19H[3;27H[4;31H[5;31H[6;31H[7;31H[8;31H[9;31H[11;31H[12;25H[13;17H[14;31H[15;31H[16;31H[17;31H[18;31H[19;31H[20;31H[22;17H[?25l[14;69H[46m{[23;11H}[?12l[?25h[?25l[m[14;69H{[23;11H}[24;19H[?12l[?25h[25;31H[26;31H[27;20H[28;31H[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m447 [m[9C // Propagate errors output -> hidden[28;31H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output[27;31H[?12l[?25h[28;31H[?25l[1;28r[28;1H
[1;29r[28;1H[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[14;63H[46m{[m[28;1H[93m451 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[13;63H{[27;13H}
[93m452 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m454 [m[9C if (d == 0) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m455 [m[11C target = word;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m456 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m457 [m[9C } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[28;31H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m459 [m[11C target = table[46m[[m(next_random >> 16) % table_size[46m][m;
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[27;31H[?12l[?25h[?25l[[32C][28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m461 [m[11C if (target == word) continue;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m462 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m463 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m464 [m[9C l2 = target * layer1_size;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m465 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;31H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[28;1H[93m472 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m473 [m[7C // hidden -> in[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m475 [m[9C c = sentence_position - window + a;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m476 [m[9C if (c < 0) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m477 [m[9C if (c >= sentence_length) continue;[28;31H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m478 [m[9C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m479 [m[9C if (last_word == -1) continue;[28;31H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[28;1H[93m    [me[c];[27;31H[?12l[?25h[?25l

?next_random[6;43H[?12l[?25h[?25l[29;1H[5;33H[?12l[?25h[?25l[29;1H[4;31H[?12l[?25h[?25l[29;1H[4;17H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[15;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[26;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }[14;13H[?12l[?25h[?25l[29;1H?next_random[13;23H[?12l[?25h[?25l[29;1H[13;9H[?12l[?25h[?25l[29;1H[1;28r[1;1H[13L[1;29r[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [6;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[9;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[12;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;[29;1H[K[1;26H[?12l[?25h[?25l[29;1H/next_random[26;9H[?12l[?25h[64C[?25l


[1m-- INSERT --[26;74H[?12l[?25h[?25l[m;/[?12l[?25h[?25l[26;74H[K[26;74H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l Á∑öÂΩ¢ÂêàÂêåÊ≥ï **[27;1H[93m    [m/[27;9H[K[28;1H[94m@                                                                                        [26;88H[?12l[?25h[?25l[m„Åß [27;1H[93m    [m */[?12l[?25h[?25l[93m [m‰π±Êï∞ */[?12l[?25h[?25ln */[?12l[?25h[?25lne */[?12l[?25h[?25lez */[?12l[?25h[?25le */[27;14H[K[27;11H[?12l[?25h[?25lex */[?12l[?25h[?25lxt */[?12l[?25h[?25lt_ */[?12l[?25h[?25l_r */[?12l[?25h[?25lra */[?12l[?25h[?25lan */[?12l[?25h[?25lnd */[?12l[?25h[?25ldo */[?12l[?25h[?25lom */[?12l[?25h[?25lm„Çí */[?12l[?25h[?25lÁîüÊàê */[?12l[?25h[29;1H[K[27;24H[?25l[?12l[?25h[?25l

/[?12l[?25h484[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: 484[m[29;29H[K[27;24H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25h484[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[15;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[16;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue; /* c < */
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;11H[?12l[?25h[16;11H[17;11H[18;11H[19;11H[20;11H[21;11H[22;11H[23;11H[24;11H[25;11H[26;11H[27;11H[28;11H[?25l[1;28r[28;1H
[1;29r[28;1H[93m498 [m[9C if (f <= -MAX_EXP) continue;[28;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue;[28;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[28;11H[?12l[?25h[27;11H[26;11H[25;11H[24;11H[23;11H[22;11H[21;11H[20;11H[19;11H[18;11H[17;11H[16;11H[15;11H[14;11H [13;12H if[?25l [46m([mc < 0[46m)[13;16H[?12l[?25h[?25l[m(c < 0)[?12l[?25hc < [?25l[46m([mc < 0[46m)[?12l[?25h[?25l[m(c < 0)[?12l[?25h continue; /* c < [?25l[29;1H/[?12l[?25hwindow[?25l[27m[m[H[2J[1;1H[93m627 
628 [mint main(int argc, char **argv) { /* mainÈñ¢Êï∞Ôºå703Ë°åÁõÆ„Åæ„Åß */
[93m629 [m  int i;
[93m630 [m  if (argc == 1) {
[93m631 [m    printf("WORD VECTOR estimation toolkit v 0.1c\n\n");
[93m632 [m    printf("Options:\n");
[93m633 [m    printf("Parameters for training:\n");
[93m634 [m    printf("\t-train <file>\n");
[93m635 [m    printf("\t\tUse text data from <file> to train the model\n");
[93m636 [m    printf("\t-output <file>\n");
[93m637 [m    printf("\t\tUse <file> to save the resulting word vectors / word clusters\n");
[93m638 [m    printf("\t-size <int>\n");
[93m639 [m    printf("\t\tSet size of word vectors; default is 100\n");
[93m640 [m    printf("\t-window <int>\n");
[93m641 [m    printf("\t\tSet max skip length between words; default is 5\n");
[93m642 [m    printf("\t-sample <float>\n");
[93m643 [m    printf("\t\tSet threshold for occurrence of words. Those that appear with higher  [18;1H[93m    [mfrequency in the training data\n");
[93m644 [m    printf("\t\twill be randomly down-sampled; default is 1e-3, useful range is (0, 11[20;1H[93m    [me-5)\n");
[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([25;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");[14;20H[?12l[?25h[?25l[29;1H/window[27m[m[H[2J[1;1H[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[9;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");
[93m668 [m    printf("\t\tUse the continuous bag of words model; default is 1 (use 0 for skip-gg[12;1H[93m    [mram model)\n");
[93m669 [m    printf("\nExamples:\n");
[93m670 [m    printf("./word2vec -train data.txt -output vec.txt -size 200 -window 5 -sample 1ee[15;1H[93m    [m-4 -negative 5 -hs 0 -binary 0 -cbow 1 -iter 3\n\n");
[93m671 [m    return 0;
[93m672 [m  }
[93m673 [m  output_file[0] = 0;
[93m674 [m  save_vocab_file[0] = 0;
[93m675 [m  read_vocab_file[0] = 0;
[93m676 [m  if ((i = ArgPos((char *)"-size", argc, argv)) > 0) layer1_size = atoi(argv[i + 1]);[22;1H[93m677 [m  if ((i = ArgPos((char *)"-train", argc, argv)) > 0) strcpy(train_file, argv[i + 1]))[23;1H[93m    [m;
[93m678 [m  if ((i = ArgPos((char *)"-save-vocab", argc, argv)) > 0) strcpy(save_vocab_file, arr[25;1H[93m    [mgv[i + 1]);
[93m679 [m  if ((i = ArgPos((char *)"-read-vocab", argc, argv)) > 0) strcpy(read_vocab_file, arr[27;1H[93m    [mgv[i + 1]);
[93m680 [m  if ((i = ArgPos((char *)"-debug", argc, argv)) > 0) debug_mode = atoi(argv[i + 1]);[14;71H[?12l[?25h[?25l[29;1H/window[1;28r[1;1H[7M[1;29r[22;1H[93m681 [m  if ((i = ArgPos((char *)"-binary", argc, argv)) > 0) binary = atoi(argv[i + 1]);
[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[27;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);[29;1H[K[28;33H[?12l[?25h[?25l
/window[28;60H[?12l[?25h[?25l
[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;47H[?12l[?25h[?25l[m[29;1H/window[29;8H[K[29;1H[27m[m[H[2J[1;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[13;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[15;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[26;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }[14;27H[?12l[?25h[?25l[29;1H/window[14;48H[?12l[?25h[?25l[29;1H[19;27H[?12l[?25h[?25l[29;1H[19;61H[?12l[?25h[?25l[29;1H[20;37H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [9;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[21;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[26;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[27;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue; /* c < */[14;29H[?12l[?25h[?25l[29;1H/window[14;63H[?12l[?25h[?25l[29;1H[15;39H[?12l[?25h[?25l[29;1H[25;27H[?12l[?25h[?25l[29;1H[25;61H[?12l[?25h[?25l[29;1H[26;29H[?12l[?25h[?25l


[26;48H[?12l[?25h[?25l


[26;77H[?12l[?25h[?25l


[27;37H[?12l[?25h[?25l

[27m[m[H[2J[1;1H[93m627 
628 [mint main(int argc, char **argv) { /* mainÈñ¢Êï∞Ôºå703Ë°åÁõÆ„Åæ„Åß */
[93m629 [m  int i;
[93m630 [m  if (argc == 1) {
[93m631 [m    printf("WORD VECTOR estimation toolkit v 0.1c\n\n");
[93m632 [m    printf("Options:\n");
[93m633 [m    printf("Parameters for training:\n");
[93m634 [m    printf("\t-train <file>\n");
[93m635 [m    printf("\t\tUse text data from <file> to train the model\n");
[93m636 [m    printf("\t-output <file>\n");
[93m637 [m    printf("\t\tUse <file> to save the resulting word vectors / word clusters\n");
[93m638 [m    printf("\t-size <int>\n");
[93m639 [m    printf("\t\tSet size of word vectors; default is 100\n");
[93m640 [m    printf("\t-window <int>\n");
[93m641 [m    printf("\t\tSet max skip length between words; default is 5\n");
[93m642 [m    printf("\t-sample <float>\n");
[93m643 [m    printf("\t\tSet threshold for occurrence of words. Those that appear with higher  [18;1H[93m    [mfrequency in the training data\n");
[93m644 [m    printf("\t\twill be randomly down-sampled; default is 1e-3, useful range is (0, 11[20;1H[93m    [me-5)\n");
[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([25;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");[14;20H[?12l[?25h[?25l[29;1H?window[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a;
[93m486 [m[7C if (c < 0) continue; /* c < */
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;37H[?12l[?25hwindow + a;[?25l[29;1H[1m-- INSERT --[14;49H[?12l[?25h[?25l[m /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 4 */[?12l[?25h[?25l41 */[?12l[?25h[?25l1Ë°åÁõÆ */[?12l[?25h[?25l„Çà„Çä */[?12l[?25h[?25lw */[?12l[?25h[?25lwi */[?12l[?25h[?25lin */[?12l[?25h[?25lnd */[?12l[?25h[?25ldo */[?12l[?25h[?25low */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l  */[?12l[?25h[?25l 5 */[?12l[?25h[15;43H[?25l[15;42H[K[15;42H[?12l[?25h[?25l[15;41H[K[15;41H[?12l[?25h[?25l[?12l[?25h[?25l[15;39H[K[15;39H[?12l[?25h[?25l[?12l[?25h[?25l[15;37H[K[15;37H[?12l[?25h[?25l[?12l[?25h[?25l[15;35H[K[15;35H[?12l[?25h[?25l[15;34H[K[15;34H[?12l[?25h[?25l[?12l[?25h[14;33Hn - window + a; /* 41[2C[2C[2C[2Cwindow [15;33H[16;48H[29;1H[K[16;47H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hsentence_length[?25l[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[14;34H[?12l[?25h[?25l[29;1H/sentence_length[15;11H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;47H[?12l[?25h[?25l[m[29;1H/sentence_length[29;17H[K[29;1H[1;28r[1;1H[12M[1;29r[17;1H[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[19;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[21;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[25;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß) */[29;1H[K[28;13H[?12l[?25h[?25l
?sentence_length[2;47H[?12l[?25h[?25l[29;1H/[28;13H[?12l[?25h[?25l
?[2;47H[?12l[?25h[?25l[29;1H/[28;13H[?12l[?25h[?25l
[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[17;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[20;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[23;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[14;17H[?12l[?25h[?25l[29;1H/sentence_length[15;13H[?12l[?25h[?25l[29;1H?[14;17H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß) */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[4;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[29;1H[K[1;13H[?12l[?25h[?25l[29;1H?sentence_length[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[14;47H[?12l[?25h[?25l[29;1H/sentence_length[1;28r[1;1H[12M[1;29r[17;1H[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[19;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[21;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[25;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß) */[29;1H[K[28;13H[?12l[?25hsentence_length == [?25l[28;12H[46m([20C)[?12l[?25h[?25l[m[28;12H([20C)[?12l[?25h { /* if[?25l[2C[46m([11C)[28;44H[?12l[?25h[?25l[m([11C)[28;45H[?12l[?25h406[2C[2C[2C[?25l[28;44H[46m([11C)[?12l[?25h[?25l[m[28;44H([11C)[?12l[?25h[?25l
[1m-- INSERT --[28;58H[?12l[?25h[?25l[m[28;44H[46m([11C)[?12l[?25h[?25l[m[28;44H([11C), */[?12l[?25h[?25l,3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l64 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Çà„Çä */[?12l[?25h[?25lÂΩìÂàù„ÅØ */[?12l[?25h[?25ls */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_l */[?12l[?25h[?25lle */[?12l[?25h[?25len */[28;87H[?12l[?25h[?25lng *[28;1H[94m@                                                                                        [1;28r[m[28;1H
[1;29r[27;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_leng **[28;1H[93m    [m/[27;88H[?12l[?25h[?25lgt  [28;1H[93m    [m*/[27;89H[?12l[?25h[?25lthh[28;1H[93m    [m */[?12l[?25h[?25l[93m [m= */[?12l[?25h[?25l== */[?12l[?25h[?25l=0 */[?12l[?25h[?25l[93m [m ==0 */[?12l[?25h==[?25l= 0 */[?12l[?25h0[?25l0„Å†„Åå */[?12l[?25h[29;1H[K[28;12H[?25l[?12l[?25h[?25l
/sentence_length[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++;
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [17;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      }
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[20;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[23;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[14;17H[?12l[?25h[?25l[29;1H/sentence_length[15;13H[?12l[?25h[14;13H[?25l[8;29H[46m{[13;13H}[?12l[?25h[?25l[29;1H[m[8;29H{[13;13H}[14;17H[?12l[?25h[?25l[29;1H[15;13H[?12l[?25h[?25l[29;1H[16;17H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2M[1;29r[27;1H[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[29;1H[K[27;11H[?12l[?25h[26;11H[25;11H[24;11H[23;11H[22;11H[20;11H[19;11H[17;11H[16;11H[?25l[1;28r[1;1H[5L[1;29r[1;1H[93m389 [m      while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[3;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [5;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[21;11H[46m}[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[21;11H[?12l[?25h[?25l[1;21H[?12l[?25h[?25l[m[29;1H/sentence_length[1;21H{[21;11H}[17;17H[?12l[?25h[?25l[29;1H?[1;28r[1;1H[2L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå */[29;1H[K[1;75H[?12l[?25h[3;51H[4;75H[3;51H[?25l[3;36H[46m([11C)[?12l[?25h[?25l[m[3;36H([11C)[?12l[?25h[?25l[46m([11C)[3;36H[?12l[?25h[?25l[m([11C)[3;34H[?12l[?25h[?25l[46m{[23;11H}[3;21H[?12l[?25h[?25l[m{[23;11H}[4;21H[?12l[?25h[?25l[68C[94m>>[m[5;1H[93m [m[6;21H[46m([mfi[46m)[m[64C  [7;1H[93m [6;21H[?12l[?25h[?25l[m(fi)[64C  [7;1H[93m [8;21H[?12l[?25h[9;21H[10;21H[11;21H[13;21H[14;21H[16;21H[17;21H[?25l[m[13;29H[46m{[18;13H}[?12l[?25h[?25l[m[13;29H{[18;13H}[19;21H[?12l[?25h[20;21H[21;21H[?25l[3;21H[46m{[23;11H}[?12l[?25h[?25l[m[29;1H[1m-- INSERT --[23;12H[?12l[?25h[?25l[m[3;21H{[23;11H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l 3[?12l[?25h[?25l38[?12l[?25h[?25l89[?12l[?25h[?25l9Ë°åÁõÆ[?12l[?25h[?25l„Åã„Çâ[?12l[?25h[?25l„ÅÆ[?12l[?25h[?25lÁÑ°Èôê„É´„Éº„Éó[?12l[?25h[?25l„Åì„Åì„Åæ„Åß[?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[29;1H[K[23;50H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h484[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[15;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[16;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[14;11H[?12l[?25h[16;11H[17;11H[18;11H[19;11H[20;11H[21;11H[20;11H[19;11H[18;11H[17;11H  if[?25l [46m([mc < 0[46m)[17;16H[?12l[?25h[?25l[m(c < 0)[?12l[?25hc < [?25l[46m([mc < 0[46m)[?12l[?25h[?25l[m(c < 0)[?12l[?25h continue[18;32Hengt[?25l[18;16H[46m([20C)[?12l[?25h[?25l[m[18;16H([20C)[?12l[?25h contin[?25l[29;1H/[?12l[?25hsentence_length[?25l[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[14;34H[?12l[?25h[?25l[29;1H?sentence_length[27m[m[H[2J[1;1H[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[6;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[11;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[12;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[14;22H[?12l[?25h[?25l[29;1H?sentence_length[2;24H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [5;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [7;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[18;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;[14;22H[?12l[?25h[?25l[29;1H?sentence_length[1;28r[1;1H[5L[1;29r[1;1H[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[29;1H[K[1;11H[?12l[?25h[?25l[29;1H?sentence_length[1;28r[1;1H[13L[1;29r[1;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[2;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[5;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[8;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[29;1H[K[1;17H[?12l[?25h[?25l[29;1H?sentence_length[1;28r[1;1H[L[1;29r[1;1H[93m402 [m[7C sentence_length++;[29;1H[K[1;13H[?12l[?25h[?25l[29;1H?sentence_length[1;28r[1;1H[L[1;29r[1;1H[93m401 [m[7C sen[sentence_length] = word;[29;1H[K[1;17H[?12l[?25h[?25l[29;1H?sentence_length[27m[m[H[2J[1;1H[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[5;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[7;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[11;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[15;1H[93m    [m == 0„Å†„Åå */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[18;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[20;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[25;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [28;1H[93m    [mtrain_words) / vocab[word].cn;[14;75H[?12l[?25h[?25l[29;1H/sentence_length[1;28r[1;1H[4M[1;29r[25;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;[29;1H[K[28;17H[?12l[?25h[?25l
/sentence_length[1;28r[28;1H
[1;29r[28;1H[93m402 [m[7C sentence_length++;[29;1H[K[28;13H[?12l[?25h[?25l
:[?12l[?25h388[?25l[9;9H[?12l[?25hif[?25l [46m([20C)[m[55Chh[10;1H[93m [9;12H[?12l[?25h[?25l[m([20C)[55Chh[10;1H[93m [9;13H[?12l[?25h[msentence_length == [?25l[9;12H[46m([20C)[m[55Chh[10;1H[93m [9;33H[?12l[?25h[?25l[m[9;12H([20C)[55Chh[10;1H[93m [9;34H[?12l[?25h[m [?25l[1;28r[1;1H[6M[1;29r[3;35H[46m{[m[53Chh[4;1H[93m [23;1H403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [24;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[27;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    [46m}[m /* 388Ë°åÁõÆ„Åã„Çâ */[29;1H[K[28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[54Chh[4;1H[93m [28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m[54Chh[4;1H[93m [28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m[54Chh[4;1H[93m [28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m[54Chh[4;1H[93m [28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m[54Chh[4;1H[93m [28;9H[?12l[?25h[?25l[3;35H[?12l[?25h[?25l[m{[53Chh[4;1H[93m [m[28;9H}[2;9H[?12l[?25h[?25l[3;35H[46m{[m[53Chh[4;1H[93m [m[28;9H[46m}[3;35H[?12l[?25h[?25l[m{[53Chh[4;1H[93m [m[28;9H}[3;34H[?12l[?25h[?25l[3;12H[46m([20C)[m[55Chh[4;1H[93m [3;33H[?12l[?25h[?25l[m[3;12H([20C)[55Chh[4;1H[93m [3;32H[?12l[?25h[me[4;16H[?25l[29;1H[1m-- INSERT --[4;15H[?12l[?25h[?25l[m3 */[?12l[?25h[?25l38 */[?12l[?25h[?25l89 */[?12l[?25h[?25l9g */[?12l[?25h[?25l9 */[4;20H[K[4;17H[?12l[?25h[?25l9Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ„ÅÆ */[?12l[?25h[?25lÁÑ°Èôê„É´„Éº„Éó„Åß */[?12l[?25h[?25ls */[?12l[?25h[?25lst */[?12l[?25h[?25ls */[4;43H[K[4;40H[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25ln */[4;45H[K[4;42H[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_l */[?12l[?25h[?25lle */[?12l[?25h[?25len */[?12l[?25h[?25lng */[?12l[?25h[?25lgt */[?12l[?25h[?25lth */[?12l[?25h[?25lh„Åå */[?12l[?25h[?25l1 */[?12l[?25h[?25l1‰ª•‰∏ä */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25l„Å™„Çã */[?12l[?25h[5;52H[7;29H[9;18H[10;38H[11;26H[12;72H[14;10H[?25l[15;29H[46m{[20;13H}[15;30H[?12l[?25h[?25l[m{[20;13H}[17;35H[?12l[?25h[18;80H[19;72H[?25l[15;29H[46m{[20;13H}[?12l[?25h[?25l[m[15;29H{[20;13H}[21;41H[?12l[?25h[22;31H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l „Åì„Åì„Åß */[?12l[?25h[?25ls */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_l */[?12l[?25h[?25lle */[?12l[?25h[?25len */[?12l[?25h[?25lng */[?12l[?25h[?25lgt */[?12l[?25h[?25lth */[?12l[?25h[?25lh„Åå */[?12l[?25h[?25lÂ¢ó„Åà„Çã */[?12l[?25h[29;1H[K[22;62H[?25l[?12l[?25h[22;13H[?25l[29;1H/[?12l[?25hMAT[?25l[29;4H[K[29;4H[?12l[?25hX_SENTENCE_LENGTH[?25l[23;36H[?12l[?25h[?25l[29;1H?[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;58H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[18;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[27;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */[14;13H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[5;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [8;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[15;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[18;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[21;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;36H[?12l[?25h[?25l[m[29;1H?MAX_SENTENCE_LENGTH[29;21H[K[29;1H[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;58H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[18;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[27;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */[14;13H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[5;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [8;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[15;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[18;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[21;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;36H[?12l[?25h[?25l[m[29;1H?MAX_SENTENCE_LENGTH[29;21H[K[29;1H[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;58H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[18;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[27;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */[14;13H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[5;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [8;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[15;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[18;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[21;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;36H[?12l[?25h[?25l[m[29;1H?MAX_SENTENCE_LENGTH[29;21H[K[29;1H[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;58H[?12l[?25h[?25l[29;1H?MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[18;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[27;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */[14;13H[?12l[?25hMAX_SENTENCE_LENGTH 100[?25l[29;1H[1m-- INSERT --[14;37H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l65 */[?12l[?25h[?25l5Ë°åÁõÆ */[?12l[?25h[?25l„Å® */[?12l[?25h[?25l4 */[?12l[?25h[?25l40 */[?12l[?25h[?25l03 */[?12l[?25h[?25l3Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25l‰ΩøÁî® */[?12l[?25h[29;1H[K[14;61H[?25l[?12l[?25h[?25l[29;1H/MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;58H[?12l[?25h[?25l[29;1H/MAX_SENTENCE_LENGTH[27m[m[H[2J[1;1H[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[5;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [8;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[15;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[18;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[21;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[14;36H[?12l[?25hMAX_SENTENCE_LENGT[?25l[14;16H[46m([38C)[?12l[?25h[?25l[m[14;16H([38C)[?12l[?25h break; /* [?25l[29;1H[1m-- INSERT --[14;68H[?12l[?25h[16;51H[14;67H[m389[2C[2C[2C[2C[2C[2C[2C[2C[2C[15;5H[2C[2C[2C[2C [29;1H[K[15;13H[?25l[?12l[?25h[?25l[29;1H/MAX_SENTENCE_LENGTH[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000 /* 365Ë°åÁõÆ„Å®403Ë°åÁõÆ„Åß‰ΩøÁî® */
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[18;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[27;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;13H[?12l[?25h[?25l[m[29;1H?MAX_SENTENCE_LENGTH[29;21H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[5;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [8;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[15;1H[93m    [m„Åã„ÇâËÑ±Âá∫ */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[18;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[21;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;36H[?12l[?25h[mMAX_SENTENCE_LENGT[?25l[14;16H[46m([38C)[?12l[?25h[?25l[m[14;16H([38C)[?12l[?25h break; /* 389[2C[2C[2C[2C[2C[2C[2C[2C[2C[15;5H[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[m[29;13H[K[15;14H[?12l[?25h[?25lÔºå */[?12l[?25h[?25l2 */[?12l[?25h[?25l24 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Çà„Çä */[?12l[?25h[?25lM */[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_L */[?12l[?25h[?25lLE */[?12l[?25h[?25lEN */[?12l[?25h[?25lE */[15;34H[K[15;31H[?12l[?25h[?25lL */[15;33H[K[15;30H[?12l[?25h[?25l_ */[15;32H[K[15;29H[?12l[?25h[?25lX */[15;31H[K[15;28H[?12l[?25h[?25lA */[15;30H[K[15;27H[?12l[?25h[?25lM */[15;29H[K[15;26H[?12l[?25h[?25l */[15;28H[K[15;25H[?12l[?25h[?25lM */[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_L */[?12l[?25h[?25lLE */[?12l[?25h[?25lEN */[?12l[?25h[?25lE */[15;34H[K[15;31H[?12l[?25h[?25lL */[15;33H[K[15;30H[?12l[?25h[?25l_ */[15;32H[K[15;29H[?12l[?25h[?25l_S */[?12l[?25h[?25lSE */[?12l[?25h[?25lEN */[?12l[?25h[?25lNT */[?12l[?25h[?25lTE */[?12l[?25h[?25lEN */[?12l[?25h[?25lNC */[?12l[?25h[?25lCE */[?12l[?25h[?25lE_ */[?12l[?25h[?25l_L */[?12l[?25h[?25lLE */[?12l[?25h[?25lEN */[?12l[?25h[?25lNG */[?12l[?25h[?25lGT */[?12l[?25h[?25lTH */[?12l[?25h[29;1H[K[15;43H[?25l[?12l[?25hH[?25l[14;13H[?12l[?25hi[15;46H[16;50H[15;46H[?25l[29;1H[1m-- INSERT --[15;45H[?12l[?25h[?25l[m  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[?12l[?25h[?25l 1 */[?12l[?25h[?25l10 */[?12l[?25h[?25l00 */[?12l[?25h[?25l00 */[?12l[?25h[13;67H[12;41H[?25l[6;29H[46m{[11;13H}[?12l[?25h[?25l[m[6;29H{[11;13H}[10;72H[?12l[?25h[9;80H[8;35H[?25l[6;29H[46m{[11;13H}[6;30H[?12l[?25h[?25l[m{[11;13H}[5;10H[?12l[?25h[3;72H[2;26H[1;38H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åßsentence_length„Åå1‰ª•‰∏ä„Å´„Å™„Çã */[2;52H[?12l[?25hth[2C1[2C[2C[?25l„Å´„Å™„Çã */[2;68H[K[2;59H[?12l[?25h[?25l1„Å´„Å™„Çã */[2;66H[K[2;57H[?12l[?25h[?25l10„Å´„Å™„Çã */[2;58H[?12l[?25h[?25l00„Å´„Å™„Çã */[2;59H[?12l[?25h[?25l01„Å´„Å™„Çã */[2;60H[?12l[?25h[2C[2C[2C[?25lÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1001„Å´„Å™„Çã */[2;47H[?12l[?25h[?25ljsentence_length„Åå1001„Å´„Å™„Çã */[2;48H[?12l[?25h[?25lsentence_length„Åå1001„Å´„Å™„Çã */[2;77H[K[2;47H[?12l[?25h[29;1H[K[2;45H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hsenten[?25l[29;7H[K[29;7H[?12l[?25h[?25l[29;6H[K[29;6H[?12l[?25h[?25l[29;5H[K[29;5H[?12l[?25h[?25l[29;4H[K[29;4H[?12l[?25h[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h [2;45H[?25l[29;1H:[?12l[?25h485[?25l[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;13H[?12l[?25hc = sentence_position - window + a; /* 41[2C[2C[2C[2Cwindow = 5[?25l[29;1H/[?12l[?25hsentence/[?25l[29;10H[K[29;10H[?12l[?25h_position[?25l[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H/sentence_position[14;33H[?12l[?25h[?25l[29;1H[15;13H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [12;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [18;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[14;11H[?12l[?25h[?25l[29;1H/sentence_position[14;56H[?12l[?25h[?25l[29;1H[28;20H[?12l[?25h[?25l
[1;28r[1;1H[12M[1;29r[17;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[21;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[23;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[29;1H[K[28;17H[?12l[?25h[?25l
/sentence_position[27m[m[H[2J[1;1H[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [8;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[20;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[25;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[26;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;[14;19H[?12l[?25h[?25l[29;1H/sentence_position[26;17H[?12l[?25h[?25l


[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H/sentence_position[14;33H[?12l[?25h[?25l[29;1H[15;13H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H?sentence_position[29;19H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;13H[?12l[?25h[?25l[m[29;1H?sentence_position[29;19H[K[29;1H[13;33H[?12l[?25h[?25l[29;1H/[14;13H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;68H[?12l[?25h[?25l[m[29;1H/sentence_position[29;19H[K[29;1H[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ• */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [18;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[14;11H[?12l[?25hsentence_position = 0; /* 364[2C[2C[2Clong long sentence_position = 0[?25l[29;1H[1m-- INSERT --[14;79H[?12l[?25h[2C[2C[2C[2C[15;5H[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[?25l[m( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([m5[46m)[m */[?12l[?25h[?25l53[46m)[m */[?12l[?25h[?25l33[46m)[m */[?12l[?25h[?25l3Ë°åÁõÆ[46m)[m */[?12l[?25h[?25l„ÅÆ[46m)[m */[?12l[?25h[?25ls[46m)[m */[?12l[?25h[?25lse[46m)[m */[?12l[?25h[?25len[46m)[m */[?12l[?25h[?25lnt[46m)[m */[?12l[?25h[?25lte[46m)[m */[?12l[?25h[?25len[46m)[m */[?12l[?25h[?25lnc[46m)[m */[?12l[?25h[?25lce[46m)[m */[?12l[?25h[?25le_[46m)[m */[?12l[?25h[?25l_p[46m)[m */[?12l[?25h[?25lpo[46m)[m */[?12l[?25h[?25los[46m)[m */[?12l[?25h[?25lsi[46m)[m */[?12l[?25h[?25lit[46m)[m */[?12l[?25h[?25lto[46m)[m */[?12l[?25h[?25lt[46m)[m */[15;55H[K[15;51H[?12l[?25h[?25lti[46m)[m */[?12l[?25h[?25lio[46m)[m */[?12l[?25h[?25lon[46m)[m */[?12l[?25h[?25ln+[46m)[m */[?12l[?25h[?25l++[46m)[m */[?12l[?25h[?25l+„ÅØ[46m)[m */[?12l[?25h[?25l„Åì„Åì„Å´[46m)[m */[?12l[?25h[?25lÈüø„Åè[46m)[m */[?12l[?25h[?25lÔºü[46m)[m */[?12l[?25h[?25l[15;27H([42C)[?12l[?25h[29;1H[K[15;52H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h533[?25l[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[15;9H[16;9H[17;9H[?25l[15;51H[46m{[18;9H}[?12l[?25h[?25l[m[15;51H{[18;9H}[19;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[15;7H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) [46m{[m /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[21;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[23;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[27;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[14;17H[?12l[?25h[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [5;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[12;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[15;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [18;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[14;11H[?12l[?25h[13;11H[11;12H[13;11H[14;11H[16;11H [?25l[1;28r[1;1H[10L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) [46m{[m /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1001„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[5;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [7;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[26;9H[46m}[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m[54Chh[2;1H[93m [26;9H[?12l[?25h[?25l[m[1;35H{[53Chh[2;1H[93m [m[26;9H}[27;9H[?12l[?25h[?25l[1;35H[46m{[m[53Chh[2;1H[93m [m[26;9H[46m}[?12l[?25h[?25l[1;35H[?12l[?25h[?25l[m{[53Chh[2;1H[93m [m[26;9H}[2;76H[?12l[?25h[3;51H[5;28H[3;51H[2;76H[?25l0„Å´„Å™„Çã */[2;76H[K[2;67H[?12l[?25h[?25l[29;1H[1m-- INSERT --[2;69H[?12l[?25h[?25l[m0„Å™„Çã */[2;70H[?12l[?25h[?25l„Å™„Çã */[2;76H[K[2;69H[?12l[?25h[?25l00„Å´„Å™„Çã */[2;68H[?12l[?25h[29;1H[K[2;67H[?25l[?12l[?25h[3;51H[5;28H[7;17H[8;37H[9;25H[10;71H[12;9H[?25l[13;29H[46m{[18;13H}[13;29H[?12l[?25h[?25l[m{[18;13H}[15;34H[?12l[?25h[16;79H[17;71H[?25l[13;29H[46m{[18;13H}[?12l[?25h[?25l[m[13;29H{[18;13H}[19;40H[?12l[?25h[20;66H[19;40H[?25l[29;1H:[?12l[?25h485[?25l[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;13H[?12l[?25h[15;13H[16;13H[17;13H[18;13H[19;13H[20;13H[21;13H[20;13H[19;13H[18;13H[17;13H[16;13H[15;13Hif[?25l [46m([mc < 0[46m)[15;16H[?12l[?25h[?25l[m(c < 0)[?12l[?25hc < [?25l[46m([mc < 0[46m)[?12l[?25h[?25l[m(c < 0)[?12l[?25h continue[?25l[29;1H/sentence_position[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H/[?12l[?25hsentence/[?25l[29;10H[K[29;10H[?12l[?25h_length[?25l[15;34H[?12l[?25h[?25l[29;1H[16;11H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;47H[?12l[?25h[?25l[m[29;1H?sentence_length[29;17H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [4;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;11H[?12l[?25h[?25l[m[29;1H/sentence_length[29;17H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;47H[?12l[?25h[?25l[m[29;1H/sentence_length[29;17H[K[29;1H[1;28r[1;1H[13M[1;29r[16;1H[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[18;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[20;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[24;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[28;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */[29;1H[K[27;13H[?12l[?25h[?25l

/sentence_length[27;75H[?12l[?25h[?25l

[28;47H[?12l[?25h[?25l
[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [17;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[20;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[23;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[14;17H[?12l[?25h[?25l[29;1H:[?12l[?25h485[?25l[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue;
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;
[93m499 [m[9C else if (f >= MAX_EXP) continue;[14;13H[?12l[?25hc = sentence_position - window + a; /* 41[2C[15;32H[16;47H[?25l[29;1H[1m-- INSERT --[16;48H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l38 */[?12l[?25h[?25l84 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Çà„Çä */[?12l[?25h[?25lÂΩìÂàù„ÅØ */[?12l[?25h[?25ls */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lc_ */[?12l[?25h[?25lc */[16;79H[K[16;76H[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_l */[?12l[?25h[?25lle */[?12l[?25h[?25len */[?12l[?25h[?25lng */[?12l[?25h[?25lgh */[?12l[?25h[?25lht */[?12l[?25h[?25lh */[16;86H[K[16;83H[?12l[?25h[?25lhg */[?12l[?25h[?25lh */[16;86H[K[16;83H[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[16;87H[?12l[?25h[?25l[17;28r[17;1H[L[1;29r[16;86H 0 **[17;1H[93m    [m/[16;88H[?12l[?25h[15;33H[14;75H[?25l== 5 */[?12l[?25h[29;1H[K[14;70H[?25l[?12l[?25h[15;32H[16;70H[18;31H[19;42H[20;41H[21;59H[22;35H[23;63H[24;20H[25;54H[26;43H[27;70H[28;42H[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;70H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m503 [m[9C // Propagate errors output -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[28;70H[?12l[?25h[27;50H[26;56H[25;68H[24;70H[23;46H[22;42H[21;70H[20;43H[19;54H[18;20H[17;63H[16;35H[15;59H[14;41H[13;42H[12;31H[?25l[29;1H/[?12l[?25hsen[?25l[27m[m[H[2J[1;1H[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [6;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;[14;9H[?12l[?25h[?25l[29;1H/[?12l[?25h*sen[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: *sen[m[29;30H[K[14;9H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hsen:[?25l[29;5H[K[29;5H[?12l[?25h[[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[38;5;224msearch hit BOTTOM, continuing at TOP[15;54H[?12l[?25h[?25l[m[29;1H/sen[[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[17;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[20;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [23;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;[14;13H[?12l[?25h[?25l[29;1H?sen[[27m[m[H[2J[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */
[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[8;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[15;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1];
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[15;54H[?12l[?25h[28C[?25l[29;1H[1m-- INSERT --[15;83H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[16;5H[?12l[?25h[15;89H[?25l[16;28r[16;1H[L[1;29r[15;86H s **[16;1H[93m    [m/[15;88H[?12l[?25h[?25lse  [16;1H[93m    [m*/[15;89H[?12l[?25h[?25lenn[16;1H[93m    [m */[?12l[?25h[?25l[93m [m„ÅØ */[?12l[?25h[?25l1 */[?12l[?25h[?25l10 */[?12l[?25h[?25l00 */[?12l[?25h[?25l00 */[?12l[?25h[?25l0 */[16;13H[K[16;10H[?12l[?25h[?25l01 */[?12l[?25h[?25l1ÂÄã„ÅÆ */[?12l[?25h[?25lË¶ÅÁ¥†„Çí */[?12l[?25h[?25lÊåÅ„Å§ */[?12l[?25h[29;1H[K[16;23H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hÁ∑öÂΩ¢ÂêàÂêå[?25l[27m[m[H[2J[1;1H[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [15;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[17;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[14;78H[?12l[?25h[?25l[29;1H/[?12l[?25h485[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: 485[m[29;29H[K[14;78H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25h485[?25l[27m[m[H[2J[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[8;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[13;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue;
[93m487 [m[7C if (c >= sentence_length) continue; /* 384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0 **[17;1H[93m    [m/
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue;
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue;[14;13H[?12l[?25h[15;13H[16;13H[18;13H[19;13H[20;13H[21;13H[20;13H[19;13H[18;13Hlast_word = se[?25ln[46m[[mc[46m][?12l[?25h[?25l[m[c][?12l[?25h[?25l[46m[[mc[46m][?12l[?25h[?25l[m[c][?12l[?25h[16;31H[15;31He[?25l[29;1H[1m-- INSERT --[15;33H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l c */[?12l[?25h[?25lc, */[?12l[?25h[?25lc */[15;41H[K[15;38H[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l  */[?12l[?25h[?25l 0 */[?12l[?25h[?25l0„Å™„Çâ */[?12l[?25h[16;46H[18;32H[19;43H[18;32H[16;46H[15;46H[?25l */[15;47H[K[15;44H[?12l[?25h[?25l0 */[15;45H[K[15;42H[?12l[?25h[?25l0„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí */[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[16;59H[2C[2C[2C[2C[2Csentence_lengh == 0[?25l c384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0  [17;1H[93m    [m*/[16;53H[?12l[?25h[?25lc 384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 00[17;1H[93m    [m */[16;54H[?12l[?25h[?25l >384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh ==  [17;1H[93m    [m0 */[16;55H[?12l[?25h[?25l>=384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh ===[17;1H[93m    [m 0 */[16;56H[?12l[?25h[?25l= 384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh ==[17;1H[93m    [m= 0 */[16;57H[?12l[?25h[?25l s384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh  [17;1H[93m [m[3C== 0 */[16;58H[?12l[?25h[?25lsr384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lenghh[17;1H[93m    [m == 0 */[16;59H[?12l[?25h[?25ls384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh  [17;1H[93m    [m== 0 */[17;12H[K[16;58H[?12l[?25h[?25lse384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lenghh[17;1H[93m    [m == 0 */[16;59H[?12l[?25h[?25len384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengg[17;1H[93m    [mh == 0 */[16;60H[?12l[?25h[?25lnt384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lenn[17;1H[93m    [mgh == 0 */[16;61H[?12l[?25h[?25lte384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lee[17;1H[93m    [mngh == 0 */[16;62H[?12l[?25h[?25len384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_ll[17;1H[93m    [mengh == 0 */[16;63H[?12l[?25h[?25lnc384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence__[17;1H[93m    [mlengh == 0 */[16;64H[?12l[?25h[?25lce384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentencee[17;1H[93m    [m_lengh == 0 */[16;65H[?12l[?25h[?25le_384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentencc[17;1H[93m    [me_lengh == 0 */[16;66H[?12l[?25h[?25l_l384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentenn[17;1H[93m    [mce_lengh == 0 */[16;67H[?12l[?25h[?25lle384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentee[17;1H[93m    [mnce_lengh == 0 */[16;68H[?12l[?25h[?25len384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentt[17;1H[93m    [mence_lengh == 0 */[16;69H[?12l[?25h[?25lng384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsenn[17;1H[93m    [mtence_lengh == 0 */[16;70H[?12l[?25h[?25lgh384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsee[17;1H[93m    [mntence_lengh == 0 */[16;71H[?12l[?25h[?25lht384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØss[17;1H[93m    [mentence_lengh == 0 */[16;72H[?12l[?25h[?25lh384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsee[17;1H[93m    [mntence_lengh == 0 */[17;25H[K[16;71H[?12l[?25h[?25lg384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsenn[17;1H[93m    [mtence_lengh == 0 */[17;24H[K[16;70H[?12l[?25h[?25lgt384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsee[17;1H[93m    [mntence_lengh == 0 */[16;71H[?12l[?25h[?25lth384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØss[17;1H[93m    [mentence_lengh == 0 */[16;72H[?12l[?25h[?25lh„ÅÆ384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù[94m>>[m[17;1H[93m    [m„ÅØsentence_lengh == 0 */[16;74H[?12l[?25h[?25lÊôÇ384Ë°åÁõÆ„Çà„ÇäÂΩì[94m>>[m[17;1H[93m    [mÂàù„ÅØsentence_lengh == 0 */[16;76H[?12l[?25h[?25lÂá¶ÁêÜ„Çí384Ë°åÁõÆ[94m>>[m[17;1H[93m    [m„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0 */[16;82H[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó[17;4H[93m [m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0 */[17;5H[?12l[?25h[?25l[93m [m(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0 */[17;6H[?12l[?25h384[2C[2C[2C[2C[2C[2C[2Csentence_lengh == 0[?25l[17;5H[46m([m[35C0[46m)[m */[?12l[?25h[?25l[17;5H([36C)[15;63H[?12l[?25h[?25l[17;5H[46m([36C)[?12l[?25h[?25l[m[17;5H([36C)[18;32H[?12l[?25h[19;43H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l l */[?12l[?25h[?25lla */[?12l[?25h[?25las */[?12l[?25h[?25lst */[?12l[?25h[?25lt_ */[?12l[?25h[?25l_w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[?12l[?25h[?25l - */[?12l[?25h[?25l-1 */[?12l[?25h[?25l1„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí */[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[18;32H[19;80H[20;42H[21;60H[22;36H[?25l[23;64H[?12l[?25h[24;21H[?25l[23;64H[?12l[?25h[22;36H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*?[?12l[?25h*?[?25l[22;42H[K[22;42H[?12l[?25h[?25l*/[?12l[?25h[?25l ÈöéÂ±§ */[?12l[?25h[?25lÁöÑ */[?12l[?25h[?25l„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[?12l[?25h[29;1H[K[22;58H[?25l[?12l[?25h[23;58H[22;58H[21;58H[20;41H[19;58H[18;31H[16;58H[15;58H[16;58H[18;31H[19;58H[20;41H[21;58H[22;58H[23;58H[24;20H[25;54H[26;43H[?25l[27;58H[46m[[mc + l1[46m][27;58H[?12l[?25h[?25l[m[c + l1][28;42H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue;[?12l[?25h[27;42H[?25l

[1m-- INSERT --[27;43H[?12l[?25h[?25l[m [?12l[?25h[?25l .[?12l[?25h[?25l.*[?12l[?25h[?25l[27;45H[K[27;45H[?12l[?25h[?25l[27;44H[K[27;44H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l f */[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l  */[?12l[?25h[?25l */[27;53H[K[27;50H[?12l[?25h[?25l<= */[?12l[?25h[?25l  */[?12l[?25h[?25l - */[?12l[?25h[?25l-M */[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_E */[?12l[?25h[?25lEX */[?12l[?25h[?25lXP */[?12l[?25h[?25lP„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ */[?12l[?25h[?25l„Çí */[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[28;47H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l f */[?12l[?25h[?25l  */[?12l[?25h[?25l > */[?12l[?25h[?25l>= */[?12l[?25h[?25l  */[?12l[?25h[?25l M */[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_E */[?12l[?25h[?25lEX */[?12l[?25h[?25lXP */[?12l[?25h[?25lP„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí */[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;81H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m503 [m[9C // Propagate errors output -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[27;48H[?12l[?25h[?25l[28;73H[46m[[mc + l1[46m][?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[14;63H[46m{[m[27;73H[c + l1]
[93m507 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[13;63H{[27;13H}
[93m508 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[27;28H[?12l[?25h[28;31H[?25l[1;28r[28;1H
[1;29r[28;1H[93m512 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[27;81H[?12l[?25h[?25l[26;23H[?12l[?25h[25;27H[24;31H[?25l[23;27H[46m{[26;15H}[23;28H[?12l[?25h[?25l[m{[26;15H}[22;67H[?12l[?25h[21;33H[?25l[6;63H[46m{[20;13H}[?12l[?25h[m[29;1H[K[20;13H[?25l[?12l[?25h[?25l[6;63H[?12l[?25h[?25l[20;13H[?12l[?25h[?25l[6;63H[?12l[?25h[?25l[20;13H[?12l[?25h[?25l[6;63H[?12l[?25h[?25l[20;13H[?12l[?25h[?25l[6;63H[?12l[?25h[?25l[20;13H[?12l[?25h[?25l[29;1H[1m-- INSERT --[20;14H[?12l[?25h[?25l[?12l[?25h[?25l[1C[?12l[?25h[?25l[m[6;63H{[20;13H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 4 */[?12l[?25h[?25l49 */[?12l[?25h[?25l93 */[?12l[?25h[?25l3Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ */[?12l[?25h[?25l[6;63H[46m{[20;13H}[?12l[?25h[?25l[?12l[?25h[?25l}[?12l[?25h[m[29;1H[K[20;13H[?25l[?12l[?25h[?25l[6;63H[?12l[?25h[?25l[29;1H[1m-- INSERT --[6;64H[?12l[?25h[?25l[m{/[20;13H}[6;65H[?12l[?25h[?25l[46m{[m[6;64H[K[20;13H[46m}[6;64H[?12l[?25h[?25l[m{[20;13H}[6;65H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 5 */[?12l[?25h[?25l50 */[?12l[?25h[?25l07 */[?12l[?25h[?25l7Ë°åÁõÆ */[?12l[?25h[?25l„Åæ„Åß */[?12l[?25h[7;21H[8;55H[9;44H[10;79H[11;79H[10;79H[11;79H[?25l[11;18H[46m([13C)[?12l[?25h[?25l[?12l[?25h[?25l[m[11;18H([13C)[?12l[?25h[12;28H[13;28H[14;28H[15;28H[29;1H[K[15;27H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hcontinue[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m517 [m[11C if (target == word) continue;[29;1H[K[28;37H[?12l[?25hcontinue[?25l
[1m-- INSERT --[28;46H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l t */[?12l[?25h[?25lta */[?12l[?25h[?25lar */[?12l[?25h[?25lrg */[?12l[?25h[?25lge */[?12l[?25h[?25le- */[?12l[?25h[?25le */[28;58H[K[28;55H[?12l[?25h[?25let */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[?12l[?25h[?25l w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25ld„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h *[29;1H[K[28;83H[?25l[?12l[?25h[?25l
/continue[27m[m[H[2J[1;1H[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [3;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue;
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;[14;11H[?12l[?25h[8C[?25l[29;1H[1m-- INSERT --[14;20H[?12l[?25h[?25l[m [?12l[?25h[?25l /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[?25l[14;31H[K[15;5H == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[16;6H   }[16;10H[K[17;6H } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[18;7Hfclose(fi[19;15H1);[19;18H[K[20;6H free(neu1e);[20;19H[K[21;4H[93m [m  pthread_exit(NULL);[22;4H[93m [m}[23;5H[K[24;4H[93m [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[25;6H long a, b, c, d;[26;6H FILE *fo;[26;17H[K[27;7Hpthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[28;6H printf("Starting training using file %s\n", train_file);[15;5H[?12l[?25h[?25l[15;6H[K[16;5H == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;6H   }[17;10H[K[18;6H } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[19;7Hfclose(fi[20;15H1);[20;18H[K[21;6H free(neu1e);[21;19H[K[22;4H[93m [m  pthread_exit(NULL);[23;4H[93m [m}[24;5H[K[25;4H[93m [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[26;6H long a, b, c, d;[27;6H FILE *fo;[27;17H[K[28;7Hpthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[16;5H[?12l[?25h[?25l[15;5H == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[16;5H    }[16;10H[K[17;6H } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[18;6H fclose(fi); [18;19H[K[19;7Hfree(neu1[20;15H1e);[21;6H pthread_exit(NULL);[22;4H[93m [m}[22;7H[K[23;5H[K[24;4H[93m [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[25;4H[93m [m  long a, b, c, d;[25;23H[K[26;6H FILE *fo;[26;16H[K[27;6H pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[28;7Hprintf("Starting training using file %s\n", train_file);[28;63H[K[15;5H[?12l[?25h[?25l[14;30H == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;5H    }[15;10H[K[16;6H } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[17;6H fclose(fi); [17;19H[K[18;7Hfree(neu1[19;15H1e);[20;6H pthread_exit(NULL);[21;4H[93m [m}[21;7H[K[22;5H[K[23;4H[93m [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[24;4H[93m [m  long a, b, c, d;[24;23H[K[25;6H FILE *fo;[25;16H[K[26;6H pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[27;7Hprintf("Starting training using file %s\n", train_file);[27;63H[K[28;6H starting_alpha = alpha;[28;30H[K[14;30H[?12l[?25h[?25le == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;58H[K[14;29H[?12l[?25h[?25lg == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;57H[K[14;28H[?12l[?25h[?25lr == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;56H[K[14;27H[?12l[?25h[?25la == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;55H[K[14;26H[?12l[?25h[?25lt == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;54H[K[14;25H[?12l[?25h[?25l  == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;53H[K[14;24H[?12l[?25h[?25l s == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;25H[?12l[?25h[?25lse == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;26H[?12l[?25h[?25len == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;27H[?12l[?25h[?25lnt == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;28H[?12l[?25h[?25lte == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;29H[?12l[?25h[?25len == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;30H[?12l[?25h[?25lns == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;31H[?12l[?25h[?25lse == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;32H[?12l[?25h[?25ls == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;60H[K[14;31H[?12l[?25h[?25ln == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;59H[K[14;30H[?12l[?25h[?25lnc == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;31H[?12l[?25h[?25lce == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;32H[?12l[?25h[?25le_ == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;33H[?12l[?25h[?25l_p == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;34H[?12l[?25h[?25lpo == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;35H[?12l[?25h[?25los == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;36H[?12l[?25h[?25lsi == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;37H[?12l[?25h[?25lit == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;38H[?12l[?25h[?25lti == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;39H[?12l[?25h[?25lio == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;40H[?12l[?25h[?25lon == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;41H[?12l[?25h =[?25l= word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;69H[K[14;42H[?12l[?25h[?25l >= word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;43H[?12l[?25h= [?25l sword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;46H[?12l[?25h[?25lseword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;47H[?12l[?25h[?25lenword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;48H[?12l[?25h[?25lntword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;49H[?12l[?25h[?25lteword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;50H[?12l[?25h[?25lenword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;51H[?12l[?25h[?25lncword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;52H[?12l[?25h[?25lceword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;53H[?12l[?25h[?25le_word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;54H[?12l[?25h[?25l_lword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;55H[?12l[?25h[?25lleword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;56H[?12l[?25h[?25lenword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;57H[?12l[?25h[?25lngword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;58H[?12l[?25h[?25lgtword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;59H[?12l[?25h[?25lthword„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;60H[?12l[?25hword[?25lr„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;84H[K[14;63H[?12l[?25h[?25lo„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;83H[K[14;62H[?12l[?25h[?25lw„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;82H[K[14;61H[?12l[?25h[?25lh„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;81H[K[14;60H[?12l[?25h[2C[2C[2C[?25lsÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;65H[?12l[?25h[?25lseÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;66H[?12l[?25h[?25lenÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;67H[?12l[?25h[?25lntÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;68H[?12l[?25h[?25lteÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;69H[?12l[?25h[?25lenÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;70H[?12l[?25h[?25lncÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;71H[?12l[?25h[?25lceÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;72H[?12l[?25h[?25le_Âá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;73H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;72H_lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó **[15;1H[93m    [m/[14;74H[?12l[?25h[?25lleÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó  [15;1H[93m    [m*/[14;75H[?12l[?25h[?25lenÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[15;4H[93m [m */[14;76H[?12l[?25h[?25lngÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ[94m>>[m[15;1H[93m    [m„Éó */[14;77H[?12l[?25h[?25lgtÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ[14;78H[?12l[?25h[?25lthÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[15;1H[93m [m[3C„ÉÉ„Éó */[14;79H[?12l[?25h[?25lh Âá¶ÁêÜ„Çí„Çπ„Ç≠[14;80H[?12l[?25h[?25l =Âá¶ÁêÜ„Çí„Çπ[94m>>[m[15;1H[93m [m[3C„Ç≠„ÉÉ„Éó */[14;81H[?12l[?25h[?25l= Âá¶ÁêÜ„Çí„Çπ[14;82H[?12l[?25h[?25l 0Âá¶ÁêÜ„Çí[94m>>[m[15;1H[93m [m[3C„Çπ„Ç≠„ÉÉ„Éó */[14;83H[?12l[?25h[?25l0„Å®Âá¶ÁêÜ[94m>>[m[15;1H[93m [m[3C„Çí„Çπ„Ç≠„ÉÉ„Éó */[14;85H[?12l[?25h[?25l„Åó„Åü[94m>>[m[15;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;9H[?12l[?25h[2C[2C[2C[2C[2C[2C[2C */[29;1H[K[15;25H[?25l[?12l[?25h[?25l[29;1H/continue[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 66 [m    }
[93m 67 [m    if (i >= vocab_size) i = vocab_size - 1;
[93m 68 [m  }
[93m 69 [m}
[93m 70 
 71 [m// Reads a single word from a file, assuming space + tab + EOL to be word boundaries  [7;1H[93m    [m/* „Éï„Ç°„Ç§„É´„Åã„Çâ1ÂçòË™ûË™≠Ëæº„ÅøÔºå„Çπ„Éö„Éº„Çπ„Éª„Çø„Éñ„ÉªË°åÊú´„ÇíÂçòË™û„ÅÆÂàá„ÇåÁõÆ„Å®Ë¶ã„Å™„Åô */
[93m 72 [mvoid ReadWord(char *word, FILE *fin) { /* charÂûã„Éù„Ç§„É≥„Çøword„Å®„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„ÅåÂºï [9;1H[93m    [mÊï∞„ÅÆvoidÂûãÈñ¢Êï∞ReadWord() */
[93m 73 [m  int a = 0, ch; /* intÂûãa„Å®ch */
[93m 74 [m  while (!feof(fin)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„Åå„Éï„Ç°„Ç§„É´„ÅÆÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ„Å´„É´„Éº„ÉóÁµÇ‰∫Ü **[12;1H[93m    [m/
[93m 75 [m    ch = fgetc(fin); /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„Åã„Çâ1ÊñáÂ≠óË™≠Ëæº„Çì„ÅßintÂûã„ÅßËøî„Åô */
[93m 76 [m    if (ch == 13) continue;
[93m 77 [m    if ((ch == ' ') || (ch == '\t') || (ch == '\n')) {/* Á©∫ÁôΩ„Éª„Çø„Éñ„ÉªÊîπË°å„Åå„ÅÇ„ÇãÂ†¥Âêà **[16;1H[93m    [m/
[93m 78 [m      if (a > 0) { /* ÊúÄÂàù„ÅØÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åï„Å™„ÅÑ */
[93m 79 [m[7C if (ch == '\n') ungetc(ch, fin); /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„Å´1ÊñáÂ≠óËøîÂç¥„Åóch„ÇíËøî„Åô  [19;1H[93m    [m*/
[93m 80 [m[7C break;
[93m 81 [m      }
[93m 82 [m      if (ch == '\n') { /* ÊîπË°å„Åå„ÅÇ„ÇãÂ†¥Âêà */
[93m 83 [m[7C strcpy(word, (char *)"</s>"); /* ÈÖçÂàóword„Å´ÊñáÂ≠óÂàó"</s>"„Çí„Ç≥„Éî„Éº */
[93m 84 [m[7C return;
[93m 85 [m      } else continue;
[93m 86 [m    }
[93m 87 [m    word[a] = ch; /* ÈÖçÂàóword„ÅÆaÁï™ÁõÆ„Å´intÂûãch„Çí‰ª£ÂÖ• */
[93m 88 [m    a++;
[38;5;224msearch hit BOTTOM, continuing at TOP[14;23H[?12l[?25h[8C[?25l[m[29;1H[1m-- INSERT --[m[29;13H[K[14;32H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l c */[?12l[?25h[?25lch */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[?12l[?25h[?25l 1 */[?12l[?25h[?25l13 */[?12l[?25h[?25l3„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[29;1H[K[14;60H[?25l[?12l[?25h[?25l[29;1H/continue[25;18H[?12l[?25h[8C[?25l[29;1H[1m-- INSERT --[25;27H[?12l[?25h[?25l[m [?12l[?25h[?25l ?[?12l[?25h[?25l[25;28H[K[25;28H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l ÊîπË°å„Åå */[?12l[?25h[?25l„Å™„ÅÑ */[?12l[?25h[?25lÂ†¥Âêà */[?12l[?25h[24;20H[23;45H[22;44H[?25lÂ†¥Âêà */[22;47H[K[22;40H[?12l[?25h[?25lÂ†¥Âêà */[22;45H[K[22;38H[?12l[?25h[?25lÊúâ„ÇãÂ†¥Âêà */[22;42H[?12l[?25h[23;42H[24;20H[25;41H[?25lÂ†¥Âêà */[25;46H[K[25;39H[?12l[?25h[?25lÂ†¥Âêà */[25;44H[K[25;37H[?12l[?25h[?25lÁÑ°„ÅÑÂ†¥Âêà */[25;41H[?12l[?25h[2C[2C[?25lÂá¶ÁêÜ„Çí */[?12l[?25h[?25l„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[29;1H[K[25;57H[?25l[?12l[?25h[?25l[29;1H/continue[27m[m[H[2J[1;1H[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[4;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[8;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[11;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[13;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue;
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[18;1H[93m    [m same
[93m396 [m[7C if (sample > 0) {
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [21;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue;
[93m400 [m[7C }
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[28;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */[14;29H[?12l[?25h[8C[?25l[29;1H[1m-- INSERT --[14;38H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25l  */[?12l[?25h[?25l = */[?12l[?25h[?25l== */[?12l[?25h[?25l  */[?12l[?25h[?25l - */[?12l[?25h[?25l-1 */[?12l[?25h[?25l1„ÅÆÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[29;1H[K[14;68H[?25l[?12l[?25h[?25l[29;1H/continue[23;63H[?12l[?25h[8C[?25l[29;1H[1m-- INSERT --[23;72H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l[24;28r[24;1H[L[1;29r[23;75H ran < (next_raa[24;1H[93m    [mndom & 0xFFFF) / (real)65536 */[28;1H[94m@                                                                                        [24;33H[?12l[?25h[?25l[m6„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h [29;1H[K[24;51H[?25l[?12l[?25h[?25l[29;1H/continue[27m[m[H[2J[1;1H[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[3;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[6;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue;
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [21;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[23;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[14;11H[?12l[?25h[13;11H[12;11H[11;11H[10;11H[9;11H[8;11H[9;11Hif[?25l [46m([15C)[9;14H[?12l[?25h[?25l[m([15C)[9;15H[?12l[?25h[10;15H[11;15H[12;15H[13;15H[14;15H[13;15H[12;15H[11;15H[10;15H[9;15H[10;15H[11;15H[12;15H[13;15H[14;15H[15;15H[?25l[5;67H[46m{[15;9H}[?12l[?25h[?25l[m[5;67H{[15;9H}[14;9H[?12l[?25h[13;9H[12;9H[11;9H[10;9H[9;9H[8;9H[7;9H[5;9H[4;9H[2;9H[4;9H[5;9H[4;9H[2;9H[1;9H[2;9H[4;9H[5;9H[7;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[?25l[5;67H[46m{[15;9H}[?12l[?25h[?25l[m[5;67H{[15;9H}[14;9H[?12l[?25h[13;9H[12;9H[11;9H[10;9H[9;9H[8;9H[7;9H[5;9H[4;9H[5;9H[7;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[?25l[5;67H[46m{[15;9H}[?12l[?25h[?25l[m[5;67H{[15;9H}[16;9H[?12l[?25h[17;9H[18;9H[19;9H[20;9H[22;9H[24;9H[25;9H[26;9H[27;9H[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m428 [m[7C if (c < 0) continue;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];[27;9H[?12l[?25h[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m431 [m[7C if (last_word == -1) continue;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m433 [m[7C cw++;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m434 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m435 [m      if (cw) {[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m438 [m[9C f = 0;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[28;9H[?12l[?25h[27;9H[26;9H[25;9H[24;9H[23;9H[22;9H[21;9H[19;9H[18;9H[17;9H[16;9H[15;9H[14;9H[13;9H[12;9H[11;9H[10;9H[8;9H[6;9H[5;9H[4;9H[3;9H[2;9H[1;9H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m415 [m      continue;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m413 [m      sentence_length = 0;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m412 [m      last_word_count = 0;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m411 [m      word_count = 0;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m409 [m      local_iter--;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m408 [m      word_count_actual += word_count - last_word_count;[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[2;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[2;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[2;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */[1;12H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m401 [m[7C sen[sentence_length] = word;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m400 [m[7C }[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[2;1H[93m    [mndom & 0xFFFF) / (real)65536„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[2L[1;29r[1;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [2;1H[93m    [mtrain_words) / vocab[word].cn;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m396 [m[7C if (sample > 0) {[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m393 [m[7C word_count++;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[1;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m387 [m    }[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[1;9H[?12l[?25h[2;9H[3;9H[2;9H[3;9H[2;9H[1;9H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[2;1H[93m    [m));[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m384 [m      }[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m383 [m[7C fflush(stdout);[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[2L[1;29r[1;1H[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[2;1H[93m    [m;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m379 [m[7C now=clock();[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m377 [m      last_word_count = word_count;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m376 [m      word_count_actual += word_count - last_word_count;[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[28;1H[94m@                                                                                        [1;9H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m372 [m  FILE *fi = fopen(train_file, "rb");[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m369 [m  clock_t now;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m368 [m  real f, g;[28;1H[94m@                                                                                        [1;9H[?12l[?25h[2;9H[3;9H[4;9H[5;9H[6;9H[7;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[15;9H[17;9H[18;9H[19;9H[21;9H[?25l[m[8;51H[46m{[22;9H}[?12l[?25h[?25l[m[8;51H{[22;9H}[23;9H[?12l[?25h[25;9H[23;9H[?25l[8;51H[46m{[22;9H}[?12l[?25h[?25l[m[8;51H{[22;9H}[21;9H[?12l[?25h[19;9H[18;9H[17;9H[15;9H[14;9H[13;9H[12;9H[11;9H[10;9H[9;9H[10;9H[9;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[15;9H[17;9H[18;9H[19;9H[21;9H[?25l[8;51H[46m{[22;9H}[?12l[?25h[?25l[m[8;51H{[22;9H}[23;9H[?12l[?25h[25;9H[26;9H[?25l[1;28r[28;1H
[1;29r[27;1H[93m391 [m        if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[28;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m393 [m[7C word_count++;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[28;1H[93m    [m same[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m396 [m[7C if (sample > 0) {[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [28;1H[93m    [mtrain_words) / vocab[word].cn;[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[28;1H[93m    [mndom & 0xFFFF) / (real)65536„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m400 [m[7C }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m401 [m[7C sen[sentence_length] = word;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[28;1H[94m@                                                                                        [27;9H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m403 [m        if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[28;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */[27;12H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[28;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */[27;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[2;35H[46m{[m[53Chh[3;1H[93m [28;1H406 [m    [46m}[m /* 388Ë°åÁõÆ„Åã„Çâ */[28;9H[?12l[?25h[?25l[1;28r[1;1H[3M[1;29r[25;9H}
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [27;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;[26;9H[?12l[?25h[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m409 [m      local_iter--;[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[27;9H[?12l[?25h[28;9H[27;9H[26;9H[25;9H[26;9H[27;9H[28;9H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[27;9H[?12l[?25h[28;9H[?25l[1;28r[28;1H
[1;29r[28;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m415 [m      continue;[28;9H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[18;67H[46m{[m[21C  [19;1H[93m [28;1H416 [m    [46m}[m /* 407Ë°åÁõÆ„Åã„Çâ */[28;9H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[16;67H{[21C  [17;1H[93m [m[26;9H}
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;[27;9H[?12l[?25h[28;9H[27;9H[?25l[16;67H[46m{[m[21C  [17;1H[93m [m[26;9H[46m}[?12l[?25h[?25l[m[16;67H{[21C  [17;1H[93m [m[26;9H}[25;9H[?12l[?25h[24;9H[25;9H  continue[?25l[29;1H[1m-- INSERT --[25;20H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l ‰ª•‰∏ã„ÅÆ */[?12l[?25h[?25lÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[?25l„Åó„Å¶ */[?12l[?25h[?25l3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l75 */[?12l[?25h[?25l5Ë°åÁõÆ */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25l‰∏ÄÊ∞ó„Å´Êàª„Çã */[?12l[?25h[24;11H[23;11H[22;11H[21;11H[20;11H[19;11H[18;11H[16;11H[15;11H[13;11H[12;11H[10;5H[9;11H[8;11H[7;11H[5;11H[4;11H[2;11H[1;11H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m393 [m[7C word_count++;[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;11H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[1;11H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[1;11H[?12l[?25h[3;11H[5;11H[6;11H[7;11H[8;11H[10;11H[11;11H[13;11H[14;11H[16;11H[14;11H[13;11H[11;11H[10;11H[8;11H[7;11H[6;11H[5;11H[3;11H[1;11H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[1;11H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */[28;1H[94m@                                                                                        [1;11H[?12l[?25h[3;11H[4;11H[3;11H[4;11H[6;11H[8;11H[9;11H[10;11H[11;11H[13;11H[14;11H[16;11H[17;11H[19;11H[20;11H[21;11H[22;5H[?25l[m[3;21H[46m{[24;11H}[?12l[?25h[?25l[m[3;21H{[24;11H}[25;11H[?12l[?25h[27;11H[?25l[1;28r[1;1H[2M[1;29r[26;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [27;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;[26;11H[?12l[?25h[28;11H[?25l[1;28r[28;1H
[1;29r[28;1H[93m409 [m      local_iter--;[28;11H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[27;11H[?12l[?25h[28;11H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[27;11H[?12l[?25h[28;11H[?25l[1;28r[28;1H
[1;29r[28;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[28;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */[28;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */[28;11H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;[27;11H[?12l[?25h[28;11H[?25l[1;28r[28;1H
[1;29r[28;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[28;11H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[28;1H[94m@                                                                                        [27;11H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[27;11H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[28;1H[93m    [m */[27;11H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[28;11H[?12l[?25h[26;11H[24;11H[23;11H[22;11H[21;11H[20;11H[19;11H[18;11H[17;11H[16;11H[15;11H[14;11H[13;11H[12;11H[11;11H[9;11H[8;11H[6;11H[5;11H[3;5H[2;11H[1;11H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m400 [m[7C }[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[2;1H[93m    [mndom & 0xFFFF) / (real)65536„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;1H[94m@                                                                                        [1;11H[?12l[?25h[?25l[1;28r[m[1;1H[2L[1;29r[1;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [2;1H[93m    [mtrain_words) / vocab[word].cn;[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m396 [m[7C if (sample > 0) {[1;11H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[1;11H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m393 [m[7C word_count++;[1;11H[?12l[?25h[2;11H[3;11H[5;11H[6;11H[8;11H[9;11H[11;11H[9;11H[11;11H[12;11H[11;11H[9;11H[8;11H[6;11H[5;11H[6;11H[8;11H[9;11H[8;11H[6;11H[5;11H  if[?25l [46m([10C)[5;16H[?12l[?25h[?25l([?12l[?25h[?25l[m([10C)[5;18H[?12l[?25hample > [?25l[5;16H[46m([10C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[5;16H([10C) [46m{[11;13H}[5;29H[?12l[?25h[?25l{[?12l[?25h[?25l[m{[11;13H}[5;31H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l s */[?12l[?25h[?25lsa */[?12l[?25h[?25lam */[?12l[?25h[?25lmp */[?12l[?25h[?25lpl */[?12l[?25h[?25lle */[?12l[?25h[?25l  */[?12l[?25h[?25l > */[?12l[?25h[?25l  */[?12l[?25h[?25l 9 */[?12l[?25h[?25l  */[5;46H[K[5;43H[?12l[?25h[?25l 0 */[?12l[?25h[?25l0„ÅÆ */[?12l[?25h[?25l0 */[5;47H[K[5;44H[?12l[?25h[?25l  */[?12l[?25h[?25l „ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[?25l( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l()[?12l[?25h[?25l[46m{[11;13H}[5;30H[?12l[?25h[?25l[m{[11;13H}[5;31H[?12l[?25h/* sample > 0 [2C[?25l[2C[46m()[?12l[?25h[?25l([?12l[?25h[?25l([m4[46m)[m */[?12l[?25h[?25l40[46m)[m */[?12l[?25h[?25l00[46m)[m */[?12l[?25h[?25l0Ë°åÁõÆ[46m)[m */[?12l[?25h[?25l„Åæ„Åß[46m)[m */[?12l[?25h[?25l[5;49H([11C)[6;61H[?12l[?25h[8;61H[?25l[9;18H[46m([42C)[m[27Caa[10;1H[93m [9;61H[?12l[?25h[?25l[m[5;29H[46m{[m[9;18H([42C)[27Caa[10;1H[93m [m[11;13H[46m}[?12l[?25h[?25l[m[5;29H{[11;13H}[12;41H[?12l[?25h[?25l[5;29H[46m{[11;13H}[?12l[?25h[?25l[m[5;29H{[11;13H} [?12l[?25h[?25l ?[?12l[?25h[?25l[11;15H[K[11;15H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l39 */[?12l[?25h[?25l96 */[?12l[?25h[?25l6Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[?25li */[?12l[?25h[?25lif */[?12l[?25h[?25l  */[?12l[?25h[?25l  */[?12l[?25h[?25l  */[?12l[?25h[?25l */[11;38H[K[11;35H[?12l[?25h[?25l */[11;37H[K[11;34H[?12l[?25h[?25l */[11;36H[K[11;33H[?12l[?25h[?25lfÊñá */[?12l[?25h[?25l„Åì„Åì„Åæ„Åß */[?12l[?25h[9;43H[?25l[8;43H[46m([18C)[8;43H[?12l[?25h[?25l[6;37H[[mword[46m][m[46C  [7;1H[93m [m[8;43H([18C)[6;43H[?12l[?25h[?25l[word][46C  [7;1H[93m [5;43H[?12l[?25h[3;43H[2;13H[1;13H[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;13H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[1;13H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[1;13H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[1;13H[?12l[?25h[2;13H[4;13H[6;13H[7;13H[8;13H[9;13H[11;13H[12;13H[14;13H[15;13H[?25l[11;29H[46m{[17;13H}[?12l[?25h[?25l[m[11;29H{[17;13H}[18;13H[?12l[?25h[?25l[11;29H[46m{[17;13H}[?12l[?25h[?25l}[?12l[?25h[?25l[m[11;29H{[17;13H} [?12l[?25h/* 396[2C[2C[2C[2C[2Ci[15;32Han[17;33H[2C[2C[2C[2C[2C */[?25l[15;25H[46m([20C)[m[42Caa[16;1H[93m [15;46H[?12l[?25h[?25l[m[15;25H([20C)[42Caa[16;1H[93m [17;46H[?12l[?25h[?25l[m[15;25H[46m([20C)[m[42Caa[16;1H[93m [15;46H[?12l[?25h[m[29;1H[K[15;45H[?25l[15;25H([20C)[42Caa[16;1H[93m [15;45H[?12l[?25h[16;53H[?25l[m[29;1H[1m-- INSERT --[16;52H[?12l[?25h[?25l[m„Åó„Å¶ */[?12l[?25h[?25l3 */[?12l[?25h[?25l39 */[?12l[?25h[?25l90 */[?12l[?25h[?25l0g */[?12l[?25h[?25lgy */[?12l[?25h[?25lyo */[?12l[?25h[?25ly */[16;63H[K[16;60H[?12l[?25h[?25lg */[16;62H[K[16;59H[?12l[?25h[?25l0 */[16;61H[K[16;58H[?12l[?25h[?25l0Ë°åÁõÆ */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lÊàª„Çã */[?12l[?25h6[?25l6 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */[16;34H[?12l[?25h[17;46H[18;41H[19;67H[21;34H[22;51H[24;33H[25;28H[27;33H[28;61H[?25l[1;28r[28;1H
[1;29r[28;1H[93m409 [m      local_iter--;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[27;84H[?12l[?25h[28;26H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[27;31H[?12l[?25h[28;31H[?25l[1;28r[28;1H
[1;29r[28;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;[27;65H[?12l[?25h[28;34H[?25l[1;28r[28;1H
[1;29r[28;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[28;1H[94m@                                                                                        [27;56H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[28;1H[93m    [m */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m424 [m      // in -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m425 [m      cw = 0;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[27;64H[?12l[?25h[28;48H[?25l[1;28r[28;1H
[1;29r[28;1H[93m428 [m[7C if (c < 0) continue;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];[27;48H[?12l[?25h[28;32H[?25l[1;28r[28;1H
[1;29r[28;1H[93m431 [m[7C if (last_word == -1) continue;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[27;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m433 [m[7C cw++;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[19;69H[46m{[m[28;1H[93m434 [m      [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[18;69H{[27;11H}
[93m435 [m      if (cw) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[?12l[?25h[?25l[27;20H[?12l[?25h[?25l[17;69H[46m{[26;11H}[?12l[?25h[?25l[m[17;69H{[26;11H}[25;18H[?12l[?25h[23;64H[22;43H[21;32H[20;48H[19;33H[20;48H[21;32H[22;43H[23;64H[25;18H[?25l[17;69H[46m{[26;11H}[?12l[?25h[?25l[m[17;69H{[26;11H}[27;20H[?12l[?25h[28;61H[?25l[1;28r[28;1H
[1;29r[28;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m438 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden[27;57H[?12l[?25h[28;51H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output[27;64H[?12l[?25h[28;48H[?25l[1;28r[28;1H
[1;29r[28;1H[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[14;63H[46m{[m[28;1H[93m451 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[13;63H{[27;13H}
[93m452 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m453 [m[7C if (negative > 0) for [46m([md = 0; d < negative + 1; d++[46m)[m {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[27;35H([28C)
[93m454 [m[9C if (d == 0) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m455 [m[11C target = word;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m456 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m457 [m[9C } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m458 [m[11C next_random = next_random * [46m([munsigned long long[46m)[m25214903917 + 11;[28;64H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[26;45H([18C)
[93m459 [m[11C target = table[46m[[m(next_random >> 16) % table_size[46m][m;
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[27;64H[?12l[?25h[?25l[27;31H[[32C][28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m461 [m[11C if (target == word) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m462 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m463 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m464 [m[9C l2 = target * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m465 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * [46m([mEXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2[46m)[m)]) * alpha;[27;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[26;64H([24C  [27;1H[93m [m[6C)
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[46m[[mc + l2[46m][m += g * neu1[c];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[27;56H[c + l2]
[93m472 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m473 [m[7C // hidden -> in[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m475 [m[9C c = sentence_position - window + a;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m476 [m[9C if (c < 0) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m477 [m[9C if (c >= sentence_length) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m478 [m[9C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m479 [m[9C if (last_word == -1) continue;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[28;1H[93m    [me[c];[27;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[20;71H[46m{[m[28;1H[93m481 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[19;71H{[27;13H}
[93m482 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[28;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[27;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [28;1H[93m    [m(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[27;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m488 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m490 [m[7C l1 = last_word * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß */
[93m494 [m[9C f = 0;[27;64H[?12l[?25h[26;63H[25;60H[24;42H[23;64H[22;32H[20;64H[19;63H[20;64H[22;32H[23;64H[24;42H[25;60H[26;63H[?25l[27;64H[?12l[?25h[28;21H[?25l[1;28r[28;1H
[1;29r[28;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m496 [m[9C // Propagate hidden -> output[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;63H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;64H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m503 [m[9C // Propagate errors output -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[28;64H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[27;48H[?12l[?25h[28;64H[?25l[1;28r[28;1H
[1;29r[28;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m508 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m509 [m[7C if (negative > 0) for [46m([md = 0; d < negative + 1; d++[46m)[m {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[26;35H([28C)
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[27;28H[?12l[?25h[28;31H[?25l[1;28r[28;1H
[1;29r[28;1H[93m512 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m514 [m[11C next_random = next_random * [46m([munsigned long long[46m)[m25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[27;64H[?12l[?25h[?25l[27;45H([18C)[26;23H[?12l[?25h[25;27H[24;31H[?25l[23;27H[46m{[26;15H}[23;28H[?12l[?25h[?25l[22;35H([28C)[m[23;27H{[26;15H}[22;64H[?12l[?25h[?25l[22;35H([28C)[21;33H[?12l[?25h[20;32H[19;15H[18;15H[17;15H[16;15H[15;15H[14;15H[13;15H[12;15H[11;15H[10;15H[9;15H[8;15H[7;15H[6;15H[5;15H[6;14H[5;13H[4;13Hfor[?25l [46m([27C)[4;17H[?12l[?25h[?25l([?12l[?25h[?25l[m([27C)[4;19H[?12l[?25h = 0; c < layer1_size; c+[?25l[4;17H[46m([27C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[4;17H([27C) [?12l[?25hneu1[?25le[46m[[mc[46m][?12l[?25h[?25l[[?12l[?25h[?25l[mc[?12l[?25h[?25l[1C[?12l[?25h[?25l[c] [?12l[?25h=[?25l[46m[[mc[46m][?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[m[c][?12l[?25h[?25l[4;17H[46m([27C)[?12l[?25h[?25l[?12l[?25h[?25l[m[4;17H([27C)[?12l[?25h[?25l[46m([27C)[4;18H[?12l[?25h[?25l[?12l[?25h[?25l[m([27C)[4;16H[?12l[?25h[5;13H[6;13H[7;13H[8;13H[9;13H[10;13H[11;13H[12;13H[13;13H[14;13H[13;13H[12;13H[11;13H[10;13H[9;13H[8;13H[7;13H[6;13H[5;13H[4;13H[3;13H[2;13H[1;13H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [2;1H[93m    [m(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[1;13H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;13H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[1;13H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[2;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[1;13H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */[1;13H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m482 [m      }[?12l[?25h[2;13H[3;13H[5;13H[3;13H[5;13H[6;13H[7;13H[9;13H[10;13H[11;13H[12;13H[13;13H[14;13H[15;13H[16;13H[17;13H[18;13H[19;13H[18;13H[17;13H[16;13H[15;13H[14;13H[13;13H[12;13H[11;13H[10;13H[9;13H[7;13H[6;13H[7;13Hif[?25l [46m([20C)[m[51C  [8;1H[93m [7;16H[?12l[?25h[?25l[m[73C  [8;1H[93m [7;17H[?12l[?25h[?25l[m([20C)[51C  [8;1H[93m [7;18H[?12l[?25h[m >= sente[6;27H[7;27H[6;27Htinue; /* c < 0[2C[2C[2C[2C[2C[2C[2C[2C[2C[?25l„Åó„Å¶ */[?12l[?25h[?25l4 */[?12l[?25h[?25l48 */[?12l[?25h[?25l85 */[?12l[?25h[?25l5Ë°åÁõÆ */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lÊàª„Çã */[?12l[?25h[7;76H[9;32H[7;76H[2C[2C[2C[2C[2C[2C[?25l[1C  [8;1H[93m [m[3C[46m([36C)[8;5H[?12l[?25h[?25l([?12l[?25h[?25l[m([36C)[8;7H[?12l[?25h84[2C[2C[2C[2C[2C[2C[2Csentence_[?25l[46m([36C)[8;6H[?12l[?25h[?25l[?12l[?25h[?25l[m([36C)[7;88H[?12l[?25h[2C[?25l[1C  [8;1H[93m [m[3C[46m([36C)[8;5H[?12l[?25h[?25l[m([36C)[7;88H[?12l[?25h[2C[?25l[1C  [8;1H[93m [m[3C[46m([36C)[8;5H[?12l[?25h[?25l[m[93m [m„Åó„Å¶[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;9H[?12l[?25h[?25l4[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;10H[?12l[?25h[?25l45[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;11H[?12l[?25h[?25l4[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;51H[K[8;10H[?12l[?25h[?25l48[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;11H[?12l[?25h[?25l85[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;12H[?12l[?25h[?25l5Ë°åÁõÆ[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;16H[?12l[?25h[?25l„Å´[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;18H[?12l[?25h[?25lÊàª„Çã[46m([m384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0[46m)[m */[8;22H[?12l[?25h[?25l([36C)[9;32H[?12l[?25h[10;83H[11;42H[12;60H[13;63H[12;60H[11;42H[10;83H[2C[2C[2C[2C[?25l[10;16H[46m([15C)[?12l[?25h[?25l[?12l[?25h[?25l[m[10;16H([15C)[?12l[?25h[11;30H[12;30H[13;30H[14;30H[15;21H[?25l[16;25H[46m[[mword[46m][?12l[?25h[?25l[m[word][17;30H[?12l[?25h[18;30H[19;30H[20;30H[21;30H[22;30H[?25l[23;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][24;30H[?12l[?25h[25;30H[26;30H[27;30H[28;30H[?25l[1;28r[28;1H
[1;29r[28;1H[93m508 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m509 [m[7C if [46m([mnegative > 0[46m)[m for (d = 0; d < negative + 1; d++) {[28;30H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[26;16H([12C)
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[27;28H[?12l[?25h[28;30H[?25l[1;28r[28;1H
[1;29r[28;1H[93m512 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[27;30H[?12l[?25h[28;30H[?25l[1;28r[28;1H
[1;29r[28;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m518 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m519 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m520 [m[9C l2 = target * layer1_size;[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m521 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m523 [m[9C if [46m([mf > MAX_EXP[46m)[m g = (label - 1) * alpha;[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[27;18H([11C)
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;30H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[28;1H[93m528 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m529 [m[7C // Learn weights input -> hidden[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m531 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m532 [m    }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m534 [m    if (sentence_position >= sentence_length) {[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m535 [m      sentence_length = 0;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[28;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[27;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[24;51H[46m{[m[28;1H[93m537 [m    [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[23;51H{[27;9H}
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[28;29H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m539 [m  fclose(fi);[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m540 [m  free(neu1);[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m541 [m  free(neu1e);[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m542 [m  pthread_exit(NULL);[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m543 [m}[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m544 [?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[28;1H[93m545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m546 [m  long a, b, c, d;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m547 [m  FILE *fo;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[28;30H[?12l[?25h[27;16H[26;23H[25;30H[24;5H[?25l[23;6H[?12l[?25h[22;26H[21;19H[20;18H[19;18H[18;29H[?25l[13;51H[46m{[17;9H}[?12l[?25h[?25l[m[13;51H{[17;9H}[15;30H[?12l[?25h[14;30H[13;30H[12;30H[?25l[11;10H[?12l[?25h[?25l[10;12H[?12l[?25h[9;30H[8;30H[?25l[7;14H[?12l[?25h[6;30H[5;30H[3;30H[2;30H[?25l[1;18H[46m([11C)[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];[2;18H([11C)[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m521 [m[9C f = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m520 [m[9C l2 = target * layer1_size;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m519 [m[9C }[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m518 [m[11C label = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m515 [m[11C target = table[(next_random >> 16) % table_size];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m513 [m[9C } else [46m{[7;15H}[1;23H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m512 [m[11C label = 1;[2;22H{[8;15H}[1;27H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m511 [m[11C target = word;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m510 [m[9C if (d == 0) [46m{[4;15H}[m[28;1H[94m@                                                                                        [1;28H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m509 [m[7C if [46m([mnegative > 0[46m)[m for (d = 0; d < negative + 1; d++) {[2;27H{[5;15H}[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m508 [m[7C // NEGATIVE SAMPLING[2;16H([12C)[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m505 [m[9C // Learn weights hidden -> output[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m503 [m[9C // Propagate errors output -> hidden[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m502 [m[9C g = (1 - vocab[46m[[mword[46m][m.code[d] - f) * alpha;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[2;29H[word][1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;1H[94m@                                                                                        [1;30H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m496 [m[9C // Propagate hidden -> output[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m495 [m[9C l2 = vocab[46m[[mword[46m][m.point[d] * layer1_size;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m494 [m[9C f = 0;[2;25H[word][1;21H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[1;30H[?12l[?25h[2;30H[3;21H[?25l[4;25H[46m[[mword[46m][?12l[?25h[?25l[m[word][5;30H[?12l[?25h[6;30H[7;30H[8;30H[9;30H[10;30H[?25l[11;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][12;30H[?12l[?25h[13;30H[14;30H[15;30H[16;30H[17;30H[?25l[18;16H[46m([12C)[?12l[?25h[?25l[m[18;16H([12C)[19;27H[46m{[22;15H}[19;28H[?12l[?25h[?25l[m{[22;15H}[20;30H[?12l[?25h[?25l[19;27H[46m{[22;15H}[19;28H[?12l[?25h[?25l[18;16H([12C)[m[19;27H{[22;15H}[18;30H[?12l[?25h[?25l[18;16H([12C)[17;30H[?12l[?25h[16;30H[15;30H[14;30H[13;30H[12;30H[?25l[11;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][10;30H[?12l[?25h[9;30H[8;30H[7;30H[6;30H[5;30H[?25l[4;25H[46m[[mword[46m][?12l[?25h[?25l[m[word][3;21H[?12l[?25h[2;30H[1;30H[2;30H[3;21H[?25l[4;25H[46m[[mword[46m][?12l[?25h[?25l[m[word][5;30H[?12l[?25h[6;30H[7;30H[8;30H[9;30H[10;30H[?25l[11;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][12;30H[?12l[?25h[?25l[11;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][10;30H[?12l[?25h[9;30H[8;30H[7;30H[6;30H[5;30H[6;30H[7;30H[8;30H[9;30H[10;30H[?25l[11;29H[46m[[mword[46m][?12l[?25h[?25l[m[word][12;30H[?12l[?25h[13;30H[14;30H[15;30H[16;30H[17;30H[?25l[18;16H[46m([12C)[?12l[?25h[?25l[m[18;16H([12C)[19;27H[46m{[22;15H}[19;28H[?12l[?25h[?25l[m{[22;15H}[20;30H[?12l[?25h[21;27H[?25l[22;22H[46m{[28;15H}[22;23H[?12l[?25h[?25l[m{[28;15H}[23;30H[?12l[?25h[24;30H[25;30H[26;30H[27;27H[?25l[22;22H[46m{[28;15H}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m520 [m[9C l2 = target * layer1_size;[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m521 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m523 [m[9C if [46m([mf > MAX_EXP[46m)[m g = (label - 1) * alpha;[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[27;18H([11C)
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;30H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[28;1H[93m528 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m529 [m[7C // Learn weights input -> hidden[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];[28;30H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m531 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m532 [m    }[?12l[?25h[?25l[27;12H[?12l[?25h[26;30H[25;30H[?25l[4;66H[46m{[24;13H}[?12l[?25h[?25l[m[4;66H{[24;13H}[23;30H[?12l[?25h[22;30H[20;30H[19;30H[?25l[18;18H[46m([11C)[?12l[?25h[?25l[m[18;18H([11C)[17;30H[?12l[?25h[16;21H[15;30H[?25l[8;22H[46m{[14;15H}[?12l[?25h[?25l[m[8;22H{[14;15H}[13;27H[?12l[?25h[12;30H[11;30H[10;30H[9;30H[?25l[8;22H[46m{[14;15H}[8;23H[?12l[?25h[?25l[m{[14;15H}[7;27H[?12l[?25h[6;30H[?25l[5;27H[46m{[8;15H}[5;28H[?12l[?25h[?25l[4;16H([12C)[m[5;27H{[8;15H}[4;30H[?12l[?25h[?25l[4;16H([12C)[3;30H[?12l[?25h[2;30H[1;30H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m505 [m[9C // Learn weights hidden -> output[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m503 [m[9C // Propagate errors output -> hidden[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m502 [m[9C g = (1 - vocab[46m[[mword[46m][m.code[d] - f) * alpha;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate[2;29H[word][1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;1H[94m@                                                                                        [1;30H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m496 [m[9C // Propagate hidden -> output[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m495 [m[9C l2 = vocab[46m[[mword[46m][m.point[d] * layer1_size;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m494 [m[9C f = 0;[2;25H[word][1;21H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m490 [m[7C l1 = last_word * layer1_size;[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m488 [m[7C last_word = sen[46m[[mc[46m][m;[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [2;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[3;28H[c][1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */[1;30H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[1;30H[?12l[?25h[2;30H[3;30H[?25l[59C  [4;1H[93m [m[5;28H[46m[[mc[46m][?12l[?25h[?25l[m[c][6;30H[?12l[?25h[7;30H[8;30H[9;30H[10;30H[11;21H[10;30H[29;1H[K[10;29H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 37044C written[10;29H[?12l[?25h[11;20H[12;29H[13;29H[12;29H[11;20H[10;29H[9;29H[10;29H[11;20H[10;29H 0; d < voca[?25lb[46m[[mword[46m][?12l[?25h[?25l[m[word][?12l[?25hwor[?25l[46m[[mword[46m][?12l[?25h[?25l[m[word][?12l[?25h.codelen; d+[?25l[10;25H[46m([35C)[?12l[?25h[?25l[m[10;25H([35C)[?12l[?25h[?25l [46m{[24;13H}[10;63H[?12l[?25h[?25l[m{[24;13H}[10;64H[?12l[?25h /* 507[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[m[29;14H[K[10;80H[?12l[?25h[?25l( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([m![46m)[m */[?12l[?25h[?25l[11;28r[11;1H[L[1;29r[10;80H!„Éá„Éï„Ç©„É´[94m>>[m[11;1H[93m    [m„Éà[46m)[m */[?12l[?25h[?25l„Å†„Å®[46m)[m */[?12l[?25h[?25lh[46m)[m */[?12l[?25h[?25lhs[46m)[m */[?12l[?25h[?25ls [46m)[m */[?12l[?25h[?25l =[46m)[m */[?12l[?25h[?25l==[46m)[m */[?12l[?25h[?25l= [46m)[m */[?12l[?25h[?25l 0[46m)[m */[?12l[?25h[?25l0„Å†„Åã„Çâ[46m)[m */[?12l[?25h[?25l„Åì„Å£„Å°„ÅØ[46m)[m */[?12l[?25h[?25lÂãï„Åã„Å™„ÅÑ[46m)[m */[?12l[?25h[?25l[10;79H([9C[94m>>[m[11;1H[93m [m[38C)[?12l[?25h[2C[2C[?25lÂãï„Åã„Å™„ÅÑ) */[11;42H[K[11;30H[?12l[?25h[?25lÂãï„Åã„Å™„ÅÑ) */[11;40H[K[11;28H[?12l[?25h[?25lÂãï„Åã„Å™„ÅÑ) */[11;38H[K[11;26H[?12l[?25h[?25lÂãï„Åã„Å™„ÅÑ) */[11;36H[K[11;24H[?12l[?25h[2C[2C[2C[?25l[10;79H[46m([m[9C[94m>>[m[11;1H[93m [m[30C[46m)[?12l[?25h[?25l[m![46m)[m */[?12l[?25h[?25l[10;79H([9C[94m>>[m[11;1H[93m [m[31C)[?12l[?25h[12;21H[13;55H[14;44H[15;82H[16;81H[17;84H[18;88H[19;69H[20;57H[19;69H[18;88H[17;84H[16;81H[15;82H[14;44H[13;55H[12;21H[11;32H[?25l[10;79H[46m([m[9C[94m>>[m[11;1H[93m [m[31C[46m)[?12l[?25h[?25l[m[10;79H([9C[94m>>[m[11;1H[93m [m[31C)[?12l[?25h[10;87H[?25l[46m([m„Éá„Éï„Ç©„É´„Éà [11;1H[93m [m[3C„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑ![46m)[m */[11;35H[K[10;80H[?12l[?25h[?25l([9C  [11;1H[93m [m[29C)[10;82H[?12l[?25h[2C[2C[2C[11;5H[2C[2Chs == 0[2C[2C[2C[2C[2C[2C[2C[?25l[10;79H[46m([m[9C  [11;1H[93m [m[29C[46m)[?12l[?25h[?25l)[m */[11;34H[K[11;30H[?12l[?25h[?25lÔºÅ[46m)[m */[?12l[?25h[?25l[10;79H([9C  [11;1H[93m [m[30C)[12;21H[?12l[?25h[13;55H[14;44H[15;82H[16;81H[17;84H[18;88H[19;69H[20;57H[21;51H[22;78H[23;48H[24;82H[25;32H[26;33H[?25l[27;67H[?12l[?25h[?25l[28;28H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m511 [m[11C target = word;[?12l[?25h[?25l[27;28H[?12l[?25h[?25l[26;67H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l ( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([m„Éá„Éï„Ç©„É´„Éà[46m)[m */[?12l[?25h[?25l„Å†„Å®[46m)[m */[26;86H[?12l[?25h[?25l [46m)[m **[27;1H[93m    [m/[27;15H[K[28;2H[93m10[m[10C if (d == 0) {[28;28H[K[26;87H[?12l[?25h[?25l[46m)[m */[27;1H[93m510 [m [8C if (d == 0) {[28;2H[93m11[m[10C   target = word;[26;86H[?12l[?25h[?25ln[46m)[m **[27;1H[93m    [m/[27;15H[K[28;2H[93m10[m[10C if (d == 0) {[28;28H[K[26;87H[?12l[?25h[?25lne[46m)[m  [27;1H[93m    [m*/[26;88H[?12l[?25h[?25leg[46m))[m[27;1H[93m    [m */[26;89H[?12l[?25h[?25lgaa[27;1H[93m    [m[46m)[m */[?12l[?25h[?25l[93m [mv[46m)[m */[?12l[?25h[?25lvi[46m)[m */[?12l[?25h[?25lv[46m)[m */[27;10H[K[27;6H[?12l[?25h[?25l[93m [m[46m)[m */[27;9H[K[27;5H[?12l[?25h[?25l[93m [mt[46m)[m */[?12l[?25h[?25lti[46m)[m */[?12l[?25h[?25liv[46m)[m */[?12l[?25h[?25lve[46m)[m */[?12l[?25h[?25le [46m)[m */[?12l[?25h[?25l =[46m)[m */[?12l[?25h[?25l==[46m)[m */[?12l[?25h[?25l= [46m)[m */[?12l[?25h[?25l 5[46m)[m */[?12l[?25h[?25l5„Å†„Åã„Çâ[46m)[m */[?12l[?25h[?25l„Åì„Å£„Å°„Åå[46m)[m */[?12l[?25h[?25lÂãï„Åè[46m)[m */[?12l[?25h[29;1H[K[27;30H[?25l[26;71H([17Caa[27;1H[93m [m[30C)[?12l[?25h[?25l

:[?12l[?25hw[?25l"word2vec.c" 703L, 37168C written[27;30H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25hq[?25l[29;2H[K[29;2H[?12l[?25h [27;30H[25;32H[24;31H[23;81H[22;47H[21;77H[20;50H[19;56H[18;68H[17;87H[16;83H[15;80H[14;81H[13;43H[12;54H[11;20H[10;28H[11;20H[12;54H[13;43H[14;81H[15;80H[16;83H[17;87H[18;68H[19;56H[20;50H[21;77H[22;47H[23;81H[24;31H[25;32H[24;31H[23;81H[22;47H[21;77H[20;50H[19;56H[18;68H[17;87H[16;83H[15;80H[14;81H[13;43H[12;54H[11;20H[12;54H[13;43H[14;81H[15;80H[16;83H[17;87H[18;68H[19;56H[20;50H[21;77H[22;47H[23;81H[24;31H[25;32H[27;28H[25;32H[?25l[29;1H[1m-- INSERT --[25;33H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l „Éç„Ç¨„ÉÜ„Ç£„Éñ */[?12l[?25h[?25l„Çµ„É≥„Éó„É™„É≥„Ç∞ */[?12l[?25h[26;59H[25;59H[24;32H[23;59H[22;48H[21;59H[20;51H[19;57H[18;59H[17;59H[16;59H[15;59H[?25l[14;58H[46m[[mc + l1[46m][14;59H[?12l[?25h[?25l[m[c + l1][13;44H[?12l[?25h[12;55H[11;21H[12;55H[13;44H[?25l[14;58H[46m[[mc + l1[46m][14;59H[?12l[?25h[?25l[m[c + l1][?12l[?25h + l[?25l[46m[[mc + l1[46m][?12l[?25h[?25l][?12l[?25h[?25l[m[14;58H[c + l1] [?12l[?25h* syn[?25l1[46m[[mc + l2[46m][14;73H[?12l[?25h[?25l[[?12l[?25h[?25l[m[c + l2][15;74H[?12l[?25h[?25l[15;18H[46m([13C)[?12l[?25h[?25l[?12l[?25h[?25l[m[15;18H([13C)[?12l[?25h[?25l[46m([13C)[15;19H[?12l[?25h[?25l[?12l[?25h[?25l[m([13C)[15;17H[?12l[?25h[14;13H[13;13H[14;13H[15;13H[16;13H[17;13H[18;13H[19;13H[20;13H[21;13H[22;13H[29;1H[K[22;12H[?25l[?12l[?25h[23;12H[24;12H[25;12H[26;12H[25;12H[24;12H[23;12H[22;12H[21;12H[20;12H[19;12H[18;12H   // 'g' is the gradien[32C[?25l[29;1H[1m-- INSERT --[18;69H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l**[?12l[?25h[?25l*/[?12l[?25h[?25l* */[?12l[?25h[?25l  */[?12l[?25h[?25l ' */[?12l[?25h[?25l'g */[?12l[?25h[?25lg' */[?12l[?25h[?25l'„ÅØ */[?12l[?25h[?25lÂãæÈÖç */[?12l[?25h[?25l[19;28r[19;1H[L[1;29r[18;82H„Åß„ÅÇ„Çã **[19;1H[93m    [m/[18;88H[?12l[?25h[20;57H[21;51H[22;63H[23;48H[24;63H[25;32H[26;62H[27;63H[?25l[1;28r[28;1H
[1;29r[28;1H[93m510 [m[9C if (d == 0) {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;[27;31H[?12l[?25h[28;27H[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[28;63H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m515 [m[11C target = table[(next_random >> 16) % table_size];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[28;63H[?12l[?25h[27;63H[26;63H[?25l[25;23H[?12l[?25h[24;27H[23;31H[?25l[22;27H[46m{[25;15H}[22;28H[?12l[?25h[?25l[m{[25;15H}[20;63H[?12l[?25h[19;62H[18;32H[17;63H[16;48H[15;63H[14;51H[13;57H[11;63H[10;63H[9;63H[8;62H[7;63H[6;44H[5;55H[4;21H[?25l[2;63H[46m{[m[25C  [3;1H[93m [m[18;13H[46m}[2;63H[?12l[?25h[?25l[m{[25C  [3;1H[93m [m[18;13H}[4;21H[?12l[?25h[?25l[2;63H[46m{[m[25C  [3;1H[93m [m[18;13H[46m}[2;63H[?12l[?25h[?25l[m{[25C  [3;1H[93m [m[18;13H}[1;63H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[?12l[?25h[2;63H[?25l[3;63H[46m{[m[25C  [4;1H[93m [m[19;13H[46m}[3;63H[?12l[?25h[?25l[m{[25C  [4;1H[93m [m[19;13H}[5;21H[?12l[?25h[6;55H[29;1H[K[6;54H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hl2[?25l[8;78H[?12l[?25h[?25l[29;1H?[6;15H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [12;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[24;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(42[28;1H[94m@                                                                                        [14;61H[?12l[?25h[?25l[m[29;1H?l2[13;77H[?12l[?25h[?25l[29;1H[8;76H[?12l[?25h[?25l[29;1H[6;15H[?12l[?25h[?25l[29;1H[1;28r[1;1H[9L[1;29r[1;1H[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[29;1H[K[1;58H[?12l[?25h[?25l[29;1H?l2[1;28r[1;1H[2L[1;29r[1;1H[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output[29;1H[K[1;74H[?12l[?25h[?25l[29;1H?l2[1;28r[1;1H[7L[1;29r[1;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden[29;1H[K[1;73H[?12l[?25h[?25l[29;1H?l2[1;28r[1;1H[2L[1;29r[1;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?l2[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[14;21H[?12l[?25h[?25l[29;1H/[?12l[?25hl1[?25l[27m[m[H[2J[1;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[2;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[7;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[8;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [11;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [18;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[27;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[14;13H[?12l[?25hl1 = last_word * laye[?25l[29;1H?l1[14;13H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[14;17H[?12l[?25h[?25l[29;1H/l1[27m[m[H[2J[1;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[2;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[7;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[8;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [11;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [18;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[27;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[14;13H[?12l[?25hl1 = last_word * laye[?25l[29;1H?l1[14;13H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[14;17H[?12l[?25h[?25l[29;1H/l1[27m[m[H[2J[1;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[2;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[7;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[8;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [11;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size;
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [18;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[27;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[14;13H[?12l[?25h[28C[?25l[29;1H[1m-- INSERT --[14;42H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l66 */[?12l[?25h[?25l6Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÂÆöÁæ©„Åó„Åü */[?12l[?25h[?25ll */[?12l[?25h[?25ll1 */[?12l[?25h[?25l1„Å´ */[?12l[?25h[?25ll */[?12l[?25h[?25lla */[?12l[?25h[?25las */[?12l[?25h[?25lst */[?12l[?25h[?25lt_ */[?12l[?25h[?25l_w */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25l  */[?12l[?25h[?25l * */[?12l[?25h[?25l  */[?12l[?25h[?25l l */[?12l[?25h[?25lla */[?12l[?25h[?25lay */[?12l[?25h[?25lye */[?12l[?25h[?25ler */[?12l[?25h[?25lr1 */[?12l[?25h[?25l1_ */[?12l[?25h[?25l_s */[14;87H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;86Hsi **[15;1H[93m    [m/[14;88H[?12l[?25h[?25liz  [15;1H[93m    [m*/[14;89H[?12l[?25h[?25lzee[15;1H[93m    [m */[?12l[?25h[?25l[93m [m„Çí */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h *[16;60H[29;1H[K[16;59H[?25l[?12l[?25h[16;13H[?25l[29;1H/l1[23;63H[?12l[?25hl[?25l[29;1H1 change; before #192  61 seconds ago[14;28r[28;1H
[1;29r[14;1H[93m490 [m        l1 = last_word * layer1_size; /*  */[28;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[29;1H[K[14;46H[?12l[?25h[?25l[29;1H1 change; after #192  68 seconds ago[15;28r[15;1H[L[1;29r[14;45H 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[15;1H[93m    [m„Çí‰ª£ÂÖ• */[29;1H[K[14;46H[?12l[?25h[?25l[29;1HAlready at newest change[14;46H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hneu1e[?25l[16;47H[?12l[?25h[?25l[29;1H?[1;86H[?12l[?25h[?25l[29;1H[1;28r[1;1H[10L[1;29r[1;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;[28;1H[94m@                                                                                        [m[29;1H[K[1;49H[?12l[?25h[?25l[29;1H?neu1e[27m[m[H[2J[1;1H[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;[14;49H[?12l[?25h[?25l[29;1H?neu1e[27m[m[H[2J[1;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[2;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[17;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [19;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;[15;43H[?12l[?25h[?25l[29;1H?neu1e[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }[14;13H[?12l[?25h[?25l[29;1H?neu1e[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[38;5;224msearch hit TOP, continuing at BOTTOM[14;12H[?12l[?25h[?25l[m[29;1H/neu1e[29;7H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[38;5;224msearch hit BOTTOM, continuing at TOP[14;13H[?12l[?25h[?25l[m[29;1H?neu1e[29;7H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[38;5;224msearch hit TOP, continuing at BOTTOM[14;12H[?12l[?25h[?25l[m[29;1H?neu1e[29;7H[K[29;1H[2;63H[?12l[?25h[?25l[29;1H/[14;12H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[38;5;224msearch hit BOTTOM, continuing at TOP[14;13H[?12l[?25h[?25l[m[29;1H?neu1e[29;7H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[38;5;224msearch hit TOP, continuing at BOTTOM[14;12H[?12l[?25h[?25l[m[29;1H/neu1e[29;7H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[38;5;224msearch hit BOTTOM, continuing at TOP[14;13H[?12l[?25h[?25l[m[29;1H?neu1e[29;7H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e);
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[38;5;224msearch hit TOP, continuing at BOTTOM[14;12H[?12l[?25h[mneu1e)[15;5H[14;5H[13C[?25l[29;1H[1m-- INSERT --[m[29;13H[K[14;19H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l71 */[?12l[?25h[?25l1Ë°åÁõÆ */[?12l[?25h[29;1H[K[14;28H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hËß£Êîæ[?25l[27m[m[H[2J[1;1H[93m561 [m    // Save the word vectors
[93m562 [m    fprintf(fo, "%lld %lld\n", vocab_size, layer1_size);
[93m563 [m    for (a = 0; a < vocab_size; a++) {
[93m564 [m      fprintf(fo, "%s ", vocab[a].word);
[93m565 [m      if (binary) for (b = 0; b < layer1_size; b++) fwrite(&syn0[a * layer1_size + b]][6;1H[93m    [m, sizeof(real), 1, fo);
[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[8;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[15;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å[17;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[20;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */
[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;
[93m577 [m    for (a = 0; a < iter; a++) {
[93m578 [m      for (b = 0; b < clcn * layer1_size; b++) cent[b] = 0;
[93m579 [m      for (b = 0; b < clcn; b++) centcn[b] = 1;
[93m580 [m      for (c = 0; c < vocab_size; c++) {
[93m581 [m[7C for (d = 0; d < layer1_size; d++) cent[layer1_size * cl[c] + d] += syn0[c * ll[27;1H[93m    [mayer1_size + d];
[93m582 [m[7C centcn[cl[c]]++;[15;16H[?12l[?25h[?25l[29;1H/Ëß£Êîæ[17;9H[?12l[?25h[?25l[29;1H[20;28H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m597 [m[9C x = 0;
[93m598 [m[9C for (b = 0; b < layer1_size; b++) x += cent[layer1_size * d + b] * syn0[c **[3;1H[93m    [m layer1_size + b];
[93m599 [m[9C if (x > closev) {
[93m600 [m[11C closev = x;
[93m601 [m[11C closeid = d;
[93m602 [m[9C }
[93m603 [m[7C }
[93m604 [m[7C cl[c] = closeid;
[93m605 [m      }
[93m606 [m    }
[93m607 [m    // Save the K-means classes
[93m608 [m    for (a = 0; a < vocab_size; a++) fprintf(fo, "%s %d\n", vocab[a].word, cl[a]);
[93m609 [m    free(centcn); /* 572Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücentcn„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m610 [m    free(cent); /* 575Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücent„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m611 [m    free(cl); /* 573Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücl„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m612 [m  } /* 569Ë°åÁõÆelse„Åã„Çâ */
[93m613 [m  fclose(fo);
[93m614 [m} /* 545Ë°åÁõÆvoid TrainModel()„Åã„Çâ */
[93m615 
616 [mint ArgPos(char *str, int argc, char **argv) {
[93m617 [m  int a;
[93m618 [m  for (a = 1; a < argc; a++) if (!strcmp(str, argv[a])) {
[93m619 [m    if (a == argc - 1) {
[93m620 [m      printf("Argument missing for %s\n", str);
[93m621 [m      exit(1);
[93m622 [m    }
[93m623 [m    return a;[14;59H[?12l[?25h[?25l[29;1H?Ëß£Êîæ[27m[m[H[2J[1;1H[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[2;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[9;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å[11;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[14;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */
[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;
[93m577 [m    for (a = 0; a < iter; a++) {
[93m578 [m      for (b = 0; b < clcn * layer1_size; b++) cent[b] = 0;
[93m579 [m      for (b = 0; b < clcn; b++) centcn[b] = 1;
[93m580 [m      for (c = 0; c < vocab_size; c++) {
[93m581 [m[7C for (d = 0; d < layer1_size; d++) cent[layer1_size * cl[c] + d] += syn0[c * ll[21;1H[93m    [mayer1_size + d];
[93m582 [m[7C centcn[cl[c]]++;
[93m583 [m      }
[93m584 [m      for (b = 0; b < clcn; b++) {
[93m585 [m[7C closev = 0;
[93m586 [m[7C for (c = 0; c < layer1_size; c++) {
[93m587 [m[9C cent[layer1_size * b + c] /= centcn[b];
[93m588 [m[9C closev += cent[layer1_size * b + c] * cent[layer1_size * b + c];[14;28H[?12l[?25h[?25l[29;1H/Ëß£Êîæ[27m[m[H[2J[1;1H[93m597 [m[9C x = 0;
[93m598 [m[9C for (b = 0; b < layer1_size; b++) x += cent[layer1_size * d + b] * syn0[c **[3;1H[93m    [m layer1_size + b];
[93m599 [m[9C if (x > closev) {
[93m600 [m[11C closev = x;
[93m601 [m[11C closeid = d;
[93m602 [m[9C }
[93m603 [m[7C }
[93m604 [m[7C cl[c] = closeid;
[93m605 [m      }
[93m606 [m    }
[93m607 [m    // Save the K-means classes
[93m608 [m    for (a = 0; a < vocab_size; a++) fprintf(fo, "%s %d\n", vocab[a].word, cl[a]);
[93m609 [m    free(centcn); /* 572Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücentcn„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m610 [m    free(cent); /* 575Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücent„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m611 [m    free(cl); /* 573Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücl„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m612 [m  } /* 569Ë°åÁõÆelse„Åã„Çâ */
[93m613 [m  fclose(fo);
[93m614 [m} /* 545Ë°åÁõÆvoid TrainModel()„Åã„Çâ */
[93m615 
616 [mint ArgPos(char *str, int argc, char **argv) {
[93m617 [m  int a;
[93m618 [m  for (a = 1; a < argc; a++) if (!strcmp(str, argv[a])) {
[93m619 [m    if (a == argc - 1) {
[93m620 [m      printf("Argument missing for %s\n", str);
[93m621 [m      exit(1);
[93m622 [m    }
[93m623 [m    return a;[14;59H[?12l[?25h[?25l[29;1H?Ëß£Êîæ[27m[m[H[2J[1;1H[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[2;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[9;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å[11;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[14;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */
[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;
[93m577 [m    for (a = 0; a < iter; a++) {
[93m578 [m      for (b = 0; b < clcn * layer1_size; b++) cent[b] = 0;
[93m579 [m      for (b = 0; b < clcn; b++) centcn[b] = 1;
[93m580 [m      for (c = 0; c < vocab_size; c++) {
[93m581 [m[7C for (d = 0; d < layer1_size; d++) cent[layer1_size * cl[c] + d] += syn0[c * ll[21;1H[93m    [mayer1_size + d];
[93m582 [m[7C centcn[cl[c]]++;
[93m583 [m      }
[93m584 [m      for (b = 0; b < clcn; b++) {
[93m585 [m[7C closev = 0;
[93m586 [m[7C for (c = 0; c < layer1_size; c++) {
[93m587 [m[9C cent[layer1_size * b + c] /= centcn[b];
[93m588 [m[9C closev += cent[layer1_size * b + c] * cent[layer1_size * b + c];[14;28H[?12l[?25h[?25l[29;1H?Ëß£Êîæ[11;9H[?12l[?25h[?25l[29;1H[9;16H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m248 [m      b = parent_node[b]; /* b„Å´parent_node„Çí‰ª£ÂÖ• */
[93m249 [m      if (b == vocab_size * 2 - 2) break; /* b == vocab_size * 2 - 2„ÅÆÊôÇÁÑ°Èôê„É´„Éº„Éó„Åã[94m>>[m[3;1H[93m    [m„ÇâËÑ±Âá∫ */
[93m250 [m    }
[93m251 [m    vocab[a].codelen = i;
[93m252 [m    vocab[a].point[0] = vocab_size - 2;
[93m253 [m    for (b = 0; b < i; b++) {
[93m254 [m      vocab[a].code[i - b - 1] = code[b];
[93m255 [m      vocab[a].point[i - b] = point[b] - vocab_size;
[93m256 [m    }
[93m257 [m  }
[93m258 [m  free(count); /* countÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m259 [m  free(binary); /* binaryÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m260 [m  free(parent_node); /* parent_nodeÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m261 [m}
[93m262 
263 [mvoid LearnVocabFromTrainFile() { /* voidÂûãÈñ¢Êï∞LearnVocabFromTrainFile() */
[93m264 [m  char word[MAX_STRING];
[93m265 [m  FILE *fin; /* FILEÂûã„Éù„Ç§„É≥„Çøfin */
[93m266 [m  long long a, i; /* long longÂûãÂ§âÊï∞a, i */
[93m267 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1; /* 0 <= a < vocab_hash_sii[22;1H[93m    [mze„ÅÆÊôÇvocab_hash[a]„Å´-1„Çí‰ª£ÂÖ• */
[93m268 [m  fin = fopen(train_file, "rb"); /* train_file„ÇíË™≠Ëæº„É¢„Éº„Éâ„ÅßÈñã„Åè */
[93m269 [m  if (fin == NULL) { /* „Éù„Ç§„É≥„Çøfin„ÅåNULL„ÅÆÊôÇ */
[93m270 [m    printf("ERROR: training data file not found!\n");
[93m271 [m    exit(1);
[93m272 [m  }
[93m273 [m  vocab_size = 0;[14;52H[?12l[?25h[?25l[29;1H?Ëß£Êîæ[13;42H[?12l[?25h[?25l[29;1H/[14;52H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m561 [m    // Save the word vectors
[93m562 [m    fprintf(fo, "%lld %lld\n", vocab_size, layer1_size);
[93m563 [m    for (a = 0; a < vocab_size; a++) {
[93m564 [m      fprintf(fo, "%s ", vocab[a].word);
[93m565 [m      if (binary) for (b = 0; b < layer1_size; b++) fwrite(&syn0[a * layer1_size + b]][6;1H[93m    [m, sizeof(real), 1, fo);
[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[8;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[15;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å[17;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[20;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */
[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;
[93m577 [m    for (a = 0; a < iter; a++) {
[93m578 [m      for (b = 0; b < clcn * layer1_size; b++) cent[b] = 0;
[93m579 [m      for (b = 0; b < clcn; b++) centcn[b] = 1;
[93m580 [m      for (c = 0; c < vocab_size; c++) {
[93m581 [m[7C for (d = 0; d < layer1_size; d++) cent[layer1_size * cl[c] + d] += syn0[c * ll[27;1H[93m    [mayer1_size + d];
[93m582 [m[7C centcn[cl[c]]++;[15;16H[?12l[?25h[?25l[29;1H/[?12l[?25h371[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1);
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();
[38;5;224msearch hit BOTTOM, continuing at TOP[14;23H[?12l[?25h[m371[2C[2C[?25l[29;1H[1m-- INSERT --[m[29;13H[K[14;31H[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÁ¢∫‰øù„Åó„Åü */[?12l[?25h[?25ln */[?12l[?25h[?25lne */[?12l[?25h[?25leu */[?12l[?25h[?25lu1 */[?12l[?25h[?25l1e */[?12l[?25h[?25le„ÅÆ */[?12l[?25h[?25l„É°„É¢„É™„Çí */[?12l[?25h[?25lËß£Êîæ */[?12l[?25h[13;18H[?25l [?12l[?25h[?25l ?[?12l[?25h[?25l[13;19H[K[13;19H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l70 */[?12l[?25h[?25l0Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÁ¢∫‰øù */[?12l[?25h[?25l„Åó„Åü */[?12l[?25h[?25ln */[?12l[?25h[?25lne */[?12l[?25h[?25leu */[?12l[?25h[?25lu1 */[?12l[?25h[?25l1„ÅÆ */[?12l[?25h[?25l„É°„É¢„É™„Çí */[?12l[?25h[?25lËß£Êîæ */[?12l[?25h[12;18H[29;1H[K[12;17H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hfi[?25l[22;39H[?12l[?25h[?25l[29;1H?[12;14H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[2;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[5;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [8;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[23;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[25;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;[15;21H[?12l[?25h[?25l[29;1H?fi[15;17H[?12l[?25h[?25l[29;1H[7;18H[?12l[?25h[?25l[29;1H[1;28r[1;1H[16L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[13;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */
[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */[29;1H[K[1;22H[?12l[?25h[?25l[29;1H?fi[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[29;1H[K[1;34H[?12l[?25h[?25l[29;1H?fi[27m[m[H[2J[1;1H[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[5;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[6;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[22;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[24;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[28;1H[93m    [m));[14;17H[?12l[?25h[?25l[29;1H?fi[14;13H[?12l[?25h[?25l[29;1H[13;30H[?12l[?25h[?25l[29;1H[13;13H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m323 [m  }
[93m324 [m  SortVocab();
[93m325 [m  if (debug_mode > 0) {
[93m326 [m    printf("Vocab size: %lld\n", vocab_size);
[93m327 [m    printf("Words in train file: %lld\n", train_words);
[93m328 [m  }
[93m329 [m  fin = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„Åè */
[93m330 [m  if (fin == NULL) {
[93m331 [m    printf("ERROR: training data file not found!\n");
[93m332 [m    exit(1);
[93m333 [m  }
[93m334 [m  fseek(fin, 0, SEEK_END);
[93m335 [m  file_size = ftell(fin);
[93m336 [m  fclose(fin);
[93m337 [m}
[93m338 
339 [mvoid InitNet() { /* voidÈñ¢Êï∞IniNet() */
[93m340 [m  long long a, b;
[93m341 [m  unsigned long long next_random = 1;
[93m342 [m  a = posix_memalign((void **)&syn0, 128, (long long)vocab_size * layer1_size * sizeoo[21;1H[93m    [mf(real)); /*  */
[93m343 [m  if (syn0 == NULL) {printf("Memory allocation failed\n"); exit(1);}
[93m344 [m  if (hs) { /* hs=0„Çà„Çä„Åì„ÅÆifÊñá„ÅØFALSE */
[93m345 [m    a = posix_memalign((void **)&syn1, 128, (long long)vocab_size * layer1_size * sizz[25;1H[93m    [meof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„ÇíÂâ≤ÂΩì [26;1H[93m    [m„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ128„ÅÆÂÄçÊï∞[27;1H[93m    [m */
[93m346 [m    if (syn1 == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢„É™[94m>[28;1H@                                                                                        [14;14H[?12l[?25h[?25l[m[29;1H/fi[27m[m[H[2J[1;1H[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[6;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[7;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb");
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[23;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[25;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 1[28;1H[94m@                                                                                        [14;13H[?12l[?25h[mfi = fope[?25ln[46m([16C)[14;23H[?12l[?25h[?25l[m([16C)[14;24H[?12l[?25htrain_file, "rb[?25l[14;23H[46m([16C)[?12l[?25h[?25l[m[14;23H([16C)[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;42H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l Ë™≠„ÅøÂèñ„Çä */[?12l[?25h[29;1H[K[14;52H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hË™≠„ÅøÂèñ„Çä[?25l[29;8H[K[29;8H[?12l[?25h[?25lÂèñ[29;6H[K[29;4H[?12l[?25h[?25l[1;28r[1;1H[8M[1;29r[20;1H[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[21;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[25;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[28;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[29;1H[K[27;63H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [28;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[27;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m393 [m[7C word_count++;[28;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[28;13H[?12l[?25h[?25l
/Ë™≠Âèñ[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m103 [mint SearchVocab(char *word) { /* charÂûã„Éù„Ç§„É≥„Çøword„ÇíÂºïÊï∞„Å´ÊåÅ„Å§intÂûãÈñ¢Êï∞SearchVocab())[2;1H[93m    [m */
[93m104 [m  unsigned int hash = GetWordHash(word); /* Á¨¶Âè∑ÁÑ°intÂûãhash„Å´word„ÅÆhashÂÄ§„Çí‰ª£ÂÖ• */
[93m105 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó */
[93m106 [m    if (vocab_hash[hash] == -1) return -1; /* vocab_hash[hash]„Åå-1„ÅÆÊôÇ-1„ÇíËøî„Åô */
[93m107 [m    if (!strcmp(word, vocab[vocab_hash[hash]].word)) return vocab_hash[hash]; /* ÊñáÂ≠ó[7;1H[93m    [mÂàóword„Å®vocab[vocab_hash[hash]].word„ÅåÁ≠â„Åó„ÅÑÊôÇvocab_hash[hash]„ÇíËøî„Åô */
[93m108 [m    hash = (hash + 1) % vocab_hash_size; /* hash„Å´(hash + 1) % vocab_hash_size„ÇíËøî„Åô  [9;1H[93m    [m*/
[93m109 [m  }
[93m110 [m  return -1;
[93m111 [m}
[93m112 
113 [m// Reads a word and returns its index in the vocabulary /* ÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçò[15;1H[93m    [mË™û„ÅÆÁï™Âè∑„ÇíËøî„Åô */
[93m114 [mint ReadWordIndex(FILE *fin) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„ÇíÂºïÊï∞„Å´ÊåÅ„Å§intÂûãÈñ¢Êï∞ReadWordIndd[17;1H[93m    [mex() */
[93m115 [m  char word[MAX_STRING]; /* MAX_STRING„ÇíÂºïÊï∞„Å´ÊåÅ„Å§charÂûãword„ÇíÂÆ£Ë®Ä */
[93m116 [m  ReadWord(word, fin); /* ÂÖàÁ®ãÂÆöÁæ©„Åó„ÅüReadWord„ÇícharÂûã„Éù„Ç§„É≥„Çøword„Å®„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøff[20;1H[93m    [min„ÇíÂºïÊï∞„Å´Ë®àÁÆó */
[93m117 [m  if (feof(fin)) return -1; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ-1„ÇíËøî„Åô */
[93m118 [m  return SearchVocab(word); /* ÂçòË™ûword„ÅÆË™ûÂΩô‰∏≠„Åß„ÅÆ‰ΩçÁΩÆ„ÇíËøî„Åô */
[93m119 [m}
[93m120 
121 [m// Adds a word to the vocabulary /* ÂçòË™û„ÇíË™ûÂΩô„Å´Âä†„Åà„Çã */
[93m122 [mint AddWordToVocab(char *word) { /* charÂûã„Éù„Ç§„É≥„Çøword„ÇíÂºïÊï∞„Å´ÊåÅ„Å§intÂûãÈñ¢Êï∞AddWordToVV[27;1H[93m    [mocab() */
[93m123 [m  unsigned int hash, length = strlen(word) + 1; /* Á¨¶Âè∑ÁÑ°intÂûãbash, length(word„ÅÆÊñáÂ≠ó[28;1H[94m@                                                                                        [m[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[14;70H[?12l[?25h[?25l[m[29;1H/Ë™≠Âèñ[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m317 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó */
[93m318 [m    ReadWord(word, fin); /* 72Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüReadWordÈñ¢Êï∞ */
[93m319 [m    if (feof(fin)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m320 [m    a = AddWordToVocab(word); /* ÂçòË™û„ÇíË™ûÂΩô„Å´Âä†„Åà„ÇãÈñ¢Êï∞AddWordToVocab */
[93m321 [m    fscanf(fin, "%lld%c", &vocab[a].cn, &c); /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøfin„Åã„ÇâË™≠Âá∫„Åó„ÅüÂÄ§„Çívoo[6;1H[93m    [mcab[a].cn„Å´ÂèñËæº„ÅøÔºå */
[93m322 [m    i++;
[93m323 [m  }
[93m324 [m  SortVocab();
[93m325 [m  if (debug_mode > 0) {
[93m326 [m    printf("Vocab size: %lld\n", vocab_size);
[93m327 [m    printf("Words in train file: %lld\n", train_words);
[93m328 [m  }
[93m329 [m  fin = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„Åè */
[93m330 [m  if (fin == NULL) {
[93m331 [m    printf("ERROR: training data file not found!\n");
[93m332 [m    exit(1);
[93m333 [m  }
[93m334 [m  fseek(fin, 0, SEEK_END);
[93m335 [m  file_size = ftell(fin);
[93m336 [m  fclose(fin);
[93m337 [m}
[93m338 
339 [mvoid InitNet() { /* voidÈñ¢Êï∞IniNet() */
[93m340 [m  long long a, b;
[93m341 [m  unsigned long long next_random = 1;
[93m342 [m  a = posix_memalign((void **)&syn0, 128, (long long)vocab_size * layer1_size * sizeoo[28;1H[93m    [mf(real)); /*  */[14;41H[?12l[?25h[?25l[29;1H/Ë™≠Âèñ[27m[m[H[2J[1;1H[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[2;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[4;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[8;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[12;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[15;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[17;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[22;1H[93m    [m same
[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [25;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[28;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */[14;63H[?12l[?25h[?25l[29;1H:[?12l[?25h369[?25l[1;28r[1;1H[11L[1;29r[1;1H[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real));
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠„ÅøÂèñ„Çä */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();[29;1H[K[1;7H[?12l[?25h[2;7H[3;7H[4;7H[49C[?25l[29;1H[1m-- INSERT --[4;55H[?12l[?25h[?25l[m */[4;55H[K[4;52H[?12l[?25h[?25lÂèñ */[4;53H[K[4;48H[?12l[?25h[2C[?25l„É¢„Éº„Éâ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lt */[?12l[?25h[?25ltr */[?12l[?25h[?25lra */[?12l[?25h[?25lai */[?12l[?25h[?25lin */[?12l[?25h[?25ln_ */[?12l[?25h[?25l_f */[?12l[?25h[?25lfi */[?12l[?25h[?25lil */[?12l[?25h[?25lle */[?12l[?25h[?25le„Çí */[?12l[?25h[?25lÈñã„Åç */[?12l[?25h[?25lÔºå */[?12l[?25h[?25l„Éï„Ç°„Ç§„É´ */[?12l[?25h[?25l[5;28r[5;1H[L[1;29r[4;84H„Éù„Ç§„É≥ [5;1H[93m    [m„Çø */[28;1H[94m@                                                                                        [5;7H[?12l[?25h[?25l[mf */[?12l[?25h[?25lfi */[?12l[?25h[?25li„Å´ */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h[3;63H[2;62H[?25l;a[?12l[?25h[?25l[2;62H[K[2;62H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l ÂãïÁöÑ„Å´ */[?12l[?25h[?25lÁ¢∫‰øù */[?12l[?25h[?25l „É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù */[2;74H[?12l[?25h[29;1H[K[2;72H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hÂãïÁöÑ[?25l[2;74H[?12l[?25h[?25l[29;1H?[27m[m[H[2J[1;1H[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[14;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[93m 59 [m  i = 0;
[93m 60 [m  d1 = pow(vocab[i].cn, power) / train_words_pow;
[93m 61 [m  for (a = 0; a < table_size; a++) {
[93m 62 [m    table[a] = i;
[93m 63 [m    if (a / (double)table_size > d1) {
[93m 64 [m      i++;
[93m 65 [m      d1 += pow(vocab[i].cn, power) / train_words_pow;
[93m 66 [m    }
[93m 67 [m    if (i >= vocab_size) i = vocab_size - 1;
[93m 68 [m  }
[93m 69 [m}
[93m 70 
 71 [m// Reads a single word from a file, assuming space + tab + EOL to be word boundaries[94m@                                                                                        [14;11H[?12l[?25h[?25l[m[29;1H?ÂãïÁöÑ[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[2;1H[93m    [m + b]);
[93m567 [m      fprintf(fo, "\n");
[93m568 [m    }
[93m569 [m  } else {
[93m570 [m    // Run K-means on the word vectors
[93m571 [m    int clcn = classes, iter = 10, closeid;
[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[9;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */
[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof(int)); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å [11;1H[93m    [mÁõÆ„ÅßËß£Êîæ */
[93m574 [m    real closev, x;
[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[14;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */
[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;
[93m577 [m    for (a = 0; a < iter; a++) {
[93m578 [m      for (b = 0; b < clcn * layer1_size; b++) cent[b] = 0;
[93m579 [m      for (b = 0; b < clcn; b++) centcn[b] = 1;
[93m580 [m      for (c = 0; c < vocab_size; c++) {
[93m581 [m[7C for (d = 0; d < layer1_size; d++) cent[layer1_size * cl[c] + d] += syn0[c * ll[21;1H[93m    [mayer1_size + d];
[93m582 [m[7C centcn[cl[c]]++;
[93m583 [m      }
[93m584 [m      for (b = 0; b < clcn; b++) {
[93m585 [m[7C closev = 0;
[93m586 [m[7C for (c = 0; c < layer1_size; c++) {
[93m587 [m[9C cent[layer1_size * b + c] /= centcn[b];
[93m588 [m[9C closev += cent[layer1_size * b + c] * cent[layer1_size * b + c];
[38;5;224msearch hit TOP, continuing at BOTTOM[13;85H[?12l[?25h[?25l[m[29;1H/ÂãïÁöÑ[29;6H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[14;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[93m 59 [m  i = 0;
[93m 60 [m  d1 = pow(vocab[i].cn, power) / train_words_pow;
[93m 61 [m  for (a = 0; a < table_size; a++) {
[93m 62 [m    table[a] = i;
[93m 63 [m    if (a / (double)table_size > d1) {
[93m 64 [m      i++;
[93m 65 [m      d1 += pow(vocab[i].cn, power) / train_words_pow;
[93m 66 [m    }
[93m 67 [m    if (i >= vocab_size) i = vocab_size - 1;
[93m 68 [m  }
[93m 69 [m}
[93m 70 
 71 [m// Reads a single word from a file, assuming space + tab + EOL to be word boundaries[94m@                                                                                        [m[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[14;11H[?12l[?25h[?25l[m[29;1H/ÂãïÁöÑ[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* „É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù */
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [16;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ• */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[25;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[27;1H[93m    [m;
[93m383 [m[7C fflush(stdout);[13;74H[?12l[?25h[?25l[29;1H[1m-- INSERT --[13;68H[?12l[?25h[?25l[m *„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù */[13;67H[?12l[?25h[?25l*n„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù */[13;68H[?12l[?25h[?25lne„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù */[13;69H[?12l[?25h[?25l[14;28r[14;1H[L[1;29r[13;68Heu„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù **[14;1H[93m    [m/[13;70H[?12l[?25h[?25lu1„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫‰øù  [14;1H[93m    [m*/[13;71H[?12l[?25h[?25l„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫[94m>>[m[14;1H[93m    [m‰øù */[13;73H[?12l[?25h[2C[2C[2C[2C[?25lÂãïÁöÑ„Å´Á¢∫‰øù  [14;1H[93m    [m*/[14;8H[K[13;79H[?12l[?25h[?25l[13;28r[28;1H
[1;29r[13;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢ÂãïÁöÑ„Å´Á¢∫‰øù */[28;1H[93m383 [m[7C fflush(stdout);[13;77H[?12l[?25h[?25lÂãïÁöÑ„Å´Á¢∫‰øù */[13;88H[K[13;75H[?12l[?25h[?25lÂãïÁöÑ„Å´Á¢∫‰øù */[13;86H[K[13;73H[?12l[?25h[2C[2C[2C[?25l[14;28r[14;1H[L[1;29r[13;73H„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Á¢∫[94m>>[m[14;1H[93m    [m‰øù */[13;81H[?12l[?25h[2C[2C[2C[14;5H[2C[?25l[13;89H  [14;1H[93m    [m*/[14;8H[K[13;89H[?12l[?25h[?25l[13;28r[28;1H
[1;29r[13;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´ */[28;1H[93m383 [m[7C fflush(stdout);[13;87H[?12l[?25h[?25l[14;28r[14;1H[L[1;29r[13;87HÂâ≤[94m>>[m[14;1H[93m    [mÂΩì */[?12l[?25h[?25lÔºå */[?12l[?25h[29;1H[K[14;7H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hfree(neu[?25l[27m[m[H[2J[1;1H[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[10;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();[14;7H[?12l[?25h[?25l[29;1H:[?12l[?25h370[?25l[27m[m[H[2J[1;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[7;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[8;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[14;1H[93m    [mÂΩìÔºå */
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real));
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [17;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ• */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[26;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[28;1H[93m    [m;[13;7H[?12l[?25h[15;7H[13;7H[14;11H[15;62H[14;11H[2C[?25l[29;1H[1m-- INSERT --[14;10H[?12l[?25h[?25l[m 3*/[?12l[?25h[?25l37*/[?12l[?25h[?25l70*/[?12l[?25h[?25l0Ë°åÁõÆ*/[?12l[?25h[?25l„Åß*/[?12l[?25h[?25lËß£Êîæ*/[?12l[?25h[15;63H[?25l;a[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[15;63H[K[15;63H[?12l[?25h[?25l [?12l[?25h[?25l ?[?12l[?25h[?25l[15;64H[K[15;64H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l * */[?12l[?25h[?25l*n */[?12l[?25h[?25lne */[?12l[?25h[?25leu */[?12l[?25h[?25lu1 */[?12l[?25h[?25l1e */[?12l[?25h[?25le„Å´ */[?12l[?25h[?25l„É°„É¢„É™„Çí */[?12l[?25h[?25l[16;28r[16;1H[L[1;29r[15;83HÂãïÁöÑ„Å´  [16;1H[93m    [m*/[28;1H[94m@                                                                                        [15;89H[?12l[?25h[?25l>>[m[16;1H[93m    [mÂâ≤ÂΩì */[?12l[?25h[?25lÔºå */[?12l[?25h[?25l3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l71 */[?12l[?25h[?25l1Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lËß£Êîæ */[?12l[?25h[14;24H[12;19H[14;24H[16;24H[18;18H[?25lÔºå */[?12l[?25h[?25l3 */[?12l[?25h[16;18H[?25l31Ë°åÁõÆ„ÅßËß£Êîæ */[16;26H[K[16;12H[?12l[?25h[?25l1Ë°åÁõÆ„ÅßËß£Êîæ */[16;25H[K[16;11H[?12l[?25h[?25l51Ë°åÁõÆ„ÅßËß£Êîæ */[16;12H[?12l[?25h[?25l541Ë°åÁõÆ„ÅßËß£Êîæ */[16;13H[?12l[?25h[14;13H[?25l30Ë°åÁõÆ„ÅßËß£Êîæ*/[14;24H[K[14;11H[?12l[?25h[?25l 0Ë°åÁõÆ„ÅßËß£Êîæ*/[14;23H[K[14;10H[?12l[?25h[?25l 50Ë°åÁõÆ„ÅßËß£Êîæ*/[14;11H[?12l[?25h[?25l540Ë°åÁõÆ„ÅßËß£Êîæ*/[14;12H[?12l[?25h[16;12H[18;11H[2C[2C[2C3[?25l */[18;20H[K[18;17H[?12l[?25h[?25l3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l74 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ„ÅÆ */[?12l[?25h[?25lÁÑ°Èôê„É´„Éº„Éó */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[2C[2C[?25l3„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;29H[?12l[?25h[?25l„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;45H[K[18;28H[?12l[?25h[?25l5„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;29H[?12l[?25h[?25l53„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;30H[?12l[?25h[?25l38„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;31H[?12l[?25h[?25l8Ë°åÁõÆ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;35H[?12l[?25h[2C[?25l„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆ */[18;39H[?12l[?25h[2C[2C[2C[2C[2C[2C[2C[?25lÂæå„Å´ */[?12l[?25h[?25l */[18;58H[K[18;55H[?12l[?25h[?25l5 */[?12l[?25h[?25l53 */[?12l[?25h[?25l39 */[?12l[?25h[?25l9Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÈñâ„Åò„Çã */[?12l[?25h[29;1H[K[18;68H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25h5[?25l[29;2H[K[29;2H[?12l[?25h [18;68H[?25l[29;1H:[?12l[?25h359[?25l[29;4H[K[29;4H[?12l[?25h[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h539[?25l[27m[m[H[2J[1;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[11;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;[14;7H[?12l[?25h[?25l[29;1H/[?12l[?25h539[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[4;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[5;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[11;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[13;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[15;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[38;5;224msearch hit BOTTOM, continuing at TOP[15;55H[?12l[?25h[?25l[m[29;1H[K[29;1H:[?12l[?25h372[?25l[14;7H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25h539[?25l[27m[m[H[2J[1;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[11;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi);
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;[14;7H[?12l[?25h[10C[?25l[29;1H[1m-- INSERT --[14;18H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 3 */[?12l[?25h[?25l36 */[?12l[?25h[?25l69 */[?12l[?25h[?25l9Ë°åÁõÆ */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÈñã„ÅÑ„Åü */[?12l[?25h[?25lf */[?12l[?25h[?25lfi */[?12l[?25h[?25lf */[14;41H[K[14;38H[?12l[?25h[?25l */[14;40H[K[14;37H[?12l[?25h[?25lt */[?12l[?25h[?25ltr */[?12l[?25h[?25lra */[?12l[?25h[?25lai */[?12l[?25h[?25lin */[?12l[?25h[?25ln_ */[?12l[?25h[?25l_f */[?12l[?25h[?25lfi */[?12l[?25h[?25lil */[?12l[?25h[?25lle */[?12l[?25h[?25le„Çí */[?12l[?25h[?25lÈñâ„Åò„Çã */[?12l[?25h[29;1H[K[14;53H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h369[?25l[27m[m[H[2J[1;1H[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[2;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[9;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[10;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[16;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[18;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [20;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[14;7H[?12l[?25h[?25l[29;1H:[?12l[?25h3[?25l[29;2H[K[29;2H[?12l[?25h539[?25l[27m[m[H[2J[1;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[11;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 369Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;[14;7H[?12l[?25hfclos[?25le[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25hf[?25l[46m([mfi[46m)[?12l[?25h[?25l[m(fi)[?12l[?25h; /* 369[?25l[29;1H[1m-- INSERT --[14;27H[?12l[?25h[?25l[m6Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[14;57H[K[14;24H[?12l[?25h[?25l3Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[14;56H[K[14;23H[?12l[?25h[?25l37Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[14;24H[?12l[?25h[?25l72Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[14;25H[?12l[?25h[29;1H[K[14;24H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 37754C written[14;24H[?12l[?25h[15;24H[16;24H[15;24H[14;24H[13;23H[?25l[8;51H[46m{[12;9H}[?12l[?25h[?25l[m[8;51H{[12;9H}[10;24H[?12l[?25h[?25l[8;51H[46m{[12;9H}[?12l[?25h[?25l[m[8;51H{[12;9H}[13;23H[?12l[?25h[14;24H[15;24H[16;24H[?25l[17;19H[46m([mNULL[46m)[?12l[?25h[?25l[m(NULL)[18;5H[?12l[?25h[19;5H[20;24H[19;5H[18;5H[?25l[17;19H[46m([mNULL[46m)[?12l[?25h[?25l[m(NULL)[16;24H[?12l[?25h[15;24H[14;24H[13;23H[?25l[8;51H[46m{[12;9H}[?12l[?25h[?25l[m[8;51H{[12;9H}[10;24H[?12l[?25h[9;24H[8;24H[7;24H[6;9H[5;11H[4;24H[3;24H[2;13H[1;24H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[29;1H[K[1;24H[?12l[?25h[2;24H[3;13H[4;24H[5;24H[6;11H[7;9H[8;24H[9;24H[10;24H[11;24H[?25l[9;51H[46m{[13;9H}[?12l[?25h[?25l[m[9;51H{[13;9H}[11;24H[?12l[?25h[?25l[9;51H[46m{[13;9H}[?12l[?25h[?25l[m[9;51H{[13;9H}[11;24H[?12l[?25h[10;24H[9;24H[8;24H[9;9H[8;9H[7;9H[6;9H[5;9H[4;9H[3;9H[2;9H[1;9H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m521 [m[9C f = 0;[1;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m520 [m[9C l2 = target * layer1_size;[1;9H[?12l[?25h[2;9H[3;9H[4;9H[5;9H[6;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[15;9H[16;9H[17;9H[18;9H[?25l[16;51H[46m{[20;9H}[?12l[?25h[?25l[m[16;51H{[20;9H}[18;9H[?12l[?25h[?25l[16;51H[46m{[20;9H}[?12l[?25h[?25l[m[16;51H{[20;9H}[18;9H[?12l[?25h[?25l[16;51H[46m{[20;9H}[?12l[?25h[?25l[m[16;51H{[20;9H}[18;9H[?12l[?25h  co[19;25H[?25l[29;1H[1m-- INSERT --[19;24H[?12l[?25h[?25l[m„Åó */[?12l[?25h[?25lÔºå */[?12l[?25h[?25l3 */[?12l[?25h[?25l37 */[?12l[?25h[?25l75 */[?12l[?25h[?25l5Ë°åÁõÆ */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lÊàª„Çã */[?12l[?25h[17;31H[?25l[16;51H[46m{[20;9H}[16;52H[?12l[?25h[?25l[m{[20;9H}[15;68H[?12l[?25h[?25l[14;10H[?12l[?25h[29;1H[K[14;8H[?25l[?12l[?25h [?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;16H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;16H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;16H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else [46m{[m  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;16H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    }
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;9H[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;10H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 4 */[?12l[?25h[?25l48 */[?12l[?25h[?25l83 */[?12l[?25h[?25l3Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ„ÅÆ */[?12l[?25h[?25ls */[?12l[?25h[?25lsk */[?12l[?25h[?25lki */[?12l[?25h[?25lip */[?12l[?25h[?25lp- */[?12l[?25h[?25l-g */[?12l[?25h[?25lgr */[?12l[?25h[?25lra */[?12l[?25h[?25lam */[?12l[?25h[?25lmÁµÇ„Çè„Çä */[?12l[?25h[29;1H[K[14;23H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;9H[?12l[?25h[?25l[29;1H:[?12l[?25h532[?25l[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;9H[?12l[?25h[13;9H[12;9H    for[?25l [46m([27C)[12;17H[?12l[?25h[?25l[m([27C)[12;18H[?12l[?25hc = 0; c < layer1_size; c+[11;44H[10;13H[9;44H[8;44H[6;44H[5;44H[4;44H[3;44H[2;20H[1;40H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m519 [m[9C }[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m518 [m[11C label = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m515 [m[11C target = table[(next_random >> 16) % table_size];[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m513 [m[9C } else [46m{[7;15H}[1;22H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m512 [m[11C label = 1;[2;22H{[8;15H}[1;26H[?12l[?25h[?25l[2;22H[46m{[8;15H}[2;22H[?12l[?25h[?25l[m{[8;15H}[3;44H[?12l[?25h[4;44H[5;44H[6;44H[7;26H[?25l[2;22H[46m{[8;15H}[?12l[?25h[?25l[m[2;22H{[8;15H}[9;40H[?12l[?25h[10;20H[11;44H[12;44H[13;44H[14;44H[16;44H[17;44H[18;13H[17;44H[16;44H[14;44H[13;44H[12;44H[11;44H[10;20H[9;40H[?25l[2;22H[46m{[8;15H}[?12l[?25h[?25l[m[2;22H{[8;15H}[7;26H[?12l[?25h[6;44H[5;44H[4;44H[3;44H[?25l[2;22H[46m{[8;15H}[2;22H[?12l[?25h[?25l[m{[8;15H}[1;26H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m511 [m[11C target = word;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m510 [m[9C if (d == 0) [46m{[4;15H}[m[28;1H[94m@                                                                                        [1;27H[?12l[?25h[?25l[1;28r[m[1;1H[2L[1;29r[1;1H[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[2;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[3;27H{[6;15H}[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */[1;43H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m505 [m[9C // Learn weights hidden -> output[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m503 [m[9C // Propagate errors output -> hidden[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[1;44H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[2;1H[93m    [m/[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;1H[94m@                                                                                        [1;44H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[1;44H[?12l[?25h[2;44H[3;44H[4;44H[5;44H[7;44H[8;44H[9;44H[10;44H[11;44H[12;31H[13;43H[12;31H[13;43H[14;44H[?25l[45Caa[15;1H[93m [m[16;27H[46m{[19;15H}[16;27H[?12l[?25h[?25l[m{[19;15H}[16;26H[?12l[?25h[?25l[16;18H[46m([md == 0[46m)[?12l[?25h[?25l[m[16;18H(d == 0)[?12l[?25h[14;23Hve > [?25l[14;16H[46m([12C)[m[59Caa[15;1H[93m [14;29H[?12l[?25h[?25l[m[14;16H([12C)[59Caa[15;1H[93m [14;30H[?12l[?25h[m for[?25l [46m([28C)[m[24Caa[15;1H[93m [14;35H[?12l[?25h[?25l[m([28C)[24Caa[15;1H[93m [14;36H[?12l[?25h[md = 0; d < negative + 1; d+[?25l[14;35H[46m([28C)[m[24Caa[15;1H[93m [14;64H[?12l[?25h[?25l[m[14;35H([28C)[24Caa[15;1H[93m [14;65H[?12l[?25h[m { /*[?25l [46m([m[17Caa[15;1H[93m [m[30C[46m)[14;71H[?12l[?25h[?25l[m[29;1H/539[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[4;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[5;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[11;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[13;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[15;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[24;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[26;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[38;5;224msearch hit BOTTOM, continuing at TOP[15;55H[?12l[?25h[m53[?25l[29;1H1 change; before #225  75 seconds ago[27m[m[H[2J[1;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [7;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /*  */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[19;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[14;14H[?12l[?25h[?25l[29;1H1 change; after #225  81 seconds ago[14;13H 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */[14;14H[?12l[?25h[?25l[29;1HAlready at newest change[29;26H[K[14;14H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 37821C written[14;14H[?12l[?25h[?25l[29;1H[K[29;1H:[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* 532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;9H[?12l[?25h} else {  //train skip[15;31H[17;31H[18;31H[17;31H[15;31H[14;31H-gram /*[?25l[29;1H[1m-- INSERT --[14;40H[?12l[?25h[?25l[m s532Ë°åÁõÆ„Åæ„Åß */[14;41H[?12l[?25h[?25lsk532Ë°åÁõÆ„Åæ„Åß */[14;42H[?12l[?25h[?25lki532Ë°åÁõÆ„Åæ„Åß */[14;43H[?12l[?25h[?25lip532Ë°åÁõÆ„Åæ„Åß */[14;44H[?12l[?25h[?25lp-532Ë°åÁõÆ„Åæ„Åß */[14;45H[?12l[?25h[?25l-g532Ë°åÁõÆ„Åæ„Åß */[14;46H[?12l[?25h[?25lgr532Ë°åÁõÆ„Åæ„Åß */[14;47H[?12l[?25h[?25lra532Ë°åÁõÆ„Åæ„Åß */[14;48H[?12l[?25h[?25lam532Ë°åÁõÆ„Åæ„Åß */[14;49H[?12l[?25h[?25lm„ÅÆ532Ë°åÁõÆ„Åæ„Åß */[14;51H[?12l[?25h[2C[?25lÂ≠¶Áøí532Ë°åÁõÆ„Åæ„Åß */[14;55H[?12l[?25h[?25lÔºå532Ë°åÁõÆ„Åæ„Åß */[14;57H[?12l[?25h[29;1H[K[14;55H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h42[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h [14;55H[?25l[27m[m[H[2J[1;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[11;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [13;1H[93m    [m */
[93m423 [m    if (cbow) [46m{[m  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[24;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;19H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶ÁøíÔºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[11;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [13;1H[93m    [m */
[93m423 [m    if (cbow) [46m{[m  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[24;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;19H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶ÁøíÔºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[11;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [13;1H[93m    [m */
[93m423 [m    if (cbow) [46m{[m  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[24;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;19H[?12l[?25h[?25l[29;1H/[?12l[?25hcbow[?25l[14;19H{[14C[?12l[?25h[?25l[29;1H?[14;13H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */[14;21H[?12l[?25h[?25l[29;1H?cbow[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m673 [m  output_file[0] = 0;
[93m674 [m  save_vocab_file[0] = 0;
[93m675 [m  read_vocab_file[0] = 0;
[93m676 [m  if ((i = ArgPos((char *)"-size", argc, argv)) > 0) layer1_size = atoi(argv[i + 1]);[5;1H[93m677 [m  if ((i = ArgPos((char *)"-train", argc, argv)) > 0) strcpy(train_file, argv[i + 1]))[6;1H[93m    [m;
[93m678 [m  if ((i = ArgPos((char *)"-save-vocab", argc, argv)) > 0) strcpy(save_vocab_file, arr[8;1H[93m    [mgv[i + 1]);
[93m679 [m  if ((i = ArgPos((char *)"-read-vocab", argc, argv)) > 0) strcpy(read_vocab_file, arr[10;1H[93m    [mgv[i + 1]);
[93m680 [m  if ((i = ArgPos((char *)"-debug", argc, argv)) > 0) debug_mode = atoi(argv[i + 1]);[12;1H[93m681 [m  if ((i = ArgPos((char *)"-binary", argc, argv)) > 0) binary = atoi(argv[i + 1]);
[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[17;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);
[93m687 [m  if ((i = ArgPos((char *)"-sample", argc, argv)) > 0) sample = atof(argv[i + 1]);
[93m688 [m  if ((i = ArgPos((char *)"-hs", argc, argv)) > 0) hs = atoi(argv[i + 1]);
[93m689 [m  if ((i = ArgPos((char *)"-negative", argc, argv)) > 0) negative = atoi(argv[i + 1]))[22;1H[93m    [m;
[93m690 [m  if ((i = ArgPos((char *)"-threads", argc, argv)) > 0) num_threads = atoi(argv[i + 11[24;1H[93m    [m]);
[93m691 [m  if ((i = ArgPos((char *)"-iter", argc, argv)) > 0) iter = atoi(argv[i + 1]);
[93m692 [m  if ((i = ArgPos((char *)"-min-count", argc, argv)) > 0) min_count = atoi(argv[i + 11[27;1H[93m    [m]);
[93m693 [m  if ((i = ArgPos((char *)"-classes", argc, argv)) > 0) classes = atoi(argv[i + 1]);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;11H[?12l[?25h[?25l[m[29;1H/cbow[29;6H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[5;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[9;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[11;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[13;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[15;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[18;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [20;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[38;5;224msearch hit BOTTOM, continuing at TOP[14;21H[?12l[?25h[?25l[m[29;1H/cbow[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[11;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [13;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[24;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;13H[?12l[?25hcbo[?25l[46m([mcbow[46m)[?12l[?25h[?25l[m(cbow)[?12l[?25h {  //train the cbow architecture /* [?25l[29;1H[1m-- INSERT --[14;57H[?12l[?25h[?25l[m c„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;56H[?12l[?25h[?25lcb„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;57H[?12l[?25h[?25lbo„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;58H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;57How„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô **[15;1H[93m    [m/[14;59H[?12l[?25h[?25l[14;28r[28;1H
[1;29r[14;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* cbo„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[14;58H[?12l[?25h[?25lb„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;89H[K[14;57H[?12l[?25h[?25lc„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;88H[K[14;56H[?12l[?25h[?25l „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;87H[K[14;55H[?12l[?25h[?25l 4„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;56H[?12l[?25h[?25l41„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;57H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;56H1Ë°åÁõÆ„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô [15;1H[93m    [m */[14;61H[?12l[?25h[?25l„Çà„Çä„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ [15;1H[93m    [m„Å∞„Åô */[14;65H[?12l[?25h[?25lc„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„Åø[94m>>[m[15;1H[93m    [mÈ£õ„Å∞„Åô */[14;66H[?12l[?25h[?25lcb„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„Åø [15;1H[93m [14;67H[?12l[?25h[?25l[mbo„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠[94m>>[m[15;1H[93m    [m„ÅøÈ£õ„Å∞„Åô */[14;68H[?12l[?25h[?25low„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠ [15;1H[93m [14;69H[?12l[?25h[?25l[mw „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„Åß[94m>>[m[15;1H[93m    [mË™≠„ÅøÈ£õ„Å∞„Åô */[14;70H[?12l[?25h[?25l =„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„Åß [15;1H[93m [14;71H[?12l[?25h[?25l[m==„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ[94m>>[m[15;1H[93m    [m„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;72H[?12l[?25h[?25l=1„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ [15;1H[93m [14;73H[?12l[?25h[?25l[m=„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ[94m>>[m[15;1H[93m [14;72H[?12l[?25h[?25l[m= „Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ [15;1H[93m [14;73H[?12l[?25h[?25l[m 1„Åì„Åì„Åã„Çâ482Ë°åÁõÆ[94m>>[m[15;1H[93m [m[3C„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;74H[?12l[?25h[?25l„Çà„Çä„Åì„Åì„Åã„Çâ482[94m>>[m[15;1H[93m    [mË°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;78H[?12l[?25h[?25lcbow == 1„Çà„Çä„Åì[2C„Åã„Çâ482Ë°å[94m>>[m[15;1H[93m    [mÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;24H[K[14;63H[?12l[?25h[?25lcbow == 1„Çà„Çä„Åì[2C„Åã„Çâ482Ë°åÁõÆ[94m>>[m[15;1H[93m    [m„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;22H[K[14;61H[?12l[?25h[?25l„Åã„Çâcbow == 1„Çà„Çä„Åì„Åì„Åã„Çâ482[94m>>[m[15;1H[93m    [mË°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;65H[?12l[?25hcbow == 1[2C[2C[?25l„Éá„Éï„Ç©„É´„Éà„Å† [15;1H[93m    [m„Å®„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;7H[?12l[?25h[?25l[2C„Çå„Åå„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;13H[?12l[?25h[?25lÂãï„Åè„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;17H[?12l[?25h[?25lÔºé[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;19H[?12l[?25h[13;8H[15;19H[14;88H [?25l (41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[15;1H[93m [m[3C„Å†„Å®„Åì„Çå„ÅåÂãï„ÅèÔºé[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;56H[?12l[?25h41[2C[2C[2C[2Ccbow == 1[2C[2C[2C[2C[2C[2C[15;5H[2C[2C[2C[2C[2C[2C[2C[?25lÔºé„Åì[2C„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;51H[K[15;17H[?12l[?25h[2C[?25l„Åì[2C„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;49H[K[15;17H[?12l[?25h[?25l„Åè[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;19H[?12l[?25h[?25l[14;55H[46m([m[33C[94m>>[m[15;1H[93m [m[17C[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;20H[?12l[?25h[?25l[?12l[?25h[?25l[14;55H([33C[94m>>[m[15;1H[93m [m[17C)[?12l[?25h[14;87H[?25l[46m([m[33C[94m>>[m[15;1H[93m [m[17C[46m)[14;56H[?12l[?25h[?25l[m[33C[94m>>[m[15;1H[93m [14;55H[?12l[?25h[?25l[m C[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà [15;1H[93m [14;56H[?12l[?25h[?25l[mCo[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´[94m>>[m[15;1H[93m [m[3C„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;57H[?12l[?25h[?25lon[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´ [15;1H[93m [14;58H[?12l[?25h[?25l[mnt[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©[94m>>[m[15;1H[93m [m[3C„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;59H[?12l[?25h[?25lti[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç© [15;1H[93m [14;60H[?12l[?25h[?25l[min[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï[94m>>[m[15;1H[93m [m[3C„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;61H[?12l[?25h[?25li[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç© [15;1H[93m [m[3C„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì[2C„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;56H[K[14;60H[?12l[?25h[?25lt[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©[94m>>[m[15;1H[93m [14;59H[?12l[?25h[?25l[mn[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´ [15;1H[93m [m[3C„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì[2C„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;54H[K[14;58H[?12l[?25h[?25lo[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´[94m>>[m[15;1H[93m [14;57H[?12l[?25h[?25l[mC[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà [15;1H[93m [m[3C„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì[2C„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[15;52H[K[14;56H[?12l[?25h[?25l [46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[15;1H[93m [14;55H[?12l[?25h[?25l[m ÈÄ£Á∂öÂçòË™û[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá[94m>>[m[15;1H[93m [m[3C„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;63H[?12l[?25h[?25lÈõÜÂêà[46m([m41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà[94m>>[m[15;1H[93m [m[3C„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;67H[?12l[?25h[?25l„É¢„Éá„É´[46m([m41Ë°åÁõÆ„Åã„Çâcbow ==[15;1H[93m    [m= 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;73H[?12l[?25h[?25lC[46m([m41Ë°åÁõÆ„Åã„Çâcbow  [15;1H[93m [m[3C== 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;74H[?12l[?25h[?25lCB[46m([m41Ë°åÁõÆ„Åã„Çâcboww[15;1H[93m    [m == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;75H[?12l[?25h[?25lBO[46m([m41Ë°åÁõÆ„Åã„Çâcboo[15;1H[93m    [mw == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;76H[?12l[?25h[?25lOW[46m([m41Ë°åÁõÆ„Åã„Çâcbb[15;1H[93m    [mow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;77H[?12l[?25h[?25lW„ÅÆ[46m([m41Ë°åÁõÆ„Åã„Çâ [15;1H[93m    [mcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m[2C„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;79H[?12l[?25h[?25lÂ≠¶Áøí[46m([m41Ë°åÁõÆ [15;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè[46m)[m„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */[14;83H[?12l[?25h[29;1H[K[14;81H[?25l[2C([5C  [15;1H[93m [m[44C)[14;81H[?12l[?25h[?25l[29;1H:[?12l[?25h38[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[11;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶ÁøíÔºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[14;9H[?12l[?25h} else {  //train skip-gram /* skip-gram[2C[2C[2C[2C[15;57H[14;57H[?25l[29;1H[1m-- INSERT --[14;57H[?12l[?25h[?25l[m(Ôºå532Ë°åÁõÆ„Åæ„Åß */[14;56H[?12l[?25h[?25l[46m()[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;57H[?12l[?25h[?25l[?12l[?25h[?25l[46m([m4[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;57H[?12l[?25h[?25l41[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;58H[?12l[?25h[?25l1Ë°åÁõÆ[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;62H[?12l[?25h[?25l„ÅÆ[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;64H[?12l[?25h[?25lc[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;65H[?12l[?25h[?25lcb[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;66H[?12l[?25h[?25lbo[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;67H[?12l[?25h[?25low[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;68H[?12l[?25h[?25lw [46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;69H[?12l[?25h[?25l =[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;70H[?12l[?25h[?25l==[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;71H[?12l[?25h[?25l=[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;87H[K[14;70H[?12l[?25h[?25l= [46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;71H[?12l[?25h[?25l 1[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[14;72H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;71H1„Çà„Çä[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß [15;1H[93m    [m */[28;1H[94m@                                                                                        [14;76H[?12l[?25h[?25l[m„Éá„Éï„Ç©„É´„Éà„Å†„Å® [15;1H[93m    [mÂãï„Åã„Å™„ÅÑ[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[15;13H[?12l[?25h[?25lÔºÅ[46m)[mÔºå532Ë°åÁõÆ„Åæ„Åß */[15;15H[?12l[?25h[29;1H[K[15;13H[?25l[14;55H([33C  [15;1H[93m [m[13C)[?12l[?25h[?25l[29;1H:[?12l[?25h423[?25l[27m[m[H[2J[1;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[11;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [13;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ [15;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[25;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {[14;9H[?12l[?25hi[12;10H[14;10Hf[?25l [46m([mcbow[46m)[m[71C  [15;1H[93m [14;12H[?12l[?25h[?25l[m(cbow)[71C  [15;1H[93m [14;13H[?12l[?25h[mcbo[?25l[46m([mcbow[46m)[m[71C  [15;1H[93m [14;17H[?12l[?25h[?25l[m(cbow)[71C  [15;1H[93m [14;18H[?12l[?25h[m {  //train the cbow architecture /* [2C[2C[2C[2C[2C[?25l[29;1H:[?12l[?25h483[?25l[27m[m[H[2J[1;1H[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[10;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„ÅÆcbow = 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®[14;1H[93m    [mÂãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[16;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[17;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [20;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[24;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[13;9H[?12l[?25h } else {  //train skip-gram /* skip-gram[2C[2C[?25l[2C[46m([14;15H)[13;55H[?12l[?25h[?25l[m([14;15H)[13;56H[?12l[?25h41[2C[2C[2C[?25l[29;1H[1m-- INSERT --[13;65H[?12l[?25h[?25l[mcbow = 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®Âãï[14;4H[93m [m„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[14;30H[K[13;62H[?12l[?25h[?25l„Åã„Çâcbow = 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†[14;5H„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[13;66H[?12l[?25hcbow [?25l== 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[14;1H[93m [m[3C„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[13;72H[?12l[?25h[?25l[12;12H[?12l[?25h[13;72H[15;72H[17;72H[18;71H[19;72H[21;32H[22;72H[23;72H[25;60H[26;63H[27;71H[?25l[1;28r[28;1H
[1;29r[28;1H[93m494 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m496 [m[9C // Propagate hidden -> output[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[28;72H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;72H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;71H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;72H[?12l[?25h[27;71H[26;72H[25;72H[24;44H[23;55H[22;21H[20;71H[19;63H[18;60H[16;72H[15;72H[14;32H[12;72H[11;71H[12;72H[14;32H[15;72H[14;32H[12;72H[11;71H[10;72H[8;72H[10;72H[11;71H[12;72H[11;71H[12;72H[14;32H[?25l[46m[[mc[46m][?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[m[c][15;29H[?12l[?25h[16;29H[18;29H[29;1H[K[18;28H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hsen[[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[6;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[13;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[14;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[20;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[22;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[24;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[38;5;224msearch hit BOTTOM, continuing at TOP[13;54H[?12l[?25h[?25l[m[29;1H/sen[[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[13;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */
[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word;
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [18;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[21;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[24;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[15;13H[?12l[?25h[27C[?25l[29;1H[1m-- INSERT --[15;41H[?12l[?25h[?25l[m [?12l[?25h[?25l _[?12l[?25h[?25l[15;42H[K[15;42H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l ÈÖçÂàó */[?12l[?25h[?25ls */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25ln„ÅÆ */[?12l[?25h[?25lÂêÑË¶ÅÁ¥† */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lw */[?12l[?25h[?25lwo */[?12l[?25h[?25lor */[?12l[?25h[?25lrd */[?12l[?25h[?25ld„Çí */[?12l[?25h[?25lÂÖ•„Çå„Çã */[?12l[?25h[?25l */[15;75H[K[15;72H[?12l[?25h[?25l */[15;73H[K[15;70H[?12l[?25h[?25l */[15;71H[K[15;68H[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h[29;1H[K[15;70H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hword =[?25l[1;28r[1;1H[7M[1;29r[22;1H[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;[29;1H[K[27;9H[?12l[?25h[?25l

/word =[27;9H[?12l[?25h[?25l

[27;49H[?12l[?25h[?25l

?[27;9H[?12l[?25h[?25l

[1;28r[1;1H[3L[1;29r[1;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[3;1H[93m    [m same[29;1H[K[1;17H[?12l[?25h[?25l[29;1H?word =[1;28r[1;1H[2L[1;29r[1;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;[29;1H[K[1;42H[?12l[?25h[?25l[29;1H/word =[3;17H[?12l[?25h[?25l[29;1H[1;28r[1;1H[5M[1;29r[24;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;[29;1H[K[27;9H[?12l[?25h[?25l

/word =[27;49H[?12l[?25h[?25l

[28;13H[?12l[?25h[?25l
[1;28r[1;1H[15M[1;29r[14;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[17;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [19;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ [21;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];[29;1H[K[28;18H[?12l[?25h[?25l
/word =[1;28r[1;1H[2M[1;29r[27;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_size[28;1H[94m@                                                                                        [m[29;1H[K[27;22H[?12l[?25h[?25l

/word =[27m[m[H[2J[1;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [5;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[17;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[21;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[23;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[24;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[27;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];[14;20H[?12l[?25h[?25l[29;1H/word =[15;24H[?12l[?25h[?25l[29;1H[28;18H[?12l[?25h[?25l
[1;28r[28;1H
[1;29r[28;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[29;1H[K[28;22H[?12l[?25h[?25l
/word =[28;52H[?12l[?25h[?25l
[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m116 [m  ReadWord(word, fin); /* ÂÖàÁ®ãÂÆöÁæ©„Åó„ÅüReadWord„ÇícharÂûã„Éù„Ç§„É≥„Çøword„Å®„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøff[2;1H[93m    [min„ÇíÂºïÊï∞„Å´Ë®àÁÆó */
[93m117 [m  if (feof(fin)) return -1; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ-1„ÇíËøî„Åô */
[93m118 [m  return SearchVocab(word); /* ÂçòË™ûword„ÅÆË™ûÂΩô‰∏≠„Åß„ÅÆ‰ΩçÁΩÆ„ÇíËøî„Åô */
[93m119 [m}
[93m120 
121 [m// Adds a word to the vocabulary /* ÂçòË™û„ÇíË™ûÂΩô„Å´Âä†„Åà„Çã */
[93m122 [mint AddWordToVocab(char *word) { /* charÂûã„Éù„Ç§„É≥„Çøword„ÇíÂºïÊï∞„Å´ÊåÅ„Å§intÂûãÈñ¢Êï∞AddWordToVV[9;1H[93m    [mocab() */
[93m123 [m  unsigned int hash, length = strlen(word) + 1; /* Á¨¶Âè∑ÁÑ°intÂûãbash, length(word„ÅÆÊñáÂ≠ó [11;1H[93m    [mÈï∑+1„Çí‰ª£ÂÖ•) */
[93m124 [m  if (length > MAX_STRING) length = MAX_STRING; /* length„ÅåÊúÄÂ§ßÊñáÂ≠óÊï∞„Çà„ÇäÂ§ß„Åç„ÅÑÂ†¥Âêà„ÅØ [13;1H[93m    [mlengh„Å´ÊúÄÂ§ßÊñáÂ≠óÊï∞„Çí‰ª£ÂÖ• */
[93m125 [m  vocab[vocab_size].word = (char *)calloc(length, sizeof(char)); /* lengthÂÄã„ÅÆchar„Çµ[94m>>[m[15;1H[93m    [m„Ç§„Ç∫„ÅÆ„É°„É¢„É™„ÇíÁ¢∫‰øù„ÅóÔºåcharÂûã„Å´„Åó„Å¶vocab[vocab_size].word„Å´‰ª£ÂÖ• */
[93m126 [m  strcpy(vocab[vocab_size].word, word); /* vocab[vocab_size].word„Å´word„Çí„Ç≥„Éî„Éº */
[93m127 [m  vocab[vocab_size].cn = 0; /* vocab[vocab_size].cn„Å´0„Çí‰ª£ÂÖ• */
[93m128 [m  vocab_size++; /* vocab_size„Å´1„ÇíË∂≥„Åô */
[93m129 [m  // Reallocate memory if needed /* ÂøÖË¶ÅÊôÇ„Å´„É°„É¢„É™„ÅÆÂâ≤ÂΩì„ÇíÂ§âÊõ¥ */
[93m130 [m  if (vocab_size + 2 >= vocab_max_size) { /* vocab_size + 2„Ååvocab_max_size‰ª•‰∏ä„ÅÆÊôÇ **[21;1H[93m    [m/
[93m131 [m    vocab_max_size += 1000; /* vocab_max_size„Å´1000„ÇíË∂≥„Åô */
[93m132 [m    vocab = (struct vocab_word *)realloc(vocab, vocab_max_size * sizeof(struct vocab__[24;1H[93m    [mword)); /*  */
[93m133 [m  }
[93m134 [m  hash = GetWordHash(word); /* hash„Å´word„ÅÆhash„Çí‰ª£ÂÖ• */
[93m135 [m  while (vocab_hash[hash] != -1) hash = (hash + 1) % vocab_hash_size;
[93m136 [m  vocab_hash[hash] = vocab_size - 1;
[38;5;224msearch hit BOTTOM, continuing at TOP[14;25H[?12l[?25h[?25l[m[29;1H/word =[29;8H[K[29;1H[27m[m[H[2J[1;1H[93m168 [m  // Allocate memory for the binary tree construction
[93m169 [m  for (a = 0; a < vocab_size; a++) {
[93m170 [m    vocab[a].code = (char *)calloc(MAX_CODE_LENGTH, sizeof(char));
[93m171 [m    vocab[a].point = (int *)calloc(MAX_CODE_LENGTH, sizeof(int));
[93m172 [m  }
[93m173 [m}
[93m174 
175 [m// Reduces the vocabulary by removing infrequent tokens
[93m176 [mvoid ReduceVocab() {
[93m177 [m  int a, b = 0;
[93m178 [m  unsigned int hash;
[93m179 [m  for (a = 0; a < vocab_size; a++) if (vocab[a].cn > min_reduce) {
[93m180 [m    vocab[b].cn = vocab[a].cn;
[93m181 [m    vocab[b].word = vocab[a].word;
[93m182 [m    b++;
[93m183 [m  } else free(vocab[a].word);
[93m184 [m  vocab_size = b;
[93m185 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1;
[93m186 [m  for (a = 0; a < vocab_size; a++) {
[93m187 [m    // Hash will be re-computed, as it is not actual
[93m188 [m    hash = GetWordHash(vocab[a].word);
[93m189 [m    while (vocab_hash[hash] != -1) hash = (hash + 1) % vocab_hash_size;
[93m190 [m    vocab_hash[hash] = a;
[93m191 [m  }
[93m192 [m  fflush(stdout);
[93m193 [m  min_reduce++;
[93m194 [m}
[93m195 [14;18H[?12l[?25h[?25l[m[29;1H?word =[27m[m[H[2J[1;1H[93m116 [m  ReadWord(word, fin); /* ÂÖàÁ®ãÂÆöÁæ©„Åó„ÅüReadWord„ÇícharÂûã„Éù„Ç§„É≥„Çøword„Å®„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çøff[2;1H[93m    [min„ÇíÂºïÊï∞„Å´Ë®àÁÆó */
[93m117 [m  if (feof(fin)) return -1; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ-1„ÇíËøî„Åô */
[93m118 [m  return SearchVocab(word); /* ÂçòË™ûword„ÅÆË™ûÂΩô‰∏≠„Åß„ÅÆ‰ΩçÁΩÆ„ÇíËøî„Åô */
[93m119 [m}
[93m120 
121 [m// Adds a word to the vocabulary /* ÂçòË™û„ÇíË™ûÂΩô„Å´Âä†„Åà„Çã */
[93m122 [mint AddWordToVocab(char *word) { /* charÂûã„Éù„Ç§„É≥„Çøword„ÇíÂºïÊï∞„Å´ÊåÅ„Å§intÂûãÈñ¢Êï∞AddWordToVV[9;1H[93m    [mocab() */
[93m123 [m  unsigned int hash, length = strlen(word) + 1; /* Á¨¶Âè∑ÁÑ°intÂûãbash, length(word„ÅÆÊñáÂ≠ó [11;1H[93m    [mÈï∑+1„Çí‰ª£ÂÖ•) */
[93m124 [m  if (length > MAX_STRING) length = MAX_STRING; /* length„ÅåÊúÄÂ§ßÊñáÂ≠óÊï∞„Çà„ÇäÂ§ß„Åç„ÅÑÂ†¥Âêà„ÅØ [13;1H[93m    [mlengh„Å´ÊúÄÂ§ßÊñáÂ≠óÊï∞„Çí‰ª£ÂÖ• */
[93m125 [m  vocab[vocab_size].word = (char *)calloc(length, sizeof(char)); /* lengthÂÄã„ÅÆchar„Çµ[94m>>[m[15;1H[93m    [m„Ç§„Ç∫„ÅÆ„É°„É¢„É™„ÇíÁ¢∫‰øù„ÅóÔºåcharÂûã„Å´„Åó„Å¶vocab[vocab_size].word„Å´‰ª£ÂÖ• */
[93m126 [m  strcpy(vocab[vocab_size].word, word); /* vocab[vocab_size].word„Å´word„Çí„Ç≥„Éî„Éº */
[93m127 [m  vocab[vocab_size].cn = 0; /* vocab[vocab_size].cn„Å´0„Çí‰ª£ÂÖ• */
[93m128 [m  vocab_size++; /* vocab_size„Å´1„ÇíË∂≥„Åô */
[93m129 [m  // Reallocate memory if needed /* ÂøÖË¶ÅÊôÇ„Å´„É°„É¢„É™„ÅÆÂâ≤ÂΩì„ÇíÂ§âÊõ¥ */
[93m130 [m  if (vocab_size + 2 >= vocab_max_size) { /* vocab_size + 2„Ååvocab_max_size‰ª•‰∏ä„ÅÆÊôÇ **[21;1H[93m    [m/
[93m131 [m    vocab_max_size += 1000; /* vocab_max_size„Å´1000„ÇíË∂≥„Åô */
[93m132 [m    vocab = (struct vocab_word *)realloc(vocab, vocab_max_size * sizeof(struct vocab__[24;1H[93m    [mword)); /*  */
[93m133 [m  }
[93m134 [m  hash = GetWordHash(word); /* hash„Å´word„ÅÆhash„Çí‰ª£ÂÖ• */
[93m135 [m  while (vocab_hash[hash] != -1) hash = (hash + 1) % vocab_hash_size;
[93m136 [m  vocab_hash[hash] = vocab_size - 1;[14;25H[?12l[?25h[?25l[29;1H?word =[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[2;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[6;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[8;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[9;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */
[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[12;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[16;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[20;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã *[28;1H[94m@                                                                                        [m[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[14;52H[?12l[?25h[?25l[m[29;1H?word =[29;8H[K[29;1H[14;22H[?12l[?25h[?25l[29;1H[13;18H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25h word[?25l[1;28r[1;1H[12M[1;29r[16;1H[93m501 [m          // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[17;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[26;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[29;1H[K[28;25H[?12l[?25h[?25l
? word[27m[m[H[2J[1;1H[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [23;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[14;30H[?12l[?25h[?25l[29;1H? word[8;25H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[2;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[5;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--;
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[20;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [22;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ[24;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[15;8H[?12l[?25h[?25l[29;1H? word[9;10H[?12l[?25h[?25l[29;1H[6;31H[?12l[?25h[?25l[29;1H[6;10H[?12l[?25h[?25l[29;1H[1;28r[1;1H[5L[1;29r[1;1H[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[4;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */[28;1H[94m@                                                                                        [m[29;1H[K[1;35H[?12l[?25h[2;35H[3;35H[5;34H[6;35H[8;27H[9;35H[11;35H[12;23H[?25l[29;1H[1m-- INSERT --[12;24H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l l */[?12l[?25h[?25llo */[?12l[?25h[?25loc */[?12l[?25h[?25lca */[?12l[?25h[?25lal */[?12l[?25h[?25ll_ */[?12l[?25h[?25l_i */[?12l[?25h[?25lit */[?12l[?25h[?25lte */[?12l[?25h[?25ler */[?12l[?25h[?25lr„Çí */[?12l[?25h[?25l1 */[?12l[?25h[?25l1„Å§ */[?12l[?25h[?25lÊ∏õ„Çâ„Åô */[?12l[?25h[29;1H[K[12;47H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hlocal_iter[?25l[13;15H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[19;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[21;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[23;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[38;5;224msearch hit BOTTOM, continuing at TOP[14;43H[?12l[?25h[?25l[m[29;1H[K[29;1H/[?12l[?25hiter[?25l[14;49H[?12l[?25h[?25l[29;1H?[27m[m[H[2J[1;1H[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [3;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[5;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[7;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[9;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[12;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [14;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[28;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */[13;55H[?12l[?25h[?25l[29;1H/iter[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter;
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[19;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[21;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[23;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;[14;49H[?12l[?25hiter = iter[?25l[29;1H[1m-- INSERT --[14;61H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[15;54H[16;17H[17;19H[16;17H[15;54H[14;68H[?25l 4 */[?12l[?25h[?25l44 */[?12l[?25h[?25l4Ë°åÁõÆ */[?12l[?25h[?25l[14;72H[K[15;5H */[15;8H[K[16;6H unsigned long long next_random = (long long)id;[17;6H real f, g;[17;17H[K[18;6H clock_t now;[18;20H[K[19;1H[93m371 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[20;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/[20;25H[K[21;1H[93m372 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[22;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */[22;27H[K[23;1H[93m373 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [24;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */[24;73H[K[25;6H fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[26;6H while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */[26;48H[K[27;8H if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */[28;10H word_count_actual += word_count - last_word_count;[15;5H[?12l[?25h[?25l[14;71H */[15;5H  unsigned long long next_random = (long long)id;[16;6H real f, g;[16;17H[K[17;6H clock_t now;[18;6H real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[19;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/[19;26H[K[20;1H[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[21;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */[21;27H[K[22;1H[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[23;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */ [23;74H[K[24;1H[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[25;6H while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */[25;48H[K[26;6H   if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */[27;8H   word_count_actual += word_count - last_word_count;[27;61H[K[28;10H last_word_count = word_count;[28;40H[K[14;71H[?12l[?25h[?25l„Çà„Çä */[?12l[?25h[?25li */[?12l[?25h[?25lit */[?12l[?25h[?25lte */[?12l[?25h[?25ler */[?12l[?25h[?25lr= */[?12l[?25h[?25l== */[?12l[?25h[?25l=5 */[?12l[?25h[?25le r==5 */[14;79H[?12l[?25h[?25ler==5 */[14;85H[K[14;78H[?12l[?25hr[?25lr ==5 */[?12l[?25h==[?25l= 5 */[?12l[?25h[29;1H[K[14;82H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hlocal_iter[?25l[27m[m[H[2J[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[2;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */
[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[7;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[10;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[13;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô */
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[15;11H[?12l[?25h[?25l[29;1H?local_iter[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[19;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[21;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[23;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;[14;43H[?12l[?25h[?25l[29;1H?local_iter[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [5;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[8;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [11;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô */
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[26;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [28;1H[93m    [m */
[38;5;224msearch hit TOP, continuing at BOTTOM[14;15H[?12l[?25h[13;15H[ml_iter--; /* local_iter[2C1[2C[2C[2C[2C[?25l[29;1H?local_iter[29;12H[K[29;1H[13;28H[?12l[?25h[?25l[29;1H[13;11H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[5;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[12;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[13;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[19;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[21;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[23;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;[14;43H[?12l[?25h[?25l[29;1H/local_iter[27m[m[H[2J[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[2;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */
[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[7;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[10;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[13;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô */
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[15;11H[?12l[?25hlocal_iter--; /* local_iter[2C1[2C[2C[2C[2C[?25l[29;1H[1m-- INSERT --[15;50H[?12l[?25h[?25l[m( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([m3[46m)[m */[?12l[?25h[?25l36[46m)[m */[?12l[?25h[?25l66[46m)[m */[?12l[?25h[?25l6Ë°åÁõÆ[46m)[m */[?12l[?25h[?25l„Çà„Çä[46m)[m */[?12l[?25h[?25lÂΩìÂàù[46m)[m */[?12l[?25h[?25l„ÅØ[46m)[m */[?12l[?25h[?25l5[46m)[m */[?12l[?25h[?25l[15;49H([18C)[?12l[?25h[?25l5) */[15;70H[K[15;65H[?12l[?25h[?25ll5) */[?12l[?25h[?25llo5) */[?12l[?25h[?25loc5) */[?12l[?25h[?25lca5) */[?12l[?25h[?25lal5) */[?12l[?25h[?25ll_5) */[?12l[?25h[?25l_i5) */[?12l[?25h[?25lit5) */[?12l[?25h[?25lte5) */[?12l[?25h[?25ler5) */[?12l[?25h[?25lr 5) */[?12l[?25h[?25l =5) */[?12l[?25h[?25l==5) */[?12l[?25h[?25l= 5) */[?12l[?25h[?25l[15;49H[46m([30C)[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[m[15;49H([30C)[?12l[?25h[?25l„ÅØlocal_iter == 5) */[15;67H[?12l[?25h[14;61H[?25l[12;67H[46m{[22;9H}[12;67H[?12l[?25h[?25l[m{[22;9H}[11;28H[?12l[?25h[9;67H[8;51H[9;67H[11;28H[?25l[12;67H[46m{[22;9H}[12;67H[?12l[?25h[?25l[m{[22;9H}[14;61H[?12l[?25h[15;67H[16;67H[17;26H[18;31H[19;31H[20;67H[21;67H[22;28H[23;65H[24;34H[25;55H[26;56H[27;67H[26;56H[29;1H[K[26;55H[?25l[?12l[?25h[?25l


/[?12l[?25hlayer1_size[?25l[1;28r[1;1H[14M[1;29r[15;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [16;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ[18;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[29;1H[K[27;29H[?12l[?25h[?25l

/layer1_size[27;79H[?12l[?25h[?25l

[1;28r[1;1H[4M[1;29r[25;1H[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[29;1H[K[28;29H[?12l[?25h[?25l
/layer1_size[1;28r[1;1H[3M[1;29r[26;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[29;1H[K[28;43H[?12l[?25h[?25l
?layer1_size[25;29H[?12l[?25h[?25l[29;1H[20;79H[?12l[?25h[?25l[29;1H[20;29H[?12l[?25h[?25l[29;1H[5;25H[?12l[?25h[?25l[29;1H[4;25H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[6;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[7;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[13;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[15;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[17;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[26;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[28;1H[93m    [m;[14;36H[?12l[?25h[?25l[29;1H?layer1_size[12;35H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[2;1H[93m    [mr1_size;
[93m359 [m  }[29;1H[K[1;86H[?12l[?25h[?25l[29;1H?layer1_size[1;18H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;[29;1H[K[1;56H[?12l[?25h[?25l[29;1H?layer1_size[1;28r[1;1H[2L[1;29r[1;1H[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }[29;1H[K[1;22H[?12l[?25h[?25l[29;1H?layer1_size[1;28r[1;1H[2L[1;29r[1;1H[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[2;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */[29;1H[K[2;25H[?12l[?25h[?25l[29;1H?layer1_size[1;58H[?12l[?25h[?25l[29;1H[1;28r[1;1H[6L[1;29r[1;1H[93m351 [m    a = posix_memalign((void **)&syn1neg, 128, (long long)vocab_size * layer1_size *  [2;1H[93m    [msizeof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„Çí[94m>>[m[3;1H[93m    [mÂâ≤ÂΩì„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1neg„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ122[4;1H[93m    [m8„ÅÆÂÄçÊï∞ */
[93m352 [m    if (syn1neg == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢[6;1H[93m    [m„É™„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */[29;1H[K[2;47H[?12l[?25h[?25l[29;1H?layer1_size[1;76H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m348 [m     syn1[a * layer1_size + b] = 0;
[93m349 [m  }
[93m350 [m  if (negative>0) { /* negative=5„Çà„Çä„Åì„ÅÆifÊñá„ÅØTRUE */[29;1H[K[1;19H[?12l[?25h[?25l[29;1H?layer1_size[1;28r[1;1H[L[1;29r[1;1H[93m347 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++)[29;1H[K[1;58H[?12l[?25h[?25l[29;1H?layer1_size[1;28r[1;1H[6L[1;29r[1;1H[93m345 [m    a = posix_memalign((void **)&syn1, 128, (long long)vocab_size * layer1_size * sizz[2;1H[93m    [meof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„ÇíÂâ≤ÂΩì[3;1H[93m    [m„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ128„ÅÆÂÄçÊï∞ [4;1H[93m    [m */
[93m346 [m    if (syn1 == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢„É™[94m>>[m[6;1H[93m    [m„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */[29;1H[K[2;44H[?12l[?25h[?25l[29;1H?layer1_size[1;73H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m342 [m  a = posix_memalign((void **)&syn0, 128, (long long)vocab_size * layer1_size * sizeoo[2;1H[93m    [mf(real)); /*  */
[93m343 [m  if (syn0 == NULL) {printf("Memory allocation failed\n"); exit(1);}
[93m344 [m  if (hs) { /* hs=0„Çà„Çä„Åì„ÅÆifÊñá„ÅØFALSE */[29;1H[K[1;71H[?12l[?25h[?25l[29;1H?layer1_size[27m[m[H[2J[1;1H[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[2;1H[93m    [mË®Ä */
[93m 36 [m}; /* „Åì„ÅÆÊÆµÈöé„ÅßÂ§âÊï∞ÁÑ°„Åó */
[93m 37 
 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [6;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[8;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[10;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[12;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[15;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [17;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;[15;30H[?12l[?25h[?25l[29;1H/layer1_size[27m[m[H[2J[1;1H[93m330 [m  if (fin == NULL) {
[93m331 [m    printf("ERROR: training data file not found!\n");
[93m332 [m    exit(1);
[93m333 [m  }
[93m334 [m  fseek(fin, 0, SEEK_END);
[93m335 [m  file_size = ftell(fin);
[93m336 [m  fclose(fin);
[93m337 [m}
[93m338 
339 [mvoid InitNet() { /* voidÈñ¢Êï∞IniNet() */
[93m340 [m  long long a, b;
[93m341 [m  unsigned long long next_random = 1;
[93m342 [m  a = posix_memalign((void **)&syn0, 128, (long long)vocab_size * layer1_size * sizeoo[14;1H[93m    [mf(real)); /*  */
[93m343 [m  if (syn0 == NULL) {printf("Memory allocation failed\n"); exit(1);}
[93m344 [m  if (hs) { /* hs=0„Çà„Çä„Åì„ÅÆifÊñá„ÅØFALSE */
[93m345 [m    a = posix_memalign((void **)&syn1, 128, (long long)vocab_size * layer1_size * sizz[18;1H[93m    [meof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„ÇíÂâ≤ÂΩì[19;1H[93m    [m„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ128„ÅÆÂÄçÊï∞[20;1H[93m    [m */
[93m346 [m    if (syn1 == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢„É™[94m>>[m[22;1H[93m    [m„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */
[93m347 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++)
[93m348 [m     syn1[a * layer1_size + b] = 0;
[93m349 [m  }
[93m350 [m  if (negative>0) { /* negative=5„Çà„Çä„Åì„ÅÆifÊñá„ÅØTRUE */
[93m351 [m    a = posix_memalign((void **)&syn1neg, 128, (long long)vocab_size * layer1_size *  [28;1H[93m    [msizeof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„Çí[94m>[27;1H@                                                                                        [28;1H@                                                                                        [13;71H[?12l[?25h[?25l[m[29;1H/layer1_size[17;73H[?12l[?25h[?25l[29;1H[18;44H[?12l[?25h[?25l[29;1H[23;58H[?12l[?25h[?25l[29;1H[24;19H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2M[1;29r[25;1H[93m351 [m    a = posix_memalign((void **)&syn1neg, 128, (long long)vocab_size * layer1_size *  [26;1H[93m    [msizeof(real)); /* (long long)vocab_size * layer1_size * sizeof(real) bytes„ÅÆ„É°„É¢„É™„Çí[94m>>[m[27;1H[93m    [mÂâ≤ÂΩì„Å¶ÔºåÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„Çí(void **)&syn1neg„Å´Ââ≤ÂΩì„ÇãÔºéÂâ≤ÂΩì„Åü„É°„É¢„É™„ÅÆ„Ç¢„Éâ„É¨„Çπ„ÅØ122[28;1H[93m    [m8„ÅÆÂÄçÊï∞ */[29;1H[K[25;76H[?12l[?25h[?25l[29;1H/layer1_size[26;47H[?12l[?25h[?25l


[1;28r[1;1H[4M[1;29r[25;1H[93m352 [m    if (syn1neg == NULL) {printf("Memory allocation failed\n"); exit(1);} /* ‰∏ä„Åß„É°„É¢ [26;1H[93m    [m„É™„ÅÆÂâ≤ÂΩì„Å´Â§±Êïó„Åó„ÅüÊôÇ„Å´Ë°®Á§∫ */
[93m353 [m    for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) /* 0 <= a < voo[28;1H[93m    [mcab_size & 0 <= b < layer1_size„ÅÆÊôÇ */[29;1H[K[27;58H[?12l[?25h[?25l

/layer1_size[28;25H[?12l[?25h[?25l
[1;28r[28;1H
[1;29r[28;1H[93m354 [m     syn1neg[a * layer1_size + b] = 0;[29;1H[K[28;22H[?12l[?25h[?25l
/layer1_size[1;28r[1;1H[2M[1;29r[27;1H[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {[29;1H[K[28;56H[?12l[?25h[?25l
/layer1_size[1;28r[1;1H[3M[1;29r[26;1H[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[28;1H[93m    [mr1_size;[29;1H[K[27;18H[?12l[?25h[?25l

/layer1_size[27;86H[?12l[?25h[?25l

[1;28r[1;1H[14M[1;29r[15;1H[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[21;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[22;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[28;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/[29;1H[K[27;35H[?12l[?25h[?25l

/layer1_size[1;28r[1;1H[4M[1;29r[25;1H[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[26;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[28;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */[29;1H[K[25;36H[?12l[?25h[?25l[29;1H/layer1_size[27m[m[H[2J[1;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [2;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô(366Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØlocal_iter == 5) */
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;
[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[17;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [19;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ [21;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];[14;25H[?12l[?25h[?25l[29;1H/layer1_size[15;25H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3M[1;29r[26;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[29;1H[K[27;29H[?12l[?25h[?25l

/layer1_size[27;79H[?12l[?25h[?25l

[1;28r[1;1H[4M[1;29r[25;1H[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[29;1H[K[28;29H[?12l[?25h[?25l
/layer1_size[1;28r[1;1H[3M[1;29r[26;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[29;1H[K[28;43H[?12l[?25h[27;20H[26;43H[25;43H[24;19H[?25l[14;69H[46m{[23;11H}[?12l[?25h[?25l[m[14;69H{[23;11H}[22;17H[?12l[?25h[20;43H[19;42H[18;31H[17;43H[16;32H[15;43H[14;43H[13;17H[14;43H[15;43H[16;32H[17;43H[18;31H[19;42H[20;43H[22;17H[?25l[14;69H[46m{[23;11H}[?12l[?25h[?25l[m[14;69H{[23;11H}[24;19H[?12l[?25h[25;43H[26;43H[27;20H[28;43H[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[27;43H[?12l[?25h[28;43H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[27;43H[?12l[?25h[28;43H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[27;43H[?12l[?25h[28;43H[?25l[1;28r[28;1H
[1;29r[14;63H[46m{[m[28;1H[93m451 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[13;63H{[27;13H}
[93m452 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m454 [m[9C if (d == 0) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m455 [m[11C target = word;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m456 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m457 [m[9C } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[28;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[27;43H[?12l[?25h[28;43H[?25l[1;28r[28;1H
[1;29r[28;1H[93m461 [m[11C if (target == word) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m462 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m463 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m464 [m[9C l2 = target * layer1_size;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m465 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[28;1H[93m472 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m473 [m[7C // hidden -> in[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m475 [m[9C c = sentence_position - window + a;[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m476 [m[9C if (c < 0) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m477 [m[9C if (c >= sentence_length) continue;[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m478 [m[9C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m479 [m[9C if (last_word == -1) continue;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[28;1H[93m    [me[c];[27;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[20;71H[46m{[m[28;1H[93m481 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[19;71H{[27;13H}
[93m482 [m      }[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[28;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[27;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[28;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[27;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */[28;42H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[28;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[27;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m488 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[28;1H[93m    [m„Çí‰ª£ÂÖ• */[27;43H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[27;43H[?12l[?25h[28;42H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[27;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m494 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m496 [m[9C // Propagate hidden -> output[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;43H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;43H[?12l[?25h[27;43H[26;43H[25;43H[24;43H[23;20H[21;43H[20;42H[19;43H[17;43H[16;43H[15;31H[?25l[29;1H/[?12l[?25hsen[[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m354 [m     syn1neg[a * layer1_size + b] = 0;
[93m355 [m  }
[93m356 [m  for (a = 0; a < vocab_size; a++) for (b = 0; b < layer1_size; b++) {
[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[6;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[13;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* senn[14;1H[93m    [m„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g;
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[20;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[22;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[24;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[38;5;224msearch hit BOTTOM, continuing at TOP[13;54H[?12l[?25h[mse[?25ln[46m[[23C][m[7Cnn[14;1H[93m [13;57H[?12l[?25h[?25l[m[[23C][7Cnn[14;1H[93m [13;58H[?12l[?25h[mMAX_SENTENCE_LENGTH + [?25l[13;57H[46m[[23C][m[7Cnn[14;1H[93m [13;81H[?12l[?25h[?25l[m[13;57H[[23C][7Cnn[14;1H[93m [13;82H[?12l[?25h[m; /* [?25l[29;1H[1m-- INSERT --[m[29;13H[K[13;88H[?12l[?25h[?25l ÈÖç[94m>>[m[14;1H[93m    [mÂàósen„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */[14;7H[?12l[?25h[29;1H[K[14;5H[?25l[?12l[?25h[?25l[29;1H/sen[[27m[m[H[2J[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[7;1H[93m    [m same
[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [10;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[13;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */
[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó[18;1H[93m    [m„Åã„ÇâËÑ±Âá∫Ôºå24Ë°åÁõÆ„Çà„ÇäMAX_SENTENCE_LENGTH == 1000 */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[21;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[24;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô(366Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØlocal_iter == 5) */
[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[15;13H[?12l[?25hse[?25ln[46m[[15C][15;16H[?12l[?25h[?25l[m[[15C][15;17H[?12l[?25hsentence_lengt[?25l[15;16H[46m[[15C][?12l[?25h[?25l[m[15;16H[[15C][?12l[?25h = word; /* [2C[2Csen[16;52H[17;52H[19;50H[17;52HGT[?25l[17;16H[46m([38C)[?12l[?25h[?25l[m[17;16H([38C)[?12l[?25h break; /* 389[2C[2C[2C[2C[2C[2C[2C[2C[2C[18;5H[2C[2C[2C[2C[2C24[2C[2C[2C[2CMAX_SENTENCE_LENGTH == 100[?25l[29;1H[1m-- INSERT --[18;52H[?12l[?25h[?25l[m0( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([ms[46m)[m */[?12l[?25h[?25lse[46m)[m */[?12l[?25h[?25len[46m)[m */[?12l[?25h[?25ln„ÅØ[46m)[m */[?12l[?25h[?25lM[46m)[m */[?12l[?25h[?25lMA[46m)[m */[?12l[?25h[?25lAX[46m)[m */[?12l[?25h[?25lX_[46m)[m */[?12l[?25h[?25l_L[46m)[m */[?12l[?25h[?25lLE[46m)[m */[?12l[?25h[?25lEN[46m)[m */[?12l[?25h[?25lE[46m)[m */[18;68H[K[18;64H[?12l[?25h[?25lL[46m)[m */[18;67H[K[18;63H[?12l[?25h[?25l_[46m)[m */[18;66H[K[18;62H[?12l[?25h[?25l_S[46m)[m */[?12l[?25h[?25lSE[46m)[m */[?12l[?25h[?25lEN[46m)[m */[?12l[?25h[?25lNT[46m)[m */[?12l[?25h[?25lTE[46m)[m */[?12l[?25h[?25lEN[46m)[m */[?12l[?25h[?25lNC[46m)[m */[?12l[?25h[?25lCE[46m)[m */[?12l[?25h[?25lE_[46m)[m */[?12l[?25h[?25l_L[46m)[m */[?12l[?25h[?25lLE[46m)[m */[?12l[?25h[?25lEN[46m)[m */[?12l[?25h[?25lNG[46m)[m */[?12l[?25h[?25lGT[46m)[m */[?12l[?25h[?25lTH[46m)[m */[?12l[?25h[?25lH+[46m)[m */[?12l[?25h[?25l+1[46m)[m */[?12l[?25h[?25l1„ÅÆ[46m)[m */[?12l[?25h[?25lË¶ÅÁ¥†[46m)[m */[?12l[?25h[?25l[19;28r[19;1H[L[1;29r[18;85H„Åå[46m)[m **[19;1H[93m    [m/[18;87H[?12l[?25h[?25lÊúâ[94m>>[m[19;1H[93m    [m„Çã„ÅÆ„Åß[46m)[m */[?12l[?25h[?25lÔºå[46m)[m */[?12l[?25h[?25l[1C[?12l[?25h[?25l[?12l[?25h[?25ls[46m)[m */[?12l[?25h[?25lse[46m)[m */[?12l[?25h[?25len[46m)[m */[?12l[?25h[?25ln„ÅÆ[46m)[m */[?12l[?25h[?25lÊõ∏„Åè[46m)[m */[?12l[?25h[?25l[46m)[m */[19;24H[K[19;20H[?12l[?25h[?25l[46m)[m */[19;22H[K[19;18H[?12l[?25h[?25lÂêÑ[46m)[m */[?12l[?25h[?25lË¶ÅÁ¥†[46m)[m */[?12l[?25h[?25l„Å´[46m)[m */[?12l[?25h[?25lw[46m)[m */[?12l[?25h[?25lwo[46m)[m */[?12l[?25h[?25lor[46m)[m */[?12l[?25h[?25lrd[46m)[m */[?12l[?25h[?25ld„Çí[46m)[m */[?12l[?25h[?25l‰ª£ÂÖ•[46m)[m */[?12l[?25h[?25l„ÅóÁµÇ„Çè„Å£„Åü„Çâ[46m)[m */[?12l[?25h[?25lÁÑ°Èôê„É´„Éº„Éó„Çí[46m)[m */[?12l[?25h[?25lÊäú„Åë„Çã[46m)[m */[?12l[?25h[?25l[18;52H([36C[94m>>[m[19;1H[93m [m[64C)[?12l[?25h[18;87H[?25l1ÂÄã„ÅÆË¶ÅÁ¥†„Åå[94m>>[m[19;1H[93m    [mÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;81H[?12l[?25h[?25lH +1ÂÄã„ÅÆË¶ÅÁ¥†„Åå [19;1H[93m [18;78H[?12l[?25h[m+[?25l+ 1ÂÄã„ÅÆË¶ÅÁ¥†[94m>>[m[19;1H[93m    [m„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;80H[?12l[?25h[?25l[46m([m[36C[94m>>[m[19;1H[93m [m[68C[46m)[18;53H[?12l[?25h[?25l[m[36C[94m>>[m[19;1H[93m [18;52H[?12l[?25h[?25l[m0 [46m([msen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥† [19;1H[93m [18;53H[?12l[?25h[?25l[m[36C  [19;1H[93m [18;54H[?12l[?25h[?25l[m([35C  [19;1H[93m [m[68C)[18;55H[?12l[?25h[?25l[46m([m[35C  [19;1H[93m [m[68C[46m)[18;54H[?12l[?25h[?25l[m(ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆ [19;1H[93m    [mË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;58H[?12l[?25hsen[2CMAX_SENTENCE_LENGTH + 1[2C[19;5H[2C[2C[2C[2C[2C[2C[2C[2Csen[2C[2C[2C[2C[2Cword[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[16;67H[17;66H[20;51H[17;66H 389[2C[2C[2C[2C[2C[2C[2C[2C[2C[18;5H[2C[2C[2C[2C[2C24[2C[2C[2C[2C[?25lMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶Å [19;1H[93m    [mÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;76H[K[18;23H[?12l[?25h[?25lMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥† [19;1H[93m    [m„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;74H[K[18;21H[?12l[?25h[?25lMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„Åå [19;1H[93m    [mÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;72H[K[18;19H[?12l[?25h[?25l4MAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ [19;1H[93m    [m„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;70H[K[18;17H[?12l[?25h[?25l2MAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ[94m>>[m[19;1H[93m [18;16H[?12l[?25h[?25l[mMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã [19;1H[93m [m[3C„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;68H[K[18;15H[?12l[?25h[?25lsMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ[94m>>[m[19;1H[93m [m[3C„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;16H[?12l[?25h[?25lseMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ [19;1H[93m [18;17H[?12l[?25h[?25l[menMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„Åå[94m>>[m[19;1H[93m    [mÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;18H[?12l[?25h[?25lntMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„Åå [19;1H[93m [18;19H[?12l[?25h[?25l[mteMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†[94m>>[m[19;1H[93m    [m„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;20H[?12l[?25h[?25lenMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥† [19;1H[93m [18;21H[?12l[?25h[?25l[mncMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶Å[94m>>[m[19;1H[93m    [mÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;22H[?12l[?25h[?25lceMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶Å [19;1H[93m [18;23H[?12l[?25h[?25l[me_MAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆ[94m>>[m[19;1H[93m    [mË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;24H[?12l[?25h[?25l_lMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆ [19;1H[93m [18;25H[?12l[?25h[?25l[mleMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã[94m>>[m[19;1H[93m    [m„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;26H[?12l[?25h[?25lenMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã [19;1H[93m [18;27H[?12l[?25h[?25l[mngMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1[94m>>[m[19;1H[93m    [mÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;28H[?12l[?25h[?25lgtMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 11[19;1H[93m [18;29H[?12l[?25h[?25l[mthMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH +  [19;1H[93m    [m1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;30H[?12l[?25h[?25lh„ÅåMAX_SENTENCE_LENGTH == 1000 (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH  [19;1H[93m    [m+ 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;32H[?12l[?25hMAX_SENTENCE_LENGTH == 1000[?25l0„Å´ (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTT[19;1H[93m    [mH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[18;61H[?12l[?25h[?25l[20;28r[20;1H[L[1;29r[18;61HÈÅî„Åó„ÅüÊôÇ (ÈÖçÂàósen„ÅØMAX_SENTENN[19;1H[93m    [mCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë[94m>>[m[20;1H[93m    [m„Çã) */[18;69H[?12l[?25h[2C[?25l389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [19;1H[93m    [m„Éó    „Åã„ÇâËÑ±Âá∫Ôºå (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´woo[20;1H[93m    [mrd„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[19;21H[?12l[?25h[?25l „Åã„ÇâËÑ±Âá∫Ôºå (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´worr[20;1H[93m    [md„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;46H[K[19;10H[?12l[?25h[?25l „Åã„ÇâËÑ±Âá∫Ôºå (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´wordd[20;1H[93m    [m„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;45H[K[19;9H[?12l[?25h[?25l „Åã„ÇâËÑ±Âá∫Ôºå (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word[94m>>[m[20;1H[93m [19;8H[?12l[?25h[?25l[m„Åã„ÇâËÑ±Âá∫Ôºå (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí[20;4H[93m [m‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;43H[K[19;7H[?12l[?25h[2C[2C[2C[2C[2C[?25l (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£[20;4H[93m [mÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;41H[K[19;15H[?12l[?25h[16;67H[19;15H[18;88H[?25lsentence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó [19;1H[93m [m[3C„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•[20;4H[93m [m„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;39H[K[18;13H[?12l[?25h[?25lsentence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã [19;1H[93m [m[3C„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„Åó[20;4H[93m [mÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;37H[K[18;11H[?12l[?25h[?25lsentence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„Çâ [19;1H[93m    [mËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ[20;4H[93m [m„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;35H[K[18;9H[?12l[?25h[?25lsentence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ± [19;1H[93m    [mÂá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè[20;5H„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;33H[K[18;7H[?12l[?25h[?25l[93m [msentence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ [19;1H[93m    [m (ÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£[20;5H„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;31H[K[18;5H[?12l[?25h[?25l[17;88Hsee[18;1H[93m    [mntence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (([19;1H[93m    [mÈÖçÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü[20;5H„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;29H[K[17;88H[?12l[?25h[?25lsentt[18;1H[93m    [mence_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖç [19;1H[93m    [mÂàósen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„Çâ[20;4H[93m [mÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;27H[K[17;86H[?12l[?25h[?25lsentenn[18;1H[93m    [mce_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàó [19;1H[93m    [msen„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°[20;4H[93m [mÈôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;25H[K[17;84H[?12l[?25h[?25lsentencee[18;1H[93m    [m_length„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósee[19;1H[93m    [mn„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê[20;4H[93m [m„É´„Éº„Éó„ÇíÊäú„Åë„Çã) */[20;23H[K[17;82H[?12l[?25h[?25lsentence_ll[18;1H[93m    [mength„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen[94m>>[m[19;1H[93m    [m„ÅØMAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê[94m>>[m[20;1H[93m [17;80H[?12l[?25h[?25l[msentence_lenn[18;1H[93m    [mgth„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMM[19;1H[93m    [mAX_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº[20;5H„Éó„ÇíÊäú„Åë„Çã) */[20;19H[K[17;78H[?12l[?25h[?25lsentence_lengtt[18;1H[93m    [mh„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAXX[19;1H[93m    [m_SENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó[20;5H„ÇíÊäú„Åë„Çã) */[20;17H[K[17;76H[?12l[?25h[?25lsentence_length[94m>>[m[18;1H[93m    [m„ÅåMAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX__[19;1H[93m    [mSENTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó[94m>>[m[20;1H[93m [17;74H[?12l[?25h[?25l[msentence_length„ÅåMM[18;1H[93m    [mAX_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENN[19;1H[93m    [mTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú[20;5H„Åë„Çã) */[20;13H[K[17;72H[?12l[?25h[?25l9sentence_length„ÅåMAXX[18;1H[93m    [m_SENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTEE[19;1H[93m    [mNCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë[20;5H„Çã) */[20;11H[K[17;70H[?12l[?25h[?25l8sentence_length„ÅåMAX__[18;1H[93m    [mSENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENN[19;1H[93m    [mCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë[94m>>[m[20;1H[93m [17;69H[?12l[?25h[?25l[m3sentence_length„ÅåMAX_SS[18;1H[93m    [mENTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCC[19;1H[93m    [mE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã[20;4H[93m [m) */[20;9H[K[17;68H[?12l[?25h[?25l sentence_length„ÅåMAX_SEE[18;1H[93m    [mNTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (ÈÖçÂàósen„ÅØMAX_SENTENCEE[19;1H[93m    [m_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã))[20;1H[93m    [m */[20;8H[K[17;67H[?12l[?25hsentence_length[2CMAX_S[18;5HNTENCE_LENGTH == 1000[2C[2C[2C[2C[2C389[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[?25l [46m([m[20CEE[19;1H[93m [m[87C[46m))[m[20;1H[93m [18;68H[?12l[?25h[?25l[m[21CEE[19;1H[93m [m[87C[46m))[m[20;1H[93m [18;69H[?12l[?25h[?25l[m(iÈÖçÂàósen„ÅØMAX_SENTENCC[19;1H[93m    [mE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë„Çã[20;4H[93m [m) */[18;70H[?12l[?25h[?25li.ÈÖçÂàósen„ÅØMAX_SENTENN[19;1H[93m    [mCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë[94m>>[m[20;1H[93m    [m„Çã) */[18;71H[?12l[?25h[?25l.eÈÖçÂàósen„ÅØMAX_SENTEE[19;1H[93m    [mNCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú„Åë[18;72H[?12l[?25h[?25le.ÈÖçÂàósen„ÅØMAX_SENTT[19;1H[93m    [mENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú[94m>>[m[20;1H[93m [m[3C„Åë„Çã) */[18;73H[?12l[?25h[?25l. ÈÖçÂàósen„ÅØMAX_SENN[19;1H[93m    [mTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú[18;74H[?12l[?25h. [2C[2Csen[2CMAX_SE[19;5HTEN[21;51H[23;74H[24;28H[26;88H[27;61H[28;86H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[27;84H[?12l[?25h[28;26H[?25l[1;28r[28;1H
[1;29r[28;1H[93m412 [m      last_word_count = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m413 [m      sentence_length = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */[27;70H[?12l[?25h[28;28H[?25l[1;28r[28;1H
[1;29r[28;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[27;34H[?12l[?25h[29;1H[K[27;33H[?25l[?12l[?25h[?25l

:[?12l[?25hw[?25l"word2vec.c" 703L, 38335C written[27;33H[?12l[?25h[28;33H[?25l[1;28r[28;1H
[1;29r[28;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[29;1H[K[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[27;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [28;1H[93m    [m */[27;33H[?12l[?25h[?25l[1;28r[1;1H[5M[1;29r[24;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ[25;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[24;33H[?12l[?25h[26;25H[27;17H[28;33H[?25l[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;[27;32H[?12l[?25h[28;33H[?25l[1;28r[28;1H
[1;29r[28;1H[93m430 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_size[28;1H[94m@                                                                                        [27;33H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m432 [m        for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m433 [m[7C cw++;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[19;69H[46m{[m[28;1H[93m434 [m      [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[18;69H{[27;11H}
[93m435 [m      if (cw) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m438 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m444 [m[9C else f = expTable[[46m([mint[46m)[m((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[26;33H(int)
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[27;33H[?12l[?25h[28;33H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[27;33H[?12l[?25h[28;33H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[27;33H[?12l[?25h[28;33H[?25l[1;28r[28;1H
[1;29r[14;63H[46m{[m[28;1H[93m451 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[13;63H{[27;13H}
[93m452 [m[7C // NEGATIVE SAMPLING[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m454 [m[9C if (d == 0) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m455 [m[11C target = word;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m456 [m[11C label = 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m457 [m[9C } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[27;33H[?12l[?25h[28;33H[?25l[1;28r[28;1H
[1;29r[28;1H[93m461 [m[11C if (target == word) continue;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m462 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m463 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[21;22H{[27;15H}
[93m464 [m[9C l2 = target * layer1_size;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m465 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[8;66H[46m{[m[28;1H[93m472 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[7;66H{[27;13H}
[93m473 [m[7C // hidden -> in[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m475 [m[9C c = sentence_position - window + a;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m476 [m[9C if (c < 0) continue;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m477 [m[9C if (c >= sentence_length) continue;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m478 [m[9C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m479 [m[9C if (last_word == -1) continue;[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[28;1H[93m    [me[c];[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[20;71H[46m{[m[28;1H[93m481 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[19;71H{[27;13H}
[93m482 [m      }[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[28;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[27;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[28;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [28;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m488 [m[7C last_word = sen[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[28;1H[93m    [m„Çí‰ª£ÂÖ• */[27;33H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[27;33H[?12l[?25h[28;33H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[27;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m494 [m[9C f = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m496 [m[9C // Propagate hidden -> output[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;33H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m500 [m[9C else f = expTable[[46m([mint[46m)[m((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;33H[?12l[?25h[?25l[1;28r[1;1H[3M[1;29r[25;33H(int)
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[27;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[26;33H[?12l[?25h[28;33H[?25l[1;28r[28;1H
[1;29r[28;1H[93m503 [m[9C // Propagate errors output -> hidden[28;33H[?12l[?25h[27;33H[25;33H[?25l[24;33H[46m([mint[46m)[?12l[?25h[?25l[m(int)[23;33H[?12l[?25h[22;33H[21;33H[20;33H[19;33H[18;20H[16;33H[15;33H[14;33H[15;33H[16;33H[18;20H[16;33H[15;33H[14;33H[12;33H[11;33H[10;31H[8;33H[7;33H[6;33H[4;33H[2;33H[4;33H[6;33H[7;33H[8;33H[10;31H[11;33H[12;33H[14;33H[15;33H[16;33H[18;20H[19;33H[18;20H[16;33H[15;33H[14;33Hr1_size; c+[?25l[14;17H[46m([27C)[?12l[?25h[?25l[m[14;17H([27C)[?12l[?25h neu1[?25le[46m[[mc[46m][?12l[?25h[?25l[m[c][15;52H[?12l[?25h[16;52H[18;20H[19;52H[20;43H[21;52H[22;52H[23;52H[24;52H[25;52H[27;52H[25;52H[24;52H[23;52H[?25l[23;23H[46m([12C)[?12l[?25h[?25l[m[23;23H([12C)[?12l[?25h continu[24;45H[25;45H[27;45H[28;45H[?25l[1;28r[28;1H
[1;29r[28;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[28;45H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[27;45H[?12l[?25h[28;45H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */[27;31H[?12l[?25h[28;45H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[28;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[27;45H[?12l[?25h[26;45H[25;31H[24;45H[23;45H[22;45H[21;45H[20;45H[18;45H[17;45H[16;45H[15;45H[?25l[15;18H[46m([13C)[?12l[?25h[?25l[m[15;18H([13C)[?12l[?25h[?25l[46m([13C)[15;18H[?12l[?25h[?25l[m([13C)[15;17H[?12l[?25h[16;16H[17;16H[18;16H[20;16H[21;16H[22;16H[23;16H[24;16H[25;16H[24;16H[23;16H[22;16H[21;16H[20;16H[18;16H[17;16H[16;16H[15;16H[14;16H[13;16H[12;16H[13;16H[14;16H[15;16H[14;16H[13;16H[12;16H[11;16H[?25l[9;16H[46m([mhs[46m)[m[69C  [10;1H[93m [9;16H[?12l[?25h[?25l[m(hs)[69C  [10;1H[93m [11;16H[?12l[?25h[?25l[m[9;16H[46m([mhs[46m)[m[69C  [10;1H[93m [9;16H[?12l[?25h[?25l[m(hs)[69C  [10;1H[93m [11;16H[?12l[?25h[?25l[m[9;16H[46m([mhs[46m)[m[69C  [10;1H[93m [9;16H[?12l[?25h[?25l[m(hs)[69C  [10;1H[93m [9;15H[?12l[?25h[11;13H[12;13H[13;13H[14;13H[15;13H[16;13H[17;13H[18;13H[20;13H[21;13H[22;13H[23;13H[24;13H[?25l[m[9;63H[46m{[m[25C  [10;1H[93m [m[25;13H[46m}[?12l[?25h[?25l[m[9;63H{[25C  [10;1H[93m [m[25;13H}[24;13H[?12l[?25h[23;13H[22;13H[21;13H[20;13H[18;13H[17;13H[16;13H[15;13H[14;13H  [15;15H[16;15H[17;15H[18;15H[20;15H[21;15H[22;15H[23;15H[24;15H[25;15H[26;15H[27;15H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[27;15H[?12l[?25h[25;15H[24;15H[23;15H[22;15H[21;15H[20;15H[19;15H[18;15H[16;15H[15;15H[14;15H[13;15H[12;15H[11;15H[10;15H[9;15H[7;15H[6;15H[7;15H[9;13H[10;13H[11;13H[12;13H[13;13H[14;13H[15;13H[16;13H[18;13H[19;13H[20;13H[21;13H[22;13H[?25l[7;63H[46m{[m[25C  [8;1H[93m [m[23;13H[46m}[?12l[?25h[?25l[m[7;63H{[25C  [8;1H[93m [m[23;13H}[24;13H[?12l[?25h[25;13H[27;13H[28;13H[?25l[1;28r[28;1H
[1;29r[28;1H[93m512 [m[11C label = 1;[28;13H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[28;13H[?12l[?25h[27;13H[26;13H[25;13H[23;13H[22;13H[?25l[5;63H[46m{[m[25C  [6;1H[93m [m[21;13H[46m}[?12l[?25h[?25l[m[5;63H{[25C  [6;1H[93m [m[21;13H}[22;13H[?12l[?25h[?25l[5;63H[46m{[m[25C  [6;1H[93m [m[21;13H[46m}[?12l[?25h[?25l[m[5;63H{[25C  [6;1H[93m [m[21;13H}[20;13H[?12l[?25h[19;13H[18;13H[17;13H[16;13H[14;13H[13;13H[12;13H[11;13H[10;13H[9;13H[8;13H[7;13H[?25l[29;1H/[?12l[?25hMAX_EXP[?25l[11;25H[?12l[?25h[?25l[29;1H?[27m[m[H[2J[1;1H[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [15;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[27;1H[93m    [me[c];
[93m481 [m[7C }[14;82H[?12l[?25h[?25l[29;1H?MAX_EXP[14;53H[?12l[?25h[?25l[29;1H[13;29H[?12l[?25h[?25l[29;1H[12;23H[?12l[?25h[?25l[29;1H[1;28r[1;1H[12L[1;29r[1;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;[29;1H[K[1;73H[?12l[?25h[?25l[29;1H?MAX_EXP[1;44H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[29;1H[K[1;29H[?12l[?25h[?25l[29;1H?MAX_EXP[1;28r[1;1H[L[1;29r[1;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;1H[94m@                                                                                        [m[29;1H[K[1;25H[?12l[?25h[?25l[29;1H?MAX_EXP[27m[m[H[2J[1;1H[93m 10 [m//  distributed under the License is distributed on an "AS IS" BASIS,
[93m 11 [m//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
[93m 12 [m//  See the License for the specific language governing permissions and
[93m 13 [m//  limitations under the License.
[93m 14 
 15 [m#include <stdio.h>
[93m 16 [m#include <stdlib.h>
[93m 17 [m#include <string.h>
[93m 18 [m#include <math.h>
[93m 19 [m#include <pthread.h>
[93m 20 
 21 [m#define MAX_STRING 100 /* ÊúÄÂ§ßÊñáÂ≠óÊï∞„ÅØ100Â≠ó„Åæ„Åß */
[93m 22 [m#define EXP_TABLE_SIZE 1000
[93m 23 [m#define MAX_EXP 6
[93m 24 [m#define MAX_SENTENCE_LENGTH 1000 /* 365Ë°åÁõÆ„Å®403Ë°åÁõÆ„Åß‰ΩøÁî® */
[93m 25 [m#define MAX_CODE_LENGTH 40 /* ÊúÄÂ§ß„Ç≥„Éº„ÉâÈï∑„ÅØ40Â≠ó„Åæ„Åß */
[93m 26 
 27 [mconst int vocab_hash_size = 30000000;  // Maximum 30 * 0.7 = 21M words in the vocabull[19;1H[93m    [mary
[93m 28 
 29 [mtypedef float real;[19C // Precision of float numbers
[93m 30 
 31 [m/* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„ÇíÂÆ£Ë®Ä */
[93m 32 [mstruct vocab_word {
[93m 33 [m  long long cn; /* long longÂûã(64 bitÁ¨¶Âè∑‰ªòÊï¥Êï∞Âûã) cn */
[93m 34 [m  int *point; /* intÂûã„Éù„Ç§„É≥„Çøpoint„ÇíÂÆ£Ë®Ä */
[93m 35 [m  char *word, *code, codelen; /* charÂûã(1 byteÊñáÂ≠óÂûã)codelen„Å®„Éù„Ç§„É≥„ÇøwordÔºåcode„ÇíÂÆ£[94m>>[m[28;1H[93m    [mË®Ä */[14;13H[?12l[?25h[?25l[29;1H/MAX_EXP[27m[m[H[2J[1;1H[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[4;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;[14;25H[?12l[?25h[?25l[29;1H/MAX_EXP[15;29H[?12l[?25h[?25l[29;1H[16;44H[?12l[?25h[?25l[29;1H[16;73H[?12l[?25h[?25l[29;1H[1;28r[1;1H[11M[1;29r[18;1H[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[29;1H[K[28;23H[?12l[?25h[?25l
/MAX_EXP[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[29;1H[K[28;29H[?12l[?25h[?25l
/MAX_EXP[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[29;1H[K[27;53H[?12l[?25h[?25l

/MAX_EXP[27;82H[?12l[?25h[?25l

[27m[m[H[2J[1;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[2;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[6;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [10;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0;
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[19;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[28;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[15;25H[?12l[?25hMAX_EX[?25l[15;18H[46m([13C)[?12l[?25h[?25l[m[15;18H([13C)[?12l[?25h continue; /* f <= -MAX_EXP[?25l[29;1H[1m-- INSERT --[15;62H[?12l[?25h[?25l[mP(„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;61H[?12l[?25h[?25l[46m()[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;62H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1C[?12l[?25h[?25l[46m([m=[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;62H[?12l[?25h[?25l==[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;63H[?12l[?25h[?25l=&[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;64H[?12l[?25h[?25l=[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;85H[K[15;63H[?12l[?25h[?25l=6[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;64H[?12l[?25h[?25l6,[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;65H[?12l[?25h[?25l, [46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;66H[?12l[?25h[?25l(==6, )[?12l[?25h[?25l= 6, )„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;64H[?12l[?25h6,[?25l[46m([m== 6, [46m)[?12l[?25h[?25l[m 2[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[15;68H[?12l[?25h[?25l[16;28r[16;1H[L[1;29r[15;67H23[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó **[16;1H[93m    [m/[28;1H[94m@                                                                                        [15;69H[?12l[?25h[?25l[m3Ë°åÁõÆ[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ[16;4H[93m [m„Éó */[15;73H[?12l[?25h[29;1H[K[15;71H[?25l[15;60H([12C)[?12l[?25h[17;71H[15;63H [14;15H[15;14H if[?25l [46m([13C)[15;18H[?12l[?25h[?25l[m([13C)[15;19H[?12l[?25hf <= -M[?25l[29;1H1 change; before #271  14 seconds ago[15;28r[28;1H
[1;29r[15;1H[93m498 [m          if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP[46m([m== 6, [46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[27;1H[93m509 [m        if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[28;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[29;1H[K[15;67H[?12l[?25h[?25l[29;1H1 change; after #271  18 seconds ago[16;28r[16;1H[L[1;29r[15;60H(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ [16;1H[93m    [m„Éó */[28;1H[94m@                                                                                        [m[29;1H[K[15;67H[?12l[?25h[?25l[29;1H[1m-- INSERT --[15;65H[?12l[?25h[?25l[m -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[16;1H[93m [m[3C„ÉÉ„Éó */[15;65H[?12l[?25h[17;65H[?25lP(„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;64H[?12l[?25h[?25l[46m()[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;65H[?12l[?25h[?25l[?12l[?25h[?25l[46m([m=[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;65H[?12l[?25h[?25l==[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;66H[?12l[?25h[?25l= [46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;67H[?12l[?25h[?25l 6[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[17;68H[?12l[?25h[?25l[18;28r[18;1H[L[1;29r[17;67H6,[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó **[18;1H[93m    [m/[17;69H[?12l[?25h[?25l, [46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó  [18;1H[93m    [m*/[17;70H[?12l[?25h[?25l 2[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [18;1H[93m    [m */[17;71H[?12l[?25h[?25l23[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ[94m>>[m[18;1H[93m    [m„Éó */[17;72H[?12l[?25h[?25l3Ë°åÁõÆ[46m)[m„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[18;1H[93m [m[3C„Ç≠„ÉÉ„Éó */[17;76H[?12l[?25h[?25l[17;63H([12C)[12C[94m>>[m[18;1H[93m [17;74H[?12l[?25h[?25l[m[46m([12C)[m[12C[94m>>[m[18;1H[93m [17;64H[?12l[?25h[?25l[m[25C[94m>>[m[18;1H[93m [17;63H[?12l[?25h[?25l[m([12C)[12C[94m>>[m[18;1H[93m [17;62H[?12l[?25h[?25l[m[17;23H[46m([12C)[m[52C[94m>>[m[18;1H[93m [17;37H[?12l[?25h[?25l[m[52C[94m>>[m[18;1H[93m [17;36H[?12l[?25h[?25l[m[17;23H([12C)[52C[94m>>[m[18;1H[93m [17;35H[?12l[?25h[?25l[m[46m([12C)[m[52C[94m>>[m[18;1H[93m [17;24H[?12l[?25h[?25l[m[65C[94m>>[m[18;1H[93m [17;23H[?12l[?25h[?25l[m([12C)[52C[94m>>[m[18;1H[93m [15;23H[?12l[?25h[14;23H[13;23H[12;23H[m[29;1H[K[12;22H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hf+[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: f+[m[29;28H[K[12;22H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hf++[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: f++[m[29;29H[K[12;22H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hf[?25l[14;15H[?12l[?25h[?25l[29;1H?[11;15H[?12l[?25h[?25l[29;1H/[14;15H[?12l[?25h[?25l[29;1H[14;49H[?12l[?25h[?25l[29;1H[15;16H[?12l[?25h[?25l[29;1H[15;19H[?12l[?25h[?25l[29;1H[15;47H[?12l[?25h[?25l[29;1H[17;21H[?12l[?25h[?25l[29;1H[17;24H[?12l[?25h[?25l[29;1H[17;51H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hf =[?25l[19;20H[?12l[?25hf = expTabl[?25le[46m[[53C][19;32H[?12l[?25h[?25l[m[[46m([mint[46m)[m[48C][19;33H[?12l[?25h[?25l(int)[?12l[?25hin[?25l[46m([mint[46m)[?12l[?25h[?25l[m(int)[46m([46C)[19;38H[?12l[?25h[?25l[m([46m([11C)[m[33C)[19;39H[?12l[?25h[?25l([11C)[19;40H[?12l[?25hf + MAX_EX[?25l[19;39H[46m([11C)[?12l[?25h[?25l[m[19;39H([11C)[?12l[?25h *[?25l [46m([28C)[19;55H[?12l[?25h[?25l[m([28C)[19;56H[?12l[?25hEXP_TABLE_SIZE / MAX_EXP / [?25l[19;55H[46m([28C)[?12l[?25h[?25l[19;38H([m[16C([28C)[46m)[?12l[?25h[?25l[19;32H[[m(int)([46C)[46m][?12l[?25h[?25l[m[19;32H[[53C][?12l[?25h[?25l[29;1H[1m-- INSERT --[19;88H[?12l[?25h[?25l[m [?12l[?25h[?25l /[20;5H[?12l[?25h[?25l[20;28r[20;1H[L[1;29r[20;1H[93m    [m*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l - */[?12l[?25h[?25l-M */[?12l[?25h[?25lMa */[?12l[?25h[?25lM */[20;12H[K[20;9H[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_E */[?12l[?25h[?25lEX */[?12l[?25h[?25lXP */[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l  */[?12l[?25h[?25l F */[?12l[?25h[?25l  */[?12l[?25h[?25l */[20;22H[K[20;19H[?12l[?25h[?25l  */[20;21H[K[20;18H[?12l[?25h[?25l f */[?12l[?25h[?25l  */[?12l[?25h[?25l < */[?12l[?25h[?25l  */[?12l[?25h[?25l M */[?12l[?25h[?25lMA */[?12l[?25h[?25lAX */[?12l[?25h[?25lX_ */[?12l[?25h[?25l_E */[?12l[?25h[?25lEX */[?12l[?25h[?25lXP */[?12l[?25h[?25lP„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[18;14H[16;12H[14;82H[13;44H[12;55H[11;21H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l f */[?12l[?25h[?25lf„Å´ */[?12l[?25h[?25l0 */[?12l[?25h[?25l0„Çí */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h[29;1H[K[11;33H[?25l[?12l[?25h[12;33H[13;33H[14;33H[15;33H[17;33H[?25l[56C[94m>>[m[18;1H[93m [m[19;33H[46m([mint[46m)[m[51C//[20;1H[93m [19;33H[?12l[?25h[?25l[m(int)[51C//[20;1H[93m [21;33H[?12l[?25h[?25l[m[19;33H[46m([mint[46m)[m[51C//[20;1H[93m [19;33H[?12l[?25h[?25l[m(int)[51C//[20;1H[93m [17;33H[?12l[?25h[?25l[m[56C[94m>>[m[18;1H[93m [m[19;33H[46m([mint[46m)[m[51C//[20;1H[93m [19;33H[?12l[?25h[?25l[m(int)[51C//[20;1H[93m [21;33H[?12l[?25h[?25l[m[19;33H[46m([mint[46m)[m[51C//[20;1H[93m [19;33H[?12l[?25h[?25l[m(int)[51C//[20;1H[93m [19;34H[?12l[?25h[min[?25l[46m([mint[46m)[m[51C//[20;1H[93m [19;37H[?12l[?25h[?25l[m(int)[51C//[20;1H[93m [33C[?12l[?25h[?25l[m[29;1H[1m-- INSERT --[20;34H[?12l[?25h[m[29;1H[K[20;31H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hexpTable[?25l[27m[m[H[2J[1;1H[93m512 [m[11C label = 1;
[93m513 [m[9C } else {
[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];
[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m518 [m[11C label = 0;
[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [15;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[27;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }[14;33H[?12l[?25h[?25l[29;1H/expTable[27m[m[H[2J[1;1H[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[5;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);
[93m687 [m  if ((i = ArgPos((char *)"-sample", argc, argv)) > 0) sample = atof(argv[i + 1]);
[93m688 [m  if ((i = ArgPos((char *)"-hs", argc, argv)) > 0) hs = atoi(argv[i + 1]);
[93m689 [m  if ((i = ArgPos((char *)"-negative", argc, argv)) > 0) negative = atoi(argv[i + 1]))[10;1H[93m    [m;
[93m690 [m  if ((i = ArgPos((char *)"-threads", argc, argv)) > 0) num_threads = atoi(argv[i + 11[12;1H[93m    [m]);
[93m691 [m  if ((i = ArgPos((char *)"-iter", argc, argv)) > 0) iter = atoi(argv[i + 1]);
[93m692 [m  if ((i = ArgPos((char *)"-min-count", argc, argv)) > 0) min_count = atoi(argv[i + 11[15;1H[93m    [m]);
[93m693 [m  if ((i = ArgPos((char *)"-classes", argc, argv)) > 0) classes = atoi(argv[i + 1]);
[93m694 [m  vocab = (struct vocab_word *)calloc(vocab_max_size, sizeof(struct vocab_word));
[93m695 [m  vocab_hash = (int *)calloc(vocab_hash_size, sizeof(int));
[93m696 [m  expTable = (real *)malloc((EXP_TABLE_SIZE + 1) * sizeof(real));
[93m697 [m  for (i = 0; i < EXP_TABLE_SIZE; i++) {
[93m698 [m    expTable[i] = exp((i / (real)EXP_TABLE_SIZE * 2 - 1) * MAX_EXP); // Precompute thh[22;1H[93m    [me exp() table
[93m699 [m    expTable[i] = expTable[i] / (expTable[i] + 1);[18C // Precompute f(([24;1H[93m    [mx) = x / (x + 1)
[93m700 [m  }
[93m701 [m  TrainModel();
[93m702 [m  return 0;
[93m703 [m}[19;7H[?12l[?25hexpTable =[?25l [46m([mreal *[46m)[19;18H[?12l[?25h[?25l[m(real *)[19;19H[?12l[?25hreal [?25l[46m([mreal *[46m)[?12l[?25h[?25l[m[19;18H(real *)[?12l[?25hma[?25l[29;1H/expTable[21;9H[?12l[?25h[?25l[29;1H[23;9H[?12l[?25h[?25l[29;1H[23;23H[?12l[?25h[?25l[29;1H[23;38H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´[2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable;
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[15;35H[?12l[?25h[mexpTablee[?25l[29;1H[1m-- INSERT --[m[29;13H[K[15;44H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l ÊúÄÂ§ß„ÅÆ */[?12l[?25h[?25lÊµÆÂãïÂ∞èÊï∞ÁÇπÊï∞ */[?12l[?25h[16;19H[17;5H[18;66H[19;32H[20;16H[21;65H[?25l[22;30H[?12l[?25h[23;16H[24;34H[25;31H[26;66H[28;66H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m 59 [m  i = 0;
[93m 60 [m  d1 = pow(vocab[i].cn, power) / train_words_pow;[27;13H[?12l[?25h[28;54H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m 61 [m  for (a = 0; a < table_size; a++) {
[93m 62 [m    table[a] = i;[27;41H[?12l[?25h[28;22H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m 63 [m    if (a / (double)table_size > d1) {
[93m 64 [m      i++;[27;43H[?12l[?25h[28;15H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m 65 [m      d1 += pow(vocab[i].cn, power) / train_words_pow;
[93m 66 [m    }[27;59H[?12l[?25h[29;1H[K[27;58H[?25l[?12l[?25h[?25l

:[?12l[?25h500[?25l[27m[m[H[2J[1;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[4;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* f„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[10;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[12;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[14;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[16;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[25;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;[13;15H[?12l[?25h[15;15H[17;15H[18;15H[19;15H[20;15H[21;15H[22;15H[23;15H[24;15H[26;15H[24;15H[23;15H[22;15H[21;15H[20;15H[19;15H[18;15H[17;15H[15;15H[13;15H[15;15H[17;15H[15;15H[13;15He[11;16H[13;16H[15;16H[?25l[29;1H/[?12l[?25hexpTA[?25l[29;6H[K[29;6H[?12l[?25hable[?25l[1;28r[1;1H[14M[1;29r[15;1H[93m513 [m[9C } else {
[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];
[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m518 [m[11C label = 0;
[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[29;1H[K[27;33H[?12l[?25h[?25l

/expTable[27m[m[H[2J[1;1H[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[5;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);
[93m687 [m  if ((i = ArgPos((char *)"-sample", argc, argv)) > 0) sample = atof(argv[i + 1]);
[93m688 [m  if ((i = ArgPos((char *)"-hs", argc, argv)) > 0) hs = atoi(argv[i + 1]);
[93m689 [m  if ((i = ArgPos((char *)"-negative", argc, argv)) > 0) negative = atoi(argv[i + 1]))[10;1H[93m    [m;
[93m690 [m  if ((i = ArgPos((char *)"-threads", argc, argv)) > 0) num_threads = atoi(argv[i + 11[12;1H[93m    [m]);
[93m691 [m  if ((i = ArgPos((char *)"-iter", argc, argv)) > 0) iter = atoi(argv[i + 1]);
[93m692 [m  if ((i = ArgPos((char *)"-min-count", argc, argv)) > 0) min_count = atoi(argv[i + 11[15;1H[93m    [m]);
[93m693 [m  if ((i = ArgPos((char *)"-classes", argc, argv)) > 0) classes = atoi(argv[i + 1]);
[93m694 [m  vocab = (struct vocab_word *)calloc(vocab_max_size, sizeof(struct vocab_word));
[93m695 [m  vocab_hash = (int *)calloc(vocab_hash_size, sizeof(int));
[93m696 [m  expTable = (real *)malloc((EXP_TABLE_SIZE + 1) * sizeof(real));
[93m697 [m  for (i = 0; i < EXP_TABLE_SIZE; i++) {
[93m698 [m    expTable[i] = exp((i / (real)EXP_TABLE_SIZE * 2 - 1) * MAX_EXP); // Precompute thh[22;1H[93m    [me exp() table
[93m699 [m    expTable[i] = expTable[i] / (expTable[i] + 1);[18C // Precompute f(([24;1H[93m    [mx) = x / (x + 1)
[93m700 [m  }
[93m701 [m  TrainModel();
[93m702 [m  return 0;
[93m703 [m}[19;7H[?12l[?25h[?25l[29;1H/expTable[21;9H[?12l[?25h[?25l[29;1H[23;9H[?12l[?25h[?25l[29;1H[23;23H[?12l[?25h[?25l[29;1H[23;38H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* ÊúÄÂ§ß„ÅÆÊµÆÂãïÂ∞èÊï∞ÁÇπÊï∞ */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[15;35H[?12l[?25h[mexpTable; /* [?25l Â§ß„ÅÆÊµÆÂãïÂ∞èÊï∞ÁÇπÊï∞ */[15;67H[K[15;48H[?12l[?25h[?25l „ÅÆÊµÆÂãïÂ∞èÊï∞ÁÇπÊï∞ */[15;65H[K[15;48H[?12l[?25h[?25l ÊµÆÂãïÂ∞èÊï∞ÁÇπÊï∞ */[15;63H[K[15;48H[?12l[?25h[?25l ÂãïÂ∞èÊï∞ÁÇπÊï∞ */[15;61H[K[15;48H[?12l[?25h[?25lÂ∞èÊï∞ÁÇπÊï∞ */[15;59H[K[15;48H[?12l[?25h[?25l Êï∞ÁÇπÊï∞ */[15;57H[K[15;48H[?12l[?25h[?25l ÁÇπÊï∞ */[15;55H[K[15;48H[?12l[?25h[?25l Êï∞ */[15;53H[K[15;48H[?12l[?25h[?25l  */[15;51H[K[15;48H[?12l[?25h[?25l[29;1H[1m-- INSERT --[m[29;13H[K[15;49H[?12l[?25h[?25l r */[?12l[?25h[?25lre */[?12l[?25h[?25lea */[?12l[?25h[?25lal */[?12l[?25h[?25llÂûã */[?12l[?25h[?25l„Éù„Ç§„É≥„Çø */[?12l[?25h[29;1H[K[15;60H[?25l[?12l[?25h[?25l[29;1H/expTable[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[14;24H[?12l[?25h[?25l[29;1H/expTable[1;28r[1;1H[12M[1;29r[17;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[29;1H[K[27;33H[?12l[?25h[?25l

/expTable[27m[m[H[2J[1;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [4;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* f„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[10;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[12;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[14;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[16;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[25;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;[13;24H[?12l[?25hexpTabl[?25le[46m[[53C][m; //[14;1H[93m [13;32H[?12l[?25h[?25l[m[[46m([mint[46m)[m[48C]; //[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [13;34H[?12l[?25h[min[?25l[46m([mint[46m)[m[51C//[14;1H[93m [13;37H[?12l[?25h[?25l[m(int)[46m([46C)[m]; //[14;1H[93m [13;38H[?12l[?25h[?25l[m([46m([11C)[m[33C)]; //[14;1H[93m [13;39H[?12l[?25h[?25l[m([11C)[37C//[14;1H[93m [13;40H[?12l[?25h[mf + MAX_EX[?25l[13;39H[46m([11C)[m[37C//[14;1H[93m [13;51H[?12l[?25h[?25l[m[13;39H([11C)[37C//[14;1H[93m [13;52H[?12l[?25h[m *[?25l [46m([28C)[m)]; //[14;1H[93m [13;55H[?12l[?25h[?25l[m([28C))]; //[14;1H[93m [13;56H[?12l[?25h[mEXP_TABLE[11;65H[9;65H[?25l[8;58H[46m[[mc + l1[46m][?12l[?25h[?25l[m[8;58H[c + l1][7;43H[?12l[?25h[6;54H[?25l[29;1H/[?12l[?25hf[?25l[8;15H[?12l[?25h[?25l[29;1H?[5;25H[?12l[?25h[?25l[29;1H[5;15H[?12l[?25h[?25l[29;1H[3;21H[?12l[?25h[?25l[29;1H[3;14H[?12l[?25h[?25l[29;1H[1;13H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[3;1H[93m    [m„Çí‰ª£ÂÖ• */[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[3L[1;29r[1;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó [2;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[3L[1;29r[1;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[2;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[3;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[29;1H[K[1;53H[?12l[?25h[?25l[29;1H?f[1;11H[?12l[?25h[?25l[29;1H[1;28r[1;1H[6L[1;29r[1;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[2;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[6;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m479 [m[9C if (last_word == -1) continue;[28;1H[94m@                                                                                        [m[29;1H[K[1;16H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];[28;1H[94m@                                                                                        [m[29;1H[K[1;16H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m476 [m[9C if (c < 0) continue;[29;1H[K[1;16H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;[29;1H[K[1;55H[?12l[?25h[?25l[29;1H?f[1;13H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in[28;1H[94m@                                                                                        [m[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;[29;1H[K[1;49H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;1H[94m@                                                                                        [m[29;1H[K[1;24H[?12l[?25h[?25l[29;1H?f[1;21H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[29;1H[K[1;19H[?12l[?25h[?25l[29;1H?f[1;16H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[29;1H[K[1;49H[?12l[?25h[?25l[29;1H?f[1;15H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m465 [m[9C f = 0;[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;[29;1H[K[1;18H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[28;1H[94m@                                                                                        [m[29;1H[K[1;18H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[6L[1;29r[1;1H[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];[28;1H[94m@                                                                                        [m[29;1H[K[1;16H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[29;1H[K[1;31H[?12l[?25h[?25l[29;1H?f[1;14H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden[29;1H[K[1;46H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate[29;1H[K[1;40H[?12l[?25h[?25l[29;1H?f[1;20H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[29;1H[K[1;24H[?12l[?25h[?25l[29;1H?f[1;21H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;1H[94m@                                                                                        [m[29;1H[K[1;19H[?12l[?25h[?25l[29;1H?f[1;16H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[29;1H[K[1;49H[?12l[?25h[?25l[29;1H?f[1;15H[?12l[?25h[?25l[29;1H[1;28r[1;1H[3L[1;29r[1;1H[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[29;1H[K[1;15H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[29;1H[K[1;21H[?12l[?25h[?25l[29;1H?f[1;14H[?12l[?25h[?25l[29;1H[1;28r[1;1H[L[1;29r[1;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[29;1H[K[1;13H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m435 [m      if (cw) {[29;1H[K[1;12H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }[29;1H[K[1;13H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m431 [m[7C if (last_word == -1) continue;[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m428 [m[7C if (c < 0) continue;[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;[29;1H[K[1;53H[?12l[?25h[?25l[29;1H?f[1;11H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ[2;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;[29;1H[K[1;10H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[5L[1;29r[1;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [3;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [5;1H[93m    [m */[29;1H[K[1;9H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[29;1H[K[1;9H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m418 [m    if (word == -1) continue;[29;1H[K[1;10H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[29;1H[K[1;21H[?12l[?25h[?25l[29;1H?f[1;17H[?12l[?25h[?25l[29;1H[1;11H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;
[93m412 [m      last_word_count = 0;
[93m413 [m      sentence_length = 0;[29;1H[K[1;12H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[2;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */
[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô(366Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØlocal_iter == 5) */[29;1H[K[1;18H[?12l[?25h[?25l[29;1H?f[1;16H[?12l[?25h[?25l[29;1H[1;13H[?12l[?25h[?25l[29;1H[1;10H[?12l[?25h[?25l[29;1H[1;28r[1;1H[8L[1;29r[1;1H[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* sentence_length„ÅåMAX_SEE[2;1H[93m    [mNTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (i.e. ÈÖçÂàósen„ÅØMAX_SENN[3;1H[93m    [mTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú [4;1H[93m    [m„Åë„Çã) */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */
[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[7;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */
[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */[28;1H[94m@                                                                                        [m[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[3L[1;29r[1;1H[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */
[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */
[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */[29;1H[K[1;32H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[2;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */[29;1H[K[1;16H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */
[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [3;1H[93m    [mtrain_words) / vocab[word].cn;
[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[2;1H[93m    [m same[29;1H[K[1;50H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[L[1;29r[1;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [2;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[29;1H[K[1;22H[?12l[?25h[?25l[29;1H?f[1;20H[?12l[?25h[?25l[29;1H[1;17H[?12l[?25h[?25l[29;1H[1;14H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[2;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[29;1H[K[1;34H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[3L[1;29r[1;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[2;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[29;1H[K[1;41H[?12l[?25h[?25l[29;1H?f[1;10H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }[29;1H[K[1;12H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[4L[1;29r[1;1H[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[4;1H[93m    [m));[28;1H[94m@                                                                                        [m[29;1H[K[1;14H[?12l[?25h[?25l[29;1H?f[1;13H[?12l[?25h[?25l[29;1H[1;28r[1;1H[4L[1;29r[1;1H[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[2;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[4;1H[93m    [m;[29;1H[K[1;73H[?12l[?25h[?25l[29;1H?f[1;47H[?12l[?25h[?25l[29;1H[1;31H[?12l[?25h[?25l[29;1H[1;18H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();[29;1H[K[1;12H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[3L[1;29r[1;1H[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;[29;1H[K[1;10H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */[28;1H[94m@                                                                                        [m[29;1H[K[1;17H[?12l[?25h[?25l[29;1H?f[1;13H[?12l[?25h[?25l[29;1H[1;7H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [2;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */[29;1H[K[2;7H[?12l[?25h[?25l[29;1H?f[1;64H[?12l[?25h[?25l[29;1H[1;30H[?12l[?25h[?25l[29;1H[1;18H[?12l[?25h[?25l[29;1H[1;13H[?12l[?25h[?25l[29;1H[1;28r[1;1H[2L[1;29r[1;1H[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[2;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */[29;1H[K[1;54H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[2;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/[29;1H[K[1;53H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[2L[1;29r[1;1H[93m368 [m  real f, g;
[93m369 [m  clock_t now;[29;1H[K[1;12H[?12l[?25h[?25l[29;1H?f[1;28r[1;1H[9L[1;29r[1;1H[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[6;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* ÈÖç[94m>>[m[7;1H[93m    [mÂàósen„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;[29;1H[K[1;70H[?12l[?25h[?25l[29;1H/f[10;12H[?12l[?25hf, g[?25l[29;1H[1m-- INSERT --[10;17H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l s */[?12l[?25h[?25lsk */[?12l[?25h[?25lki */[?12l[?25h[?25lip */[?12l[?25h[?25lp- */[?12l[?25h[?25l-g */[?12l[?25h[?25lgr */[?12l[?25h[?25lra */[?12l[?25h[?25lam */[?12l[?25h[?25lmÁ≠â */[?12l[?25h[?25l„Åß */[?12l[?25h[?25lÈ†ªÂá∫ */[?12l[?25h[29;1H[K[10;36H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hexp[?25l[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[14;24H[?12l[?25h[?25l[29;1H/[?12l[?25hÈ†ªÂá∫[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[3;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[10;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* ÈÖç[94m>>[m[11;1H[93m    [mÂàósen„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g; /* skip-gramÁ≠â„ÅßÈ†ªÂá∫ */
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[17;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[19;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [21;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[38;5;224msearch hit BOTTOM, continuing at TOP[14;34H[?12l[?25h[?25l[m e[?12l[?25h[?25l[?12l[?25h[?25l r[?12l[?25h[?25l[29;1H[1m-- INSERT --[m[29;13H[K[14;22H[?12l[?25h[?25lrrkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;22H[?12l[?25h[?25lrerkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;23H[?12l[?25h[?25learkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;24H[?12l[?25h[?25lalrkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;25H[?12l[?25h[?25llÂûãrkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;27H[?12l[?25h[?25lÂ§âÊï∞rkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;31H[?12l[?25h[?25lfrkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;32H[?12l[?25h[?25lf,rkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;33H[?12l[?25h[?25l, rkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;34H[?12l[?25h[?25l grkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;35H[?12l[?25h[?25lg rkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;36H[?12l[?25h[?25l srkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;37H[?12l[?25h[?25l rkip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;56H[K[14;36H[?12l[?25h[29;1H[K[14;35H[?25l[?12l[?25h [?25l[29;1H[1m-- INSERT --[m[14;35H kip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;55H[K[14;36H[?12l[?25h[29;1H[K[14;35H[?25l[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;36H[?12l[?25h[?25l[m skip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;37H[?12l[?25h[29;1H[K[14;36H[?25l[?12l[?25h[?25l[?12l[?25h[?25l a[?12l[?25h[?25l s[?12l[?25h[?25l[29;1H[1m-- INSERT --[14;37H[?12l[?25h[?25l[m (skip-gramÁ≠â„ÅßÈ†ªÂá∫ */[14;37H[?12l[?25hskip-gram[2C[2C[2C[2C [?25l[14;36H[46m([17C)[m */[?12l[?25h[29;1H[K[14;54H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hexp[?25l[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[14;24H[?12l[?25h[?25l[29;1H/exp[1;28r[1;1H[12M[1;29r[17;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[29;1H[K[27;33H[?12l[?25h[?25l

/exp[27m[m[H[2J[1;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà[4;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* f„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[10;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[12;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[14;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[16;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[25;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;[13;24H[?12l[?25h[11;24H[9;24H[8;24H[7;24H[6;24H[5;24H f[?25l[29;1H[1m-- INSERT --[5;28H[?12l[?25h[?25l[mf(„Å´0„Çí‰ª£ÂÖ• */[5;27H[?12l[?25h[?25l[46m()[m„Å´0„Çí‰ª£ÂÖ• */[5;28H[?12l[?25h[?25l[?12l[?25h[?25l[46m([m3[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;28H[?12l[?25h[?25l36[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;29H[?12l[?25h[?25l68[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;30H[?12l[?25h[?25l8Ë°åÁõÆ[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;34H[?12l[?25h[?25l„Åß[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;36H[?12l[?25h[?25lÂÆ£Ë®ÄÊ∏à„Åø[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;44H[?12l[?25h[?25l[46m)[m„Å´0„Çí‰ª£ÂÖ• */[5;55H[K[5;42H[?12l[?25h[?25l[5;26H([15C)[?12l[?25h[?25l[46m([15C)[5;27H[?12l[?25h[?25l[?12l[?25h[?25l[m([15C)[5;25H[?12l[?25h[?25l rf(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;26H[?12l[?25h[?25lref(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;27H[?12l[?25h[?25leaf(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;28H[?12l[?25h[?25lalf(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;29H[?12l[?25h[?25llÂûãf(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;31H[?12l[?25h[?25lÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[5;35H[?12l[?25h[29;1H[K[5;33H[?25l[?12l[?25h[6;33H[7;33H[8;33H[9;33H[11;33H[?25l[56C[94m>>[m[12;1H[93m [m[13;33H[46m([mint[46m)[m[51C//[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [15;33H[?12l[?25h[17;33H[18;33H[19;33H[18;33H[17;33H[15;33H[?25l[m[13;33H[46m([mint[46m)[m[51C//[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [11;33H[?12l[?25h[?25l[m[56C[94m>>[m[12;1H[93m [m[13;33H[46m([mint[46m)[m[51C//[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [15;33H[?12l[?25h[17;33H[18;33H[17;33H[15;33H[?25l[m[13;33H[46m([mint[46m)[m[51C//[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [15;33H[?12l[?25h[?25l[m[13;33H[46m([mint[46m)[m[51C//[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [15;33H[?12l[?25h[?25l[m[13;32H[46m[[53C][m; //[14;1H[93m [13;32H[?12l[?25h[?25l[m[[46m([mint[46m)[m[48C]; //[14;1H[93m [13;33H[?12l[?25h[?25l[m(int)[51C//[14;1H[93m [13;34H[?12l[?25h[min[?25l[46m([mint[46m)[m[51C//[14;1H[93m [13;37H[?12l[?25h[?25l[m(int)[46m([46C)[m]; //[14;1H[93m [13;38H[?12l[?25h[?25l[m([46m([11C)[m[33C)]; //[14;1H[93m [13;39H[?12l[?25h[?25l[m([11C)[37C//[14;1H[93m [13;40H[?12l[?25h[mf +[14;35HEXP[2C[2C [?25l[29;1H[1m-- INSERT --[14;35H[?12l[?25h[?25l[m r*/[?12l[?25h[?25lre*/[?12l[?25h[?25lea*/[?12l[?25h[?25lal*/[?12l[?25h[?25la*/[14;39H[K[14;37H[?12l[?25h[?25le*/[14;38H[K[14;36H[?12l[?25h[?25lr*/[14;37H[K[14;35H[?12l[?25h[?25l */[14;36H[K[14;34H[?12l[?25h[?25l f*/[?12l[?25h[?25lf„Å´*/[?12l[?25h[?25le*/[?12l[?25h[?25lex*/[?12l[?25h[?25lxp*/[?12l[?25h[?25lpT*/[?12l[?25h[?25lTA*/[?12l[?25h[?25lAa*/[?12l[?25h[?25lA*/[14;44H[K[14;42H[?12l[?25h[?25lT*/[14;43H[K[14;41H[?12l[?25h[?25lp*/[14;42H[K[14;40H[?12l[?25h[?25lpT*/[?12l[?25h[?25lTa*/[?12l[?25h[?25lab*/[?12l[?25h[?25lbl*/[?12l[?25h[?25lle*/[?12l[?25h[?25le[*/[?12l[?25h[?25l[46m[][m*/[?12l[?25h[?25l[?12l[?25h[?25l[46m[[m([46m][m*/[?12l[?25h[?25l()[46m][m*/[?12l[?25h[?25l[[46m()[m][?12l[?25h[?25l[46m([mi[46m)[m]*/[?12l[?25h[?25lin[46m)[m]*/[?12l[?25h[?25lnt[46m)[m]*/[?12l[?25h[?25l[46m[[m(int)[46m][?12l[?25h[?25l[m)([46m][m*/[?12l[?25h[?25l(([46m][m*/[?12l[?25h[?25l()[46m][m*/[?12l[?25h[?25l))[46m][m*/[?12l[?25h[?25l[14;45H[(int)[46m([m()[46m)[m][?12l[?25h[?25l([46m()[m)[?12l[?25h[?25l[46m([mf[46m)[m)]*/[?12l[?25h[?25lf [46m)[m)]*/[?12l[?25h[?25l +[46m)[m)]*/[?12l[?25h[?25l+ [46m)[m)]*/[?12l[?25h[?25l M[46m)[m)]*/[?12l[?25h[?25lMA[46m)[m)]*/[?12l[?25h[?25lAX[46m)[m)]*/[?12l[?25h[?25lX_[46m)[m)]*/[?12l[?25h[?25l_E[46m)[m)]*/[?12l[?25h[?25lEX[46m)[m)]*/[?12l[?25h[?25lXP[46m)[m)]*/[?12l[?25h[?25l[14;51H[46m([m([11C)[46m)[?12l[?25h[?25l[m) [46m)[m]*/[?12l[?25h[?25l *[46m)[m]*/[?12l[?25h[?25l* [46m)[m]*/[?12l[?25h[?25l[14;51H([15C [46m()[m]*/[?12l[?25h[?25l[14;51H[46m([m[16C()[46m)[m]*/[?12l[?25h[?25l[14;51H([16C[46m()[m)[?12l[?25h[?25l[46m([mE[46m)[m)]*/[?12l[?25h[?25lEX[46m)[m)]*/[?12l[?25h[?25lXP[46m)[m)]*/[?12l[?25h[?25lP_[46m)[m)]*/[?12l[?25h[?25l_T[46m)[m)]*/[?12l[?25h[?25lTA[46m)[m)]*/[?12l[?25h[?25lAB[46m)[m)]*/[?12l[?25h[?25lBL[46m)[m)]*/[?12l[?25h[?25lLE[46m)[m)]*/[?12l[?25h[?25lE_[46m)[m)]*/[?12l[?25h[?25l_S[46m)[m)]*/[?12l[?25h[?25lSI[46m)[m)]*/[?12l[?25h[?25lIZ[46m)[m)]*/[?12l[?25h[?25lZE[46m)[m)]*/[?12l[?25h[?25l[14;51H[46m([m[16C([14C)[46m)[?12l[?25h[?25l[m[14;51H([16C[46m([14C)[m)[?12l[?25h[?25lE [46m)[m)]*/[?12l[?25h[?25l /[46m)[m)]*/[14;85H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;84H/ [46m)[m)]**[15;1H[93m    [m/[14;86H[?12l[?25h[?25l M[46m)[m)]][15;1H[93m    [m*/[14;87H[?12l[?25h[?25lMA[46m)[m))[15;1H[93m    [m]*/[14;88H[?12l[?25h[?25lAX[46m))[m[15;1H[93m    [m)]*/[14;89H[?12l[?25h[?25lX__[15;1H[93m [m[3C[46m)[m)]*/[?12l[?25h[?25l[93m [mE[46m)[m)]*/[?12l[?25h[?25lEX[46m)[m)]*/[?12l[?25h[?25lXP[46m)[m)]*/[?12l[?25h[?25lP [46m)[m)]*/[?12l[?25h[?25l /[46m)[m)]*/[?12l[?25h[?25l/ [46m)[m)]*/[?12l[?25h[?25l 2[46m)[m)]*/[?12l[?25h[?25l[14;51H[46m([m[16C([20C__[15;1H[93m [m[10C)[46m)[?12l[?25h[?25l[14;45H[[m(int)([37C__[15;1H[93m [m[11C)[46m][?12l[?25h[?25l][?12l[?25h[?25l[m[14;45H[[43C__[15;1H[93m [m[12C]A*/[?12l[?25h[?25l[14;45H[46m[[m[43C__[15;1H[93m [m[12C[46m][m*/[15;17H[K[15;15H[?12l[?25h[29;1H[K[15;14H[?25l[?12l[?25h[?25l[14;45H[[43C__[15;1H[93m [m[12C][?12l[?25h[?25l[29;1H[1m-- INSERT --[15;17H[?12l[?25h[?25l[m[14;45H[46m[[m[43C__[15;1H[93m [m[12C[46m][?12l[?25h[?25l[m[14;45H[[43C__[15;1H[93m [m[12C] */[?12l[?25h[?25l[14;45H[46m[[m[43C__[15;1H[93m [m[12C[46m][?12l[?25h[?25l[m[14;45H[[43C__[15;1H[93m [m[12C]„Çí */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h[17;6H[18;57H[17;6H[15;21H[17;6H[15;21H */[17;6H[16;89H[29;1H[K[16;75H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hrate[?25l[27m[m[H[2J[1;1H[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([5;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");
[93m652 [m    printf("\t\tRun more training iterations (default 5)\n");
[93m653 [m    printf("\t-min-count <int>\n");
[93m654 [m    printf("\t\tThis will discard words that appear less than <int> times; default iss[12;1H[93m    [m 5\n");
[93m655 [m    printf("\t-alpha <float>\n");
[93m656 [m    printf("\t\tSet the starting learning rate; default is 0.025 for skip-gram and 0..[15;1H[93m    [m05 for CBOW\n");
[93m657 [m    printf("\t-classes <int>\n");
[93m658 [m    printf("\t\tOutput word classes rather than word vectors; default number of classs[18;1H[93m    [mes is 0 (vectors are written)\n");
[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[27;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");[14;47H[?12l[?25h[?25l[29;1H/[?12l[?25h0.025[?25l[14;64H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[14;18H[?12l[?25h[?25l[m[29;1H/0.025[29;7H[K[29;1H[27m[m[H[2J[1;1H[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([5;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");
[93m652 [m    printf("\t\tRun more training iterations (default 5)\n");
[93m653 [m    printf("\t-min-count <int>\n");
[93m654 [m    printf("\t\tThis will discard words that appear less than <int> times; default iss[12;1H[93m    [m 5\n");
[93m655 [m    printf("\t-alpha <float>\n");
[93m656 [m    printf("\t\tSet the starting learning rate; default is 0.025 for skip-gram and 0..[15;1H[93m    [m05 for CBOW\n");
[93m657 [m    printf("\t-classes <int>\n");
[93m658 [m    printf("\t\tOutput word classes rather than word vectors; default number of classs[18;1H[93m    [mes is 0 (vectors are written)\n");
[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[27;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");[14;64H[?12l[?25h[?25l[29;1H/0.025[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3;
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[14;18H[?12l[?25h[m0.025, starting_alpha, sample = 1e-3[?25l[29;1H[1m-- INSERT --[m[29;13H[K[14;55H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l a */[?12l[?25h[?25lal */[?12l[?25h[?25llp */[?12l[?25h[?25lph */[?12l[?25h[?25lha */[?12l[?25h[?25la„ÅØ */[?12l[?25h[?25lÂ≠¶ÁøíÊØî */[?12l[?25h[?25l( */[?12l[?25h[?25l[46m()[m */[?12l[?25h[?25l[?12l[?25h[?25l[46m([ml[46m)[m */[?12l[?25h[?25lle[46m)[m */[?12l[?25h[?25lea[46m)[m */[?12l[?25h[?25lar[46m)[m */[?12l[?25h[?25lrn[46m)[m */[?12l[?25h[?25lni[46m)[m */[?12l[?25h[?25lin[46m)[m */[?12l[?25h[?25lng[46m)[m */[?12l[?25h[?25lg [46m)[m */[?12l[?25h[?25l r[46m)[m */[?12l[?25h[?25lra[46m)[m */[?12l[?25h[?25lat[46m)[m */[?12l[?25h[?25lte[46m)[m */[14;86H[?12l[?25h[29;1H[K[14;85H[?25l[14;72H([13C)[?12l[?25h[?25l[29;1H/[?12l[?25halpha[?25l[27m[m[H[2J[1;1H[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[2;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[4;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥[6;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[15;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[17;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[21;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[25;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[28;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[14;84H[?12l[?25h[?25l[29;1H/alpha[20;11H[?12l[?25h[?25l[29;1H[20;28H[?12l[?25h[?25l[29;1H[22;15H[?12l[?25h[?25l[29;1H[22;32H[?12l[?25h[?25l[29;1H[22;48H[?12l[?25h[?25l[29;1H[22;65H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[14;51H[?12l[?25h[?25l[29;1H/alpha[1;28r[1;1H[7M[1;29r[22;1H[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[29;1H[K[28;50H[?12l[?25h[?25l
/alpha[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[29;1H[K[28;56H[?12l[?25h[?25l
/alpha[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[29;1H[K[28;15H[?12l[?25h[?25l
/alpha[27m[m[H[2J[1;1H[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[6;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[8;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[10;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[11;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[13;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[22;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {
[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[14;51H[?12l[?25h[?25l[29;1H/[?12l[?25hlle[?25l[29;4H[K[29;4H[?12l[?25h[?25l[29;3H[K[29;3H[?12l[?25hearning rate[?25l[27m[m[H[2J[1;1H[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([5;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");
[93m652 [m    printf("\t\tRun more training iterations (default 5)\n");
[93m653 [m    printf("\t-min-count <int>\n");
[93m654 [m    printf("\t\tThis will discard words that appear less than <int> times; default iss[12;1H[93m    [m 5\n");
[93m655 [m    printf("\t-alpha <float>\n");
[93m656 [m    printf("\t\tSet the starting learning rate; default is 0.025 for skip-gram and 0..[15;1H[93m    [m05 for CBOW\n");
[93m657 [m    printf("\t-classes <int>\n");
[93m658 [m    printf("\t\tOutput word classes rather than word vectors; default number of classs[18;1H[93m    [mes is 0 (vectors are written)\n");
[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[27;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");[14;38H[?12l[?25h[?25l[29;1H?learning rate[27m[m[H[2J[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [2;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[8;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[10;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[12;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[13;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[15;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[24;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {[14;56H[?12l[?25h[?25l[29;1H?learning rate[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[15;56H[?12l[?25h[?25l[29;1H/learning rate[27m[m[H[2J[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [2;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[8;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[10;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[12;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[13;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[15;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[24;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {[14;56H[?12l[?25h[?25l[29;1H?learning rate[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[15;56H[?12l[?25h[?25l[29;1H/learning rate[27m[m[H[2J[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [2;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[8;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[10;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[12;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[13;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[15;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[24;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {[14;56H[?12l[?25h[?25l[29;1H?learning rate[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[15;56H[?12l[?25h[?25l[29;1H/[?12l[?25halpha[?25l[16;51H[?12l[?25h[?25l[29;1H[1;28r[1;1H[9M[1;29r[20;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[29;1H[K[28;50H[?12l[?25h[?25l
?alpha[7;51H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();
[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[7;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[9;1H[93m    [m;
[93m383 [m[7C fflush(stdout);
[93m384 [m      }
[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[13;1H[93m    [m));
[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;
[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[17;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */
[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */
[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[20;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */
[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº[22;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */
[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;
[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the rankingg[27;1H[93m    [m same
[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */[14;65H[?12l[?25h[?25l[29;1H?alpha[14;48H[?12l[?25h[?25l[29;1H[14;32H[?12l[?25h[?25l[29;1H[14;15H[?12l[?25h[?25l[29;1H[12;28H[?12l[?25h[?25l[29;1H[12;11H[?12l[?25h[?25l[29;1H[6;84H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3; /* alpha„ÅØÂ≠¶ÁøíÊØî(learning rate) */[15;1H[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);[14;59H[?12l[?25h[?25l[29;1H?alpha[14;34H[?12l[?25h[?25l[29;1H[14;10H[?12l[?25h[?25l[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m674 [m  save_vocab_file[0] = 0;
[93m675 [m  read_vocab_file[0] = 0;
[93m676 [m  if ((i = ArgPos((char *)"-size", argc, argv)) > 0) layer1_size = atoi(argv[i + 1]);[4;1H[93m677 [m  if ((i = ArgPos((char *)"-train", argc, argv)) > 0) strcpy(train_file, argv[i + 1]))[5;1H[93m    [m;
[93m678 [m  if ((i = ArgPos((char *)"-save-vocab", argc, argv)) > 0) strcpy(save_vocab_file, arr[7;1H[93m    [mgv[i + 1]);
[93m679 [m  if ((i = ArgPos((char *)"-read-vocab", argc, argv)) > 0) strcpy(read_vocab_file, arr[9;1H[93m    [mgv[i + 1]);
[93m680 [m  if ((i = ArgPos((char *)"-debug", argc, argv)) > 0) debug_mode = atoi(argv[i + 1]);[11;1H[93m681 [m  if ((i = ArgPos((char *)"-binary", argc, argv)) > 0) binary = atoi(argv[i + 1]);
[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[16;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);
[93m687 [m  if ((i = ArgPos((char *)"-sample", argc, argv)) > 0) sample = atof(argv[i + 1]);
[93m688 [m  if ((i = ArgPos((char *)"-hs", argc, argv)) > 0) hs = atoi(argv[i + 1]);
[93m689 [m  if ((i = ArgPos((char *)"-negative", argc, argv)) > 0) negative = atoi(argv[i + 1]))[21;1H[93m    [m;
[93m690 [m  if ((i = ArgPos((char *)"-threads", argc, argv)) > 0) num_threads = atoi(argv[i + 11[23;1H[93m    [m]);
[93m691 [m  if ((i = ArgPos((char *)"-iter", argc, argv)) > 0) iter = atoi(argv[i + 1]);
[93m692 [m  if ((i = ArgPos((char *)"-min-count", argc, argv)) > 0) min_count = atoi(argv[i + 11[26;1H[93m    [m]);
[93m693 [m  if ((i = ArgPos((char *)"-classes", argc, argv)) > 0) classes = atoi(argv[i + 1]);
[93m694 [m  vocab = (struct vocab_word *)calloc(vocab_max_size, sizeof(struct vocab_word));
[38;5;224msearch hit TOP, continuing at BOTTOM[14;59H[?12l[?25h[?25l[m[29;1H?alpha[29;7H[K[29;1H[14;33H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hrate[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3; /* alpha„ÅØÂ≠¶ÁøíÊØî(learning rate) */[15;1H[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[14;82H[?12l[?25h[?25l[m[29;1H?rate[29;6H[K[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([5;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");
[93m652 [m    printf("\t\tRun more training iterations (default 5)\n");
[93m653 [m    printf("\t-min-count <int>\n");
[93m654 [m    printf("\t\tThis will discard words that appear less than <int> times; default iss[12;1H[93m    [m 5\n");
[93m655 [m    printf("\t-alpha <float>\n");
[93m656 [m    printf("\t\tSet the starting learning rate; default is 0.025 for skip-gram and 0..[15;1H[93m    [m05 for CBOW\n");
[93m657 [m    printf("\t-classes <int>\n");
[93m658 [m    printf("\t\tOutput word classes rather than word vectors; default number of classs[18;1H[93m    [mes is 0 (vectors are written)\n");
[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[27;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");
[38;5;224msearch hit TOP, continuing at BOTTOM[14;47H[?12l[?25h[?25l[m[29;1H?rate[29;6H[K[29;1H[27m[m[H[2J[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [2;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[8;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[10;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[12;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[13;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[15;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[24;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {[14;65H[?12l[?25h[?25l[29;1H/rate[27m[m[H[2J[1;1H[93m645 [m    printf("\t-hs <int>\n");
[93m646 [m    printf("\t\tUse Hierarchical Softmax; default is 0 (not used)\n");
[93m647 [m    printf("\t-negative <int>\n");
[93m648 [m    printf("\t\tNumber of negative examples; default is 5, common values are 3 - 10 (([5;1H[93m    [m0 = not used)\n");
[93m649 [m    printf("\t-threads <int>\n");
[93m650 [m    printf("\t\tUse <int> threads (default 12)\n");
[93m651 [m    printf("\t-iter <int>\n");
[93m652 [m    printf("\t\tRun more training iterations (default 5)\n");
[93m653 [m    printf("\t-min-count <int>\n");
[93m654 [m    printf("\t\tThis will discard words that appear less than <int> times; default iss[12;1H[93m    [m 5\n");
[93m655 [m    printf("\t-alpha <float>\n");
[93m656 [m    printf("\t\tSet the starting learning rate; default is 0.025 for skip-gram and 0..[15;1H[93m    [m05 for CBOW\n");
[93m657 [m    printf("\t-classes <int>\n");
[93m658 [m    printf("\t\tOutput word classes rather than word vectors; default number of classs[18;1H[93m    [mes is 0 (vectors are written)\n");
[93m659 [m    printf("\t-debug <int>\n");
[93m660 [m    printf("\t\tSet the debug mode (default = 2 = more info during training)\n");
[93m661 [m    printf("\t-binary <int>\n");
[93m662 [m    printf("\t\tSave the resulting vectors in binary moded; default is 0 (off)\n");
[93m663 [m    printf("\t-save-vocab <file>\n");
[93m664 [m    printf("\t\tThe vocabulary will be saved to <file>\n");
[93m665 [m    printf("\t-read-vocab <file>\n");
[93m666 [m    printf("\t\tThe vocabulary will be read from <file>, not constructed from the traa[27;1H[93m    [mining data\n");
[93m667 [m    printf("\t-cbow <int>\n");[14;47H[?12l[?25h[?25l[29;1H/rate[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 38 [mchar train_file[MAX_STRING], output_file[MAX_STRING]; /* ÊúÄÂ§ßÊñáÂ≠óÊï∞MAX_STRING„ÇíÂºïÊï∞„Å´ [2;1H[93m    [mÊåÅ„Å§charÂûã(1 byteÊñáÂ≠óÂûã)train_file„Å®output_file„ÇíÂÆ£Ë®Ä */
[93m 39 [mchar save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING]; /* charÂûãsave_vocab_fii[4;1H[93m    [mle„Å®read_vocab_file„ÇíÂÆ£Ë®Ä */
[93m 40 [mstruct vocab_word *vocab; /* ÊßãÈÄ†‰ΩìÂûãstruct vocab_word„Åß„Éù„Ç§„É≥„Çøvocab(„Åì„Çå„ÅØÂ§âÊï∞„Å†„Åã[94m>>[m[6;1H[93m    [m„Çâvocab.cn, vocab.point, vocab.word, vocab.code, vocab.codelen„ÇíÊåÅ„Å§)„ÇíÂÆ£Ë®Ä */
[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[8;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[11;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [13;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3; /* alpha„ÅØÂ≠¶ÁøíÊØî(learning rate) */[15;1H[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[27;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[38;5;224msearch hit BOTTOM, continuing at TOP[14;82H[?12l[?25h[mrat[?25l[14;72H[46m([13C)[?12l[?25h[?25l[m[14;72H([13C)[?12l[?25h[?25l[29;1H[1m-- INSERT --[m[29;13H[K[14;88H[?12l[?25h[?25l[14;72H[46m([13C)[?12l[?25h[?25l[?12l[?25h[?25l[m[14;72H([13C)[?12l[?25h[?25l[46m([13C)[14;73H[?12l[?25h[?25l[?12l[?25h[?25l[m([13C)[14;70H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;58H 6alpha„ÅØÂ≠¶ÁøíÊØî(learning rate) **[15;1H[93m    [m/[14;60H[?12l[?25h[?25l65alpha„ÅØÂ≠¶ÁøíÊØî(learning rate)  [15;1H[93m    [m*/[14;61H[?12l[?25h[?25l55alpha„ÅØÂ≠¶ÁøíÊØî(learning rate))[15;1H[93m    [m */[14;62H[?12l[?25h[?25l5,alpha„ÅØÂ≠¶ÁøíÊØî(learning ratee[15;1H[93m    [m) */[14;63H[?12l[?25h[?25l, alpha„ÅØÂ≠¶ÁøíÊØî(learning ratt[15;1H[93m    [me) */[14;64H[?12l[?25h[?25l 7alpha„ÅØÂ≠¶ÁøíÊØî(learning raa[15;1H[93m    [mte) */[14;65H[?12l[?25h[?25l75alpha„ÅØÂ≠¶ÁøíÊØî(learning rr[15;1H[93m    [mate) */[14;66H[?12l[?25h[?25l7alpha„ÅØÂ≠¶ÁøíÊØî(learning raa[15;1H[93m    [mte) */[15;11H[K[14;65H[?12l[?25h[?25l alpha„ÅØÂ≠¶ÁøíÊØî(learning ratt[15;1H[93m    [me) */[15;10H[K[14;64H[?12l[?25h[?25l 6alpha„ÅØÂ≠¶ÁøíÊØî(learning raa[15;1H[93m    [mte) */[14;65H[?12l[?25h[?25l65alpha„ÅØÂ≠¶ÁøíÊØî(learning rr[15;1H[93m    [mate) */[14;66H[?12l[?25h[?25l56alpha„ÅØÂ≠¶ÁøíÊØî(learning  [15;1H[93m    [mrate) */[14;67H[?12l[?25h[?25l6Ë°åÁõÆalpha„ÅØÂ≠¶ÁøíÊØî(learnn[15;1H[93m    [ming rate) */[14;71H[?12l[?25h[?25l„Çà„Çäalpha„ÅØÂ≠¶ÁøíÊØî(ll[15;1H[93m    [mearning rate) */[14;75H[?12l[?25h[29;1H[K[14;73H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hlearning rate[?25l[14;89H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[2;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output
[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[15;56H[?12l[?25h[?25l[29;1H/learning rate[27m[m[H[2J[1;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [2;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[8;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[10;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[12;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[13;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Åß„ÅÇ„Çã **[15;1H[93m    [m/
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[24;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else {[14;56H[?12l[?25hlearning rate /* 'g'[2C[2C[2C[?25l[29;1H[1m-- INSERT --[14;84H[?12l[?25h[?25l[m„Çí„Åß„ÅÇ„Çã[15;4H[93m [m */[14;84H[?12l[?25h[?25lÂ≠¶ÁøíÊØî[15;4H[93m [m„Åß„ÅÇ„Çã */[15;5H[?12l[?25h[?25l[2C„Åß„ÅÇ„Çã */[15;7H[?12l[?25h[?25lÊéõ„Åë„Åü„Åß„ÅÇ„Çã */[15;13H[?12l[?25h[?25lÂÄ§„Åß„ÅÇ„Çã */[15;15H[?12l[?25h[2C[2C[2C[?25l */[15;22H[K[15;19H[?12l[?25h[?25l */[15;20H[K[15;17H[?12l[?25h[?25l */[15;18H[K[15;15H[?12l[?25h[?25l */[15;16H[K[15;13H[?12l[?25h[?25l */[15;14H[K[15;11H[?12l[?25h[?25l */[15;12H[K[15;9H[?12l[?25h[?25l */[15;10H[K[15;7H[?12l[?25h[?25l[93m [m */[15;8H[K[15;5H[?12l[?25h[?25l[14;88H **[15;1H[93m    [m/[15;6H[K[14;88H[?12l[?25h[?25l[14;28r[28;1H
[1;29r[14;1H[93m501 [m [8C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„ÇíÂ≠¶ */[28;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[14;86H[?12l[?25h[?25l */[14;87H[K[14;84H[?12l[?25h[?25l */[14;85H[K[14;82H[?12l[?25h[?25l„Å® */[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;84HÂ≠¶ÁøíÊØî [15;1H[93m    [m */[?12l[?25h[?25l[93m [m„ÅÆ */[?12l[?25h[?25lÂ∏≠ */[?12l[?25h[?25l */[15;10H[K[15;7H[?12l[?25h[?25lÁ©ç */[?12l[?25h[16;57H[17;51H[18;78H[19;48H[20;82H[21;32H[22;62H[24;9H[?25l[25;27H[46m{[28;15H}[25;28H[?12l[?25h[?25l[m{[28;15H}[26;31H[?12l[?25h[27;27H[?25l[28;23H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[27;82H[?12l[?25h[28;66H[?25l[1;28r[28;1H
[1;29r[28;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m518 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m519 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[1;1H[2M[1;29r[20;22H{[26;15H}
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;[27;41H[?12l[?25h[28;21H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[27;85H[?12l[?25h[28;56H[?25l[1;28r[1;1H[3M[1;29r[26;1H[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[26;62H[?12l[?25h[?25l[27;47H[46m([m[41C  [28;1H[93m [m[7C[46m)[?12l[?25h[?25l[1;28r[m[1;1H[2M[1;29r[25;47H([41C  [26;1H[93m [m[7C)
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];[27;81H[?12l[?25h[28;85H[?25l[1;28r[28;1H
[1;29r[7;66H[46m{[m[22Caa[8;1H[93m [28;1H528 [m[7C [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[6;66H{[22Caa[7;1H[93m [m[27;13H}
[93m529 [m[7C // Learn weights input -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m531 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m534 [m    if (sentence_position >= sentence_length) {[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>[28;1H@                                                                                        [27;31H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[28;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */[28;9H[?12l[?25h[26;31H[28;9H[?25l[1;28r[28;1H
[1;29r[24;51H[46m{[m[28;1H[93m537 [m    [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[23;51H{[27;9H}
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */[?12l[?25h[27;58H[26;40H[?25l[21;51H[46m{[25;9H}[?12l[?25h[?25l[m[21;51H{[25;9H}[24;9H[?12l[?25h[22;31H[?25l[21;51H[46m{[25;9H}[21;52H[?12l[?25h[?25l[m{[25;9H}[20;68H[?12l[?25h[19;45H[?25l[18;12H[?12l[?25h[17;72H[16;45H[?25l[15;14H[?12l[?25h[14;85H[13;81H[?25l[11;47H[46m([m[41C  [12;1H[93m [m[7C[46m)[?12l[?25h[?25l[m[11;47H([41C  [12;1H[93m [m[7C)[10;62H[?12l[?25h[9;56H[8;85H[7;21H[6;41H[?25l[5;16H[?12l[?25h[4;27H[3;85H[2;78H[1;66H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m513 [m[9C } else [46m{[7;15H}[1;23H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m512 [m[11C label = 1;[2;22H{[8;15H}[1;27H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m511 [m[11C target = word;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m510 [m[9C if (d == 0) [46m{[4;15H}[m[28;1H[94m@                                                                                        [1;28H[?12l[?25h[?25l[1;28r[m[1;1H[2L[1;29r[1;1H[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[2;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[3;27H{[6;15H}[2;9H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m505 [m[9C // Learn weights hidden -> output[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m503 [m[9C // Propagate errors output -> hidden[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[?12l[?25h[2;51H[3;78H[4;48H[5;82H[4;48H[3;78H[2;51H[1;57H[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Å®Â≠¶ÁøíÊØî [2;1H[93m    [m„ÅÆÁ©ç */[?12l[?25h[?25l[1;28r[1;1H[3L[1;29r[1;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[2;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[3;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */[2;9H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[2;1H[93m    [m„Ç≠„ÉÉ„Éó */[?12l[?25h[4;9H[7;9H[8;57H[9;51H[8;57H[9;51H[?25l [?12l[?25h[?25l ?[?12l[?25h[?25l[9;52H[K[9;52H[?12l[?25h[?25l /[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[29;1H[K[9;54H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25hhide[?25l[29;5H[K[29;5H[?12l[?25hden[?25l[11;32H[?12l[?25h[?25l[29;1H[1;28r[1;1H[9M[1;29r[20;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [24;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden[29;1H[K[28;39H[?12l[?25h[?25l
/hidden[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[9;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [11;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ [13;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[23;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[38;5;224msearch hit BOTTOM, continuing at TOP[14;20H[?12l[?25h[?25l[m[29;1H/hidden[29;8H[K[29;1H[1;28r[1;1H[3M[1;29r[26;1H[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[29;1H[K[28;28H[?12l[?25h[?25l
/hidden[1;28r[1;1H[8M[1;29r[21;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[29;1H[K[27;45H[?12l[?25h[?25l

?hidden[20;28H[?12l[?25h[?25l[29;1H[3;20H[?12l[?25h[?25l[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m518 [m[11C label = 0;
[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [10;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C }
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[22;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[38;5;224msearch hit TOP, continuing at BOTTOM[14;39H[?12l[?25h[?25l[m[29;1H/hidden[29;8H[K[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */
[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */
[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;
[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß [9;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */
[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ [11;1H[93m    [m */
[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ[13;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m427 [m[7C c = sentence_position - window + a;
[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;
[93m430 [m[7C last_word = sen[c];
[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[23;1H[93m    [m];
[93m433 [m[7C cw++;
[93m434 [m      }
[93m435 [m      if (cw) {
[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;
[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {
[38;5;224msearch hit BOTTOM, continuing at TOP[14;20H[?12l[?25h[?25l[m[29;1H/hidden[29;8H[K[29;1H[1;28r[1;1H[3M[1;29r[26;1H[93m438 [m[9C f = 0;
[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m440 [m[9C // Propagate hidden -> output[29;1H[K[28;28H[?12l[?25h[?25l
/hidden[1;28r[1;1H[8M[1;29r[21;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];
[93m442 [m[9C if (f <= -MAX_EXP) continue;
[93m443 [m[9C else if (f >= MAX_EXP) continue;
[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];
[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[29;1H[K[27;45H[?12l[?25h[?25l

/hidden[1;28r[1;1H[2M[1;29r[27;1H[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[29;1H[K[27;32H[?12l[?25h[?25l

/hidden[27m[m[H[2J[1;1H[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [10;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }
[93m473 [m[7C // hidden -> in
[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {
[93m475 [m[9C c = sentence_position - window + a;
[93m476 [m[9C if (c < 0) continue;
[93m477 [m[9C if (c >= sentence_length) continue;
[93m478 [m[9C last_word = sen[c];
[93m479 [m[9C if (last_word == -1) continue;
[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[22;1H[93m    [me[c];
[93m481 [m[7C }
[93m482 [m      }
[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[26;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */
[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[28;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[14;16H[?12l[?25h[?25l[29;1H/hidden[27m[m[H[2J[1;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */
[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[3;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */
[93m488 [m[7C last_word = sen[c];
[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[7;1H[93m    [m„Çí‰ª£ÂÖ• */
[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */
[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [11;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */
[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */
[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;
[93m496 [m[9C // Propagate hidden -> output
[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];
[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[17;1H[93m    [m„ÉÉ„Éó */
[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[19;1H[93m    [m„Ç≠„ÉÉ„Éó */
[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[21;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[22;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */
[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Å®Â≠¶ÁøíÊØî[24;1H[93m    [m„ÅÆÁ©ç */
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m503 [m[9C // Propagate errors output -> hidden /*  */
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output[14;28H[?12l[?25hhidden -> outpu[15;43H[14;43H[?25l[29;1H[1m-- INSERT --[14;44H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l h */[?12l[?25h[?25lhi */[?12l[?25h[?25lid */[?12l[?25h[?25ldd */[?12l[?25h[?25lde */[?12l[?25h[?25len */[?12l[?25h[?25ln„Åã„Çâ */[?12l[?25h[?25lo */[?12l[?25h[?25lou */[?12l[?25h[?25lut */[?12l[?25h[?25ltp */[?12l[?25h[?25lpu */[?12l[?25h[?25lut */[?12l[?25h[?25lt„Å´ */[?12l[?25h[?25l‰ºù„Åà„Çã */[?12l[?25h[15;72H[29;1H[K[15;71H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25h368[?25l[27m[m[H[2J[1;1H[93m357 [m    next_random = next_random * (unsigned long long)25214903917 + 11;
[93m358 [m    syn0[a * layer1_size + b] = (((next_random & 0xFFFF) / (real)65536) - 0.5) / layee[3;1H[93m    [mr1_size;
[93m359 [m  }
[93m360 [m  CreateBinaryTree(); /* 198Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„ÅüCreateBinaryTree()„ÅßHuffmanÊú®„ÇíÁîüÊàê */
[93m361 [m}
[93m362 
363 [mvoid *TrainModelThread(void *id) { /* 543Ë°åÁõÆ„Åæ„Åß„ÅÇ„Çã */
[93m364 [m  long long a, b, d, cw, word, last_word, sentence_length = 0, sentence_position = 0;[10;1H[93m365 [m  long long word_count = 0, last_word_count = 0, sen[MAX_SENTENCE_LENGTH + 1]; /* ÈÖç[94m>>[m[11;1H[93m    [mÂàósen„ÅØ1001ÂÄã„ÅÆË¶ÅÁ¥†„ÇíÊåÅ„Å§ */
[93m366 [m  long long l1, l2, c, target, label, local_iter = iter; /* 44Ë°åÁõÆ„Çà„Çäiter == 5 */
[93m367 [m  unsigned long long next_random = (long long)id;
[93m368 [m  real f, g; /* realÂûãÂ§âÊï∞f, g (skip-gramÁ≠â„ÅßÈ†ªÂá∫) */
[93m369 [m  clock_t now;
[93m370 [m  real *neu1 = (real *)calloc(layer1_size, sizeof(real)); /* *neu1„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤[94m>>[m[17;1H[93m    [mÂΩìÔºå 540Ë°åÁõÆ„ÅßËß£Êîæ*/
[93m371 [m  real *neu1e = (real *)calloc(layer1_size, sizeof(real)); /* *neu1e„Å´„É°„É¢„É™„ÇíÂãïÁöÑ„Å´[94m>>[m[19;1H[93m    [mÂâ≤ÂΩìÔºå541Ë°åÁõÆ„ÅßËß£Êîæ */
[93m372 [m  FILE *fi = fopen(train_file, "rb"); /* Ë™≠Âèñ„É¢„Éº„Éâ„Åßtrain_file„ÇíÈñã„ÅçÔºå„Éï„Ç°„Ç§„É´„Éù„Ç§„É≥ [21;1H[93m    [m„Çøfi„Å´‰ª£ÂÖ•Ôºå374Ë°åÁõÆ„Åã„Çâ538Ë°åÁõÆ„Åæ„Åß„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅÆÂæå539Ë°åÁõÆ„ÅßÈñâ„Åò„Çã */
[93m373 [m  fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);
[93m374 [m  while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(538Ë°åÁõÆ„Åæ„Åß) */
[93m375 [m    if (word_count - last_word_count > 10000) { /* 387Ë°åÁõÆ„Åæ„Åß */
[93m376 [m      word_count_actual += word_count - last_word_count;
[93m377 [m      last_word_count = word_count;
[93m378 [m      if ((debug_mode > 1)) { /* 384Ë°åÁõÆ„Åæ„Åß */
[93m379 [m[7C now=clock();[14;7H[?12l[?25h[15;7H[16;7H[18;7H[20;7H[22;7H[23;7H[24;7H[25;7H[26;7H[27;7H[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m380 [m[7C printf("%cAlpha: %f  Progress: %.2f%%  Words/thread/sec: %.2fk  ", 13, alpha,[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m381 [m[8C word_count_actual / (real)(iter * train_words + 1) * 100,
[93m382 [m[8C word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000))[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m382 [m         word_count_actual / ((real)(now - start + 1) / (real)CLOCKS_PER_SEC * 1000)))[28;1H[93m    [m;[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m383 [m[7C fflush(stdout);[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m384 [m      }[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m385 [m      alpha = starting_alpha * (1 - word_count_actual / (real)(iter * train_words + 11[28;1H[93m    [m));[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m386 [m      if (alpha < starting_alpha * 0.0001) alpha = starting_alpha * 0.0001;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m387 [m    }
[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_length[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m388 [m    if (sentence_length == 0) { /* ifÊñá(406Ë°åÁõÆ„Åæ„Åß),364Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengthh[28;1H[93m    [m == 0„Å†„Åå389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„ÅßÊúÄÁµÇÁöÑ„Å´sentence_length„Åå1000„Å´„Å™„Çã */[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m389 [m      while (1) { /* ÁÑ°Èôê„É´„Éº„Éó(404Ë°åÁõÆ„Åæ„Åß) */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m390 [m[7C word = ReadWordIndex(fi); /* 114Ë°åÁõÆ„ÅßÂÆöÁæ©„ÅÆÂçòË™û„ÇíË™≠Âèñ„ÇäÔºåË™ûÂΩô‰∏≠„Åß„ÅÆÂçòË™û„ÅÆÁï™[94m>>[m[28;1H[93m    [mÂè∑„ÇíËøî„ÅôReadWordIndex */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m391 [m[7C if (feof(fi)) break; /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„ÅåÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº [28;1H[93m    [m„Éó„Åã„ÇâËÑ±Âá∫ */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m392 [m[7C if (word == -1) continue; /* word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m393 [m[7C word_count++;[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m394 [m[7C if (word == 0) break; /* 389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ */
[93m395 [m[7C // The subsampling randomly discards frequent words while keeping the ranking[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m395 [m        // The subsampling randomly discards frequent words while keeping the rankingg[28;1H[93m    [m same[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m396 [m[7C if (sample > 0) { /* sample > 0 „ÅÆÊôÇ(400Ë°åÁõÆ„Åæ„Åß) */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m397 [m[9C real ran = (sqrt(vocab[word].cn / (sample * train_words)) + 1) * (sample *  [28;1H[93m    [mtrain_words) / vocab[word].cn;[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m398 [m[9C next_random = next_random * (unsigned long long)25214903917 + 11;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m399 [m[9C if (ran < (next_random & 0xFFFF) / (real)65536) continue; /* ran < (next_raa[28;1H[93m    [mndom & 0xFFFF) / (real)65536 „ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶390Ë°åÁõÆ„Å´Êàª„Çã */[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m400 [m[7C } /* 396Ë°åÁõÆ„Åã„Çâ„ÅÆifÊñá„Åì„Åì„Åæ„Åß */[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m401 [m[7C sen[sentence_length] = word; /* ÈÖçÂàósen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ• */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m402 [m[7C sentence_length++; /* „Åì„Åì„Åßsentence_length„ÅåÂ¢ó„Åà„Çã */
[93m403 [m[7C if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* sentence_length„ÅåMAX_SE[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[1;1H[4M[1;29r[24;1H[93m403 [m        if (sentence_length >= MAX_SENTENCE_LENGTH) break; /* sentence_length„ÅåMAX_SEE[25;1H[93m    [mNTENCE_LENGTH == 1000„Å´ÈÅî„Åó„ÅüÊôÇ389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ (i.e. ÈÖçÂàósen„ÅØMAX_SENN[26;1H[93m    [mTENCE_LENGTH + 1ÂÄã„ÅÆË¶ÅÁ¥†„ÅåÊúâ„Çã„ÅÆ„ÅßÔºåsen„ÅÆÂêÑË¶ÅÁ¥†„Å´word„Çí‰ª£ÂÖ•„ÅóÁµÇ„Çè„Å£„Åü„ÇâÁÑ°Èôê„É´„Éº„Éó„ÇíÊäú [27;1H[93m    [m„Åë„Çã) */
[93m404 [m      } /*  389Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åì„Åì„Åæ„Åß */[24;12H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m405 [m      sentence_position = 0; /* 364Ë°åÁõÆ„Åßlong long sentence_position = 0„Å®ÁΩÆ„ÅÑ„Å¶„ÅÑ„Çã[94m>>[m[28;1H[93m    [m„ÅåÔºå„Åì„Åì„Åß„ÇÇÊîπ„ÇÅ„Å¶‰ª£ÂÖ•(533Ë°åÁõÆ„ÅÆsentence_position++„ÅØ„Åì„Åì„Å´Èüø„ÅèÔºü) */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m406 [m    } /* 388Ë°åÁõÆ„Åã„Çâ */
[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m407 [m    if (feof(fi) || (word_count > train_words / num_threads)) { /* „Éï„Ç°„Ç§„É´„Éù„Ç§„É≥„Çø„Åå [28;1H[93m    [mÁµÇÁ´Ø„Å´ÈÅî„Åó„ÅüËã•„Åè„ÅØword_count„Ååtrain_words / num_threads„Çà„ÇäÂ§ö„ÅÑÂ†¥Âêà(416Ë°åÁõÆ„Åæ„Åß) */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m408 [m      word_count_actual += word_count - last_word_count;
[93m409 [m      local_iter--; /* local_iter„Çí1„Å§Ê∏õ„Çâ„Åô(366Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØlocal_iter == 5) */[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m410 [m      if (local_iter == 0) break; /* „Åì„Åì„Åß374Ë°åÁõÆ„Åã„Çâ„ÅÆÁÑ°Èôê„É´„Éº„Éó„Åã„ÇâËÑ±Âá∫ÔºÅ */
[93m411 [m      word_count = 0;[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m412 [m      last_word_count = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m413 [m      sentence_length = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m414 [m      fseek(fi, file_size / (long long)num_threads * (long long)id, SEEK_SET);[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m415 [m      continue; /* ‰ª•‰∏ã„ÅÆÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶375Ë°åÁõÆ„Å´‰∏ÄÊ∞ó„Å´Êàª„Çã */
[93m416 [m    } /* 407Ë°åÁõÆ„Åã„Çâ */[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m417 [m    word = sen[sentence_position]; /* ÊúÄÂàù„ÅØword = sen[0] */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m418 [m    if (word == -1) continue;
[93m419 [m    for (c = 0; c < layer1_size; c++) neu1[c] = 0;[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m420 [m    for (c = 0; c < layer1_size; c++) neu1e[c] = 0;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m421 [m    next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢ÂêàÂêåÊ≥ï„Åß[28;1H[93m    [m‰π±Êï∞next_random„ÇíÁîüÊàê */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m422 [m    b = next_random % window; /* 41Ë°åÁõÆ„Çà„Çäwindow = 5, „Åì„ÅÆb„ÅØ483Ë°åÁõÆ‰ª•Èôç„ÅÆelse„Åß‰Ωø„ÅÜ[28;1H[93m    [m */[27;7H[?12l[?25h[?25l[1;28r[1;1H[5M[1;29r[24;1H[93m423 [m    if (cbow) {  //train the cbow architecture /* ÈÄ£Á∂öÂçòË™ûÈõÜÂêà„É¢„Éá„É´CBOW„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ [25;1H[93m    [m„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà„Å†„Å®„Åì„Çå„ÅåÂãï„Åè)„Åì„Åì„Åã„Çâ482Ë°åÁõÆ„Åæ„ÅßË™≠„ÅøÈ£õ„Å∞„Åô */
[93m424 [m      // in -> hidden
[93m425 [m      cw = 0;
[93m426 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[24;7H[?12l[?25h[26;7H[27;7H[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m427 [m[7C c = sentence_position - window + a;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m428 [m[7C if (c < 0) continue;
[93m429 [m[7C if (c >= sentence_length) continue;[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m430 [m[7C last_word = sen[c];[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m431 [m[7C if (last_word == -1) continue;
[93m432 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_size[28;1H[94m@                                                                                        [27;7H[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[27;1H[93m432 [m        for (c = 0; c < layer1_size; c++) neu1[c] += syn0[c + last_word * layer1_sizee[28;1H[93m    [m];[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m433 [m[7C cw++;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m434 [m      }[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m435 [m      if (cw) {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m436 [m[7C for (c = 0; c < layer1_size; c++) neu1[c] /= cw;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m437 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m438 [m[9C f = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m439 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m440 [m[9C // Propagate hidden -> output[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m441 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1[c + l2];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m442 [m[9C if (f <= -MAX_EXP) continue;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m443 [m[9C else if (f >= MAX_EXP) continue;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m444 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))];[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m445 [m[9C // 'g' is the gradient multiplied by the learning rate
[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m451 [m[7C }[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m452 [m[7C // NEGATIVE SAMPLING[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m454 [m[9C if (d == 0) {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m455 [m[11C target = word;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m456 [m[11C label = 1;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m457 [m[9C } else {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m461 [m[11C if (target == word) continue;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m462 [m[11C label = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m463 [m[9C }[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m464 [m[9C l2 = target * layer1_size;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m465 [m[9C f = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m472 [m[7C }[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m473 [m[7C // hidden -> in[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m474 [m[7C for (a = b; a < window * 2 + 1 - b; a++) if (a != window) {[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m475 [m[9C c = sentence_position - window + a;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m476 [m[9C if (c < 0) continue;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m477 [m[9C if (c >= sentence_length) continue;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m478 [m[9C last_word = sen[c];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m479 [m[9C if (last_word == -1) continue;[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m480 [m[9C for (c = 0; c < layer1_size; c++) syn0[c + last_word * layer1_size] += neu11[28;1H[93m    [me[c];[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m481 [m[7C }[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m482 [m      }[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m483 [m    } else {  //train skip-gram /* skip-gram„ÅÆÂ≠¶Áøí(41Ë°åÁõÆ„Åã„Çâcbow == 1„Çà„Çä„Éá„Éï„Ç©„É´„Éà[94m>>[m[28;1H[93m    [m„Å†„Å®Âãï„Åã„Å™„ÅÑÔºÅ)Ôºå532Ë°åÁõÆ„Åæ„Åß */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m484 [m      for (a = b; a < window * 2 + 1 - b; a++) if (a != window) { /* 531Ë°åÁõÆ„Åæ„ÅßÔºå(422[28;1H[93m    [m2Ë°åÁõÆ„Çà„Çä next_random % window =) b <= a < window *2 + 1 -b„ÅÆÈñì„ÅßÔºåa != window„ÅÆÊôÇ */[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m485 [m[7C c = sentence_position - window + a; /* 41Ë°åÁõÆ„Çà„Çäwindow == 5 */[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m486 [m[7C if (c < 0) continue; /* c < 0„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m487 [m[7C if (c >= sentence_length) continue; /* c >= sentence_length„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó[28;1H[93m    [m„Åó„Å¶485Ë°åÁõÆ„Å´Êàª„Çã(384Ë°åÁõÆ„Çà„ÇäÂΩìÂàù„ÅØsentence_lengh == 0) */[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m488 [m[7C last_word = sen[c];[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m489 [m[7C if (last_word == -1) continue; /* last_word == -1„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m490 [m[7C l1 = last_word * layer1_size; /* 366Ë°åÁõÆ„ÅßÂÆöÁæ©„Åó„Åül1„Å´last_word * layer1_sizee[28;1H[93m    [m„Çí‰ª£ÂÖ• */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m491 [m[7C for (c = 0; c < layer1_size; c++) neu1e[c] = 0;
[93m492 [m[7C // HIERARCHICAL SOFTMAX /* ÈöéÂ±§ÁöÑ„ÇΩ„Éï„Éà„Éû„ÉÉ„ÇØ„Çπ */[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m493 [m[7C if (hs) for (d = 0; d < vocab[word].codelen; d++) { /* 507Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©„É´„Éà [28;1H[93m    [m„Å†„Å®hs == 0„Å†„Åã„ÇâÂãï„Åã„Å™„ÅÑÔºÅ) */[27;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m494 [m[9C f = 0; /* realÂûãÂ§âÊï∞f(368Ë°åÁõÆ„ÅßÂÆ£Ë®ÄÊ∏à)„Å´0„Çí‰ª£ÂÖ• */[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m496 [m[9C // Propagate hidden -> output /* hidden„Åã„Çâoutput„Å´‰ºù„Åà„Çã */[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[28;1H[93m    [m„ÉÉ„Éó */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[28;1H[93m    [m„Ç≠„ÉÉ„Éó */[27;7H[?12l[?25h[?25l[1;28r[1;1H[3M[1;29r[26;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[27;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[28;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */[26;7H[?12l[?25h[?25l[1;28r[1;1H[3M[1;29r[26;1H[93m501 [m[9C // 'g' is the gradient multiplied by the learning rate /* 'g'„ÅØÂãæÈÖç„Å®Â≠¶ÁøíÊØî[27;1H[93m    [m„ÅÆÁ©ç */
[93m502 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;[26;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m503 [m[9C // Propagate errors output -> hidden /*  */
[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m505 [m[9C // Learn weights hidden -> output[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[28;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[27;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m510 [m[9C if (d == 0) {
[93m511 [m[11C target = word;[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m512 [m[11C label = 1;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m513 [m[9C } else {[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m515 [m[11C target = table[(next_random >> 16) % table_size];[27;7H[?12l[?25h[28;7H[?25l[1;28r[28;1H
[1;29r[28;1H[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m518 [m[11C label = 0;[28;7H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m519 [m[9C }[28;7H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[27;7H[?12l[?25h[28;7H[?25l[1;28r[1;1H[3M[1;29r[26;1H[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [28;1H[93m    [m/ 2))]) * alpha;[26;7H[?12l[?25h[25;7H[24;7H[23;7H[22;7H[21;7H[20;7H[19;7H[18;7H[17;7H[16;7H[15;7H[14;7H[13;7H[14;7H[15;7H[14;7H[13;7H[12;7H[10;7H[9;7H[8;7H[7;7H[6;7H[5;7H[4;7H[3;7H[1;7H[?25l[1;28r[1;1H[3L[1;29r[1;1H[93m500 [m[9C else f = expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP / 2))]; //[2;1H[93m    [m* -MAX_EXP < f < MAX_EXP„ÅÆÊôÇ f„Å´expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX__[3;1H[93m    [mEXP / 2))]„Çí‰ª£ÂÖ• */[1;7H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m499 [m[9C else if (f >= MAX_EXP) continue; /* f >= MAX_EXP(== 6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ[94m>>[m[2;1H[93m    [m„Ç≠„ÉÉ„Éó */[1;7H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m498 [m[9C if (f <= -MAX_EXP) continue; /* f <= -MAX_EXP(== -6, 23Ë°åÁõÆ)„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠[94m>>[m[2;1H[93m    [m„ÉÉ„Éó */[1;7H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m497 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1[c + l2];[1;7H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m496 [m[9C // Propagate hidden -> output /* hidden„Åã„Çâoutput„Å´‰ºù„Åà„Çã */[1;7H[?12l[?25h[2;7H[3;7H[5;7H[7;7H[10;7H[12;7H[13;7H[14;7H[15;7H[14;7H[13;7H        // Propagate errors output -> [12;45H[10;45H[7;45H[5;45H[3;45H[2;45H[1;45H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m495 [m[9C l2 = vocab[word].point[d] * layer1_size;[1;45H[?12l[?25hy[2;46H* hidden[2C[2Coutput[2C[2C[2C[2C[?25l„Çã */[2;73H[K[2;68H[?12l[?25h[?25l */[2;71H[K[2;68H[?12l[?25h[?25l[29;1H[1m-- INSERT --[2;69H[?12l[?25h[?25l[m */[2;69H[K[2;66H[?12l[?25h[?25lÂèçÊò† */[?12l[?25h[3;70H[4;70H[6;70H[8;70H[11;70H[13;57H[14;58H[?25l o */[?12l[?25h[?25lou */[?12l[?25h[?25lut */[?12l[?25h[?25ltp */[?12l[?25h[?25lpu */[?12l[?25h[?25lut */[?12l[?25h[?25lt„Åã„Çâ */[?12l[?25h[?25lh */[?12l[?25h[?25lhi */[?12l[?25h[?25lid */[?12l[?25h[?25ldd */[?12l[?25h[?25lde */[?12l[?25h[?25len */[?12l[?25h[?25ln„Å´ */[?12l[?25h[?25lÂèçÊò† */[?12l[?25h[?25l „Ç®„É©„Éºoutput„Åã„Çâhidden„Å´ÂèçÊò† */[14;61H[?12l[?25h[?25l„Çíoutput„Åã„Çâhidden„Å´ÂèçÊò† */[14;63H[?12l[?25h[15;63H[16;48H[?25lta[?12l[?25h[?25l[16;48H[K[16;48H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h [?25l Èáç„Åø */[?12l[?25h[?25l„Çí */[?12l[?25h[?25lÂ≠¶Áøí */[?12l[?25h[?25l„Åó„Å¶ */[?12l[?25h[?25lh */[?12l[?25h[?25lhi */[?12l[?25h[?25lid */[?12l[?25h[?25lde */[?12l[?25h[?25len */[?12l[?25h[?25ln„Åã„Çâ */[?12l[?25h[15;75H[16;75H[17;75H[18;32H[19;62H[20;74H[?25l[15Caa[21;1H[93m [m[22;27H[46m{[25;15H}[22;28H[?12l[?25h[?25l[m{[25;15H}[23;31H[?12l[?25h[24;27H[?25l[25;23H[?12l[?25h[26;75H[27;66H[28;75H[?25l[1;28r[28;1H
[1;29r[28;1H[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */[28;74H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m518 [m[11C label = 0;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[22;22H[46m{[m[28;1H[93m519 [m[9C [46m}[?12l[?25h[?25l[1;28r[m[1;1H[2M[1;29r[20;22H{[26;15H}
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;[27;41H[?12l[?25h[28;21H[27;41H[?25l[20;22H[46m{[26;15H}[?12l[?25h[?25l[m[20;22H{[26;15H}[25;27H[?12l[?25h[24;74H[23;75H[22;66H[21;75H[?25l[20;22H[46m{[26;15H}[20;23H[?12l[?25h[?25l[m{[26;15H}[19;27H[?12l[?25h[18;31H[?25l[17;27H[46m{[20;15H}[17;28H[?12l[?25h[?25l[?12l[?25h[?25l{[?12l[?25h[?25l[m{„ÄÄ[20;15H}[17;30H[?12l[?25h[?25l/[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l[46m{[20;15H}[17;28H[?12l[?25h[?25l[m{[20;15H}[17;30H[?12l[?25h[?25l[46m{[m/*  */[17;34H[K[20;15H[46m}[17;28H[?12l[?25h[?25l[m{ /*  */[20;15H}[17;29H[?12l[?25h[?25l[46m{[20;15H}[17;28H[?12l[?25h[?25l[m{[20;15H}[17;29H[?12l[?25h/* [?25l „É´„Éº„Éó */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[15;40H0; d < negative + 1; d+[?25l[15;35H[46m([28C)[m[24Caa[16;1H[93m [15;64H[?12l[?25h[?25l[m[25Caa[16;1H[93m [15;65H[?12l[?25h[?25l[m[15;35H([28C)[24Caa[16;1H[93m [15;66H[?12l[?25h[?25l[m{[?12l[?25h[?25l %{ /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negg[16;1H[93m    [mative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[15;67H[?12l[?25h[?25l { /* („Éá„Éï„Ç©„É´„Éà„Å†„Å®negaa[16;1H[93m    [mtive == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */[16;36H[K[15;66H[?12l[?25h[29;1H[K[15;65H[?25l[?12l[?25h[?25l[1;28r[1;1H[8M[1;29r[7;66H[46m{[m[22Caa[8;1H[93m [21;1H522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [25;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C [46m}[?12l[?25h[?25l[7;66H[?12l[?25h[?25l[m[23Caa[8;1H[93m [28;13H[?12l[?25h[?25l[m
[1m-- INSERT --[28;14H[?12l[?25h[?25l[?12l[?25h[?25l[1C[?12l[?25h[?25l[m[7;66H{[22Caa[8;1H[93m [m[28;13H} [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l 5 */[?12l[?25h[?25l50 */[?12l[?25h[?25l09 */[?12l[?25h[?25l9Ë°åÁõÆ */[?12l[?25h[?25l„Åã„Çâ */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[?25lf */[?12l[?25h[?25lfo */[?12l[?25h[?25lor */[?12l[?25h[?25lrÊñá */[?12l[?25h[?25l„ÅØ */[?12l[?25h[?25l„Åì„Åì„Åæ„Åß */[?12l[?25h[27;46H[26;46H[?25l[24;42H[46m([mint[46m)[m[42C  [25;1H[93m [24;46H[?12l[?25h[?25l[m(int)[42C  [25;1H[93m [23;46H[?12l[?25h[?25l[m[22;36H[46m([9C)[?12l[?25h[?25l[m[22;36H([9C)[21;46H[?12l[?25h[20;21H[19;41H[?25l[12;22H[46m{[18;15H}[?12l[?25h[?25l[m[12;22H{[18;15H}[17;27H[?12l[?25h[16;46H[15;46H[14;46H[?25l[13;45H[46m([18C)[13;46H[?12l[?25h[?25l[12;22H{[m[13;45H([18C)[18;15H[46m}[12;23H[?12l[?25h[?25l[m{[18;15H}[11;27H[?12l[?25h[10;31H[9;43H[7;46H[6;45H[7;46H negative + 1; d+[?25l[7;35H[46m([28C)[m[24Caa[8;1H[93m [7;64H[?12l[?25h[?25l[m[25Caa[8;1H[93m [7;65H[?12l[?25h[?25l[m[7;35H([28C) [46m{[m[22Caa[8;1H[93m [m[28;13H[46m}[7;66H[?12l[?25h[?25l[m[23Caa[8;1H[93m [7;67H[?12l[?25h[?25l[m{[22Caa[8;1H[93m [m[28;13H}[7;68H[?12l[?25h/*[?25l [46m([m[17Caa[8;1H[93m [m[30C[46m)[7;71H[?12l[?25h[?25l[m 5[46m([m„Éá„Éï„Ç©„É´„Éà„Å†„Å®negg[8;1H[93m    [mative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè[46m)[m */[7;72H[?12l[?25h[?25l52[46m([m„Éá„Éï„Ç©„É´„Éà„Å†„Å®nee[8;1H[93m    [mgative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè[46m)[m */[7;73H[?12l[?25h[?25l28[46m([m„Éá„Éï„Ç©„É´„Éà„Å†„Å®nn[8;1H[93m    [megative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè[46m)[m */[7;74H[?12l[?25h[?25l8Ë°åÁõÆ[46m([m„Éá„Éï„Ç©„É´„Éà[94m>>[m[8;1H[93m    [m„Å†„Å®negative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè[46m)[m */[7;78H[?12l[?25h[?25l„Åæ„Åß[46m([m„Éá„Éï„Ç©[94m>>[m[8;1H[93m [m[3C„É´„Éà„Å†„Å®negative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè[46m)[m */[7;82H[?12l[?25h[?25l([6C[94m>>[m[8;1H[93m [m[42C)[9;43H[?12l[?25h[?25lÊúÄÂàù */[?12l[?25h[?25l„Å†„Åë */[?12l[?25h[10;31H[11;27H[?25l[12;22H[46m{[18;15H}[12;23H[?12l[?25h[?25l[m{[18;15H}[11;27H[?12l[?25h[10;31H[11;27H[?25l[12;22H[46m{[18;15H}[12;23H[?12l[?25h[?25l[m{[18;15H}[11;27H[?12l[?25h[?25l[12;22H[46m{[18;15H}[12;23H[?12l[?25h[?25l[m{_[18;15H}[12;24H[?12l[?25h[?25l[46m{[m[12;23H[K[18;15H[46m}[12;23H[?12l[?25h[?25l[m{[18;15H}[12;24H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l „É´„Éº„Éó */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[?25l2 */[?12l[?25h[?25l2ÂõûÁõÆ */[?12l[?25h[?25l‰ª•Èôç */[?12l[?25h[13;44H[?25l [46m([18C)[13;45H[?12l[?25h[?25l([?12l[?25h[?25l[m([18C)[13;47H[?12l[?25hnsigned long lon[?25l[13;45H[46m([18C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[13;45H([18C)2[?12l[?25h5214903917 + 11;[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l[14;28r[14;1H[L[1;29r[13;85H Á∑öÂΩ¢[14;1H[93m    [mÂêàÂêåÊ≥ï */[?12l[?25h [15;66H[16;78H[29;1H[K[16;77H[?25l[?12l[?25h[?25l[29;1H:[?12l[?25hw[?25l"word2vec.c" 703L, 38944C written[16;77H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25htable[?25l[27m[m[H[2J[1;1H[93m682 [m  if ((i = ArgPos((char *)"-cbow", argc, argv)) > 0) cbow = atoi(argv[i + 1]);
[93m683 [m  if (cbow) alpha = 0.05;
[93m684 [m  if ((i = ArgPos((char *)"-alpha", argc, argv)) > 0) alpha = atof(argv[i + 1]);
[93m685 [m  if ((i = ArgPos((char *)"-output", argc, argv)) > 0) strcpy(output_file, argv[i + 11[5;1H[93m    [m]);
[93m686 [m  if ((i = ArgPos((char *)"-window", argc, argv)) > 0) window = atoi(argv[i + 1]);
[93m687 [m  if ((i = ArgPos((char *)"-sample", argc, argv)) > 0) sample = atof(argv[i + 1]);
[93m688 [m  if ((i = ArgPos((char *)"-hs", argc, argv)) > 0) hs = atoi(argv[i + 1]);
[93m689 [m  if ((i = ArgPos((char *)"-negative", argc, argv)) > 0) negative = atoi(argv[i + 1]))[10;1H[93m    [m;
[93m690 [m  if ((i = ArgPos((char *)"-threads", argc, argv)) > 0) num_threads = atoi(argv[i + 11[12;1H[93m    [m]);
[93m691 [m  if ((i = ArgPos((char *)"-iter", argc, argv)) > 0) iter = atoi(argv[i + 1]);
[93m692 [m  if ((i = ArgPos((char *)"-min-count", argc, argv)) > 0) min_count = atoi(argv[i + 11[15;1H[93m    [m]);
[93m693 [m  if ((i = ArgPos((char *)"-classes", argc, argv)) > 0) classes = atoi(argv[i + 1]);
[93m694 [m  vocab = (struct vocab_word *)calloc(vocab_max_size, sizeof(struct vocab_word));
[93m695 [m  vocab_hash = (int *)calloc(vocab_hash_size, sizeof(int));
[93m696 [m  expTable = (real *)malloc((EXP_TABLE_SIZE + 1) * sizeof(real));
[93m697 [m  for (i = 0; i < EXP_TABLE_SIZE; i++) {
[93m698 [m    expTable[i] = exp((i / (real)EXP_TABLE_SIZE * 2 - 1) * MAX_EXP); // Precompute thh[22;1H[93m    [me exp() table
[93m699 [m    expTable[i] = expTable[i] / (expTable[i] + 1);[18C // Precompute f(([24;1H[93m    [mx) = x / (x + 1)
[93m700 [m  }
[93m701 [m  TrainModel();
[93m702 [m  return 0;
[93m703 [m}[22;13H[?12l[?25h[?25l[29;1H/table[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m 41 [mint binary = 0, cbow = 1, debug_mode = 2, window = 5, min_count = 5, num_threads = 122[2;1H[93m    [m, min_reduce = 1;
[93m 42 [mint *vocab_hash; /* intÂûã„Éù„Ç§„É≥„Çøvocab_hash(SearchVocab()„Åß‰ΩøÁî®) */
[93m 43 [mlong long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100; /* long longÂûãvocc[5;1H[93m    [mab_max_size, vocab_size„Å®layer1_size„ÇíÂÆ£Ë®Ä */
[93m 44 [mlong long train_words = 0, word_count_actual = 0, iter = 5, file_size = 0, classes =  [7;1H[93m    [m0;
[93m 45 [mreal alpha = 0.025, starting_alpha, sample = 1e-3; /* 655, 656Ë°åÁõÆ„Çà„Çäalpha„ÅØÂ≠¶ÁøíÊØî(ll[9;1H[93m    [mearning rate) */
[93m 46 [mreal *syn0, *syn1, *syn1neg, *expTable; /* realÂûã„Éù„Ç§„É≥„Çø */
[93m 47 [mclock_t start;
[93m 48 
 49 [mint hs = 0, negative = 5; /* hs„ÅØ344Ë°åÁõÆÔºånegative„ÅØ350Ë°åÁõÆ„ÅßÂàùÂá∫ */
[93m 50 [mconst int table_size = 1e8;
[93m 51 [mint *table;
[93m 52 [m/* voidÂûã(ÂÄ§„ÇíËøî„Åï„Å™„ÅÑÈñ¢Êï∞)InitUnigramTable()‚Üê„Åã„Å™„ÇäÂæå„Å´Âá∫„Å¶„Åè„Çã */
[93m 53 [mvoid InitUnigramTable() {
[93m 54 [m  int a, i;
[93m 55 [m  double train_words_pow = 0;
[93m 56 [m  double d1, power = 0.75;
[93m 57 [m  table = (int *)malloc(table_size * sizeof(int)); /* table_size * sizeof(int)ÂàÜ„ÅÆ„É°[94m>>[m[22;1H[93m    [m„É¢„É™„ÇíÂãïÁöÑ„Å´Ââ≤„ÇäÂΩì„Å¶(free()„Åß„É°„É¢„É™„ÇíËß£Êîæ) */
[93m 58 [m  for (a = 0; a < vocab_size; a++) train_words_pow += pow(vocab[a].cn, power);
[93m 59 [m  i = 0;
[93m 60 [m  d1 = pow(vocab[i].cn, power) / train_words_pow;
[93m 61 [m  for (a = 0; a < table_size; a++) {
[93m 62 [m    table[a] = i;
[93m 63 [m    if (a / (double)table_size > d1) {
[38;5;224msearch hit BOTTOM, continuing at TOP[14;15H[?12l[?25h[?25l[m[29;1H/table[29;7H[K[29;1H[15;10H[?12l[?25htable[?25l[29;1H[1m-- INSERT --[15;16H[?12l[?25h[?25l[m [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l i */[?12l[?25h[?25lin */[?12l[?25h[?25lnt */[?12l[?25h[?25ltÂûã */[?12l[?25h[?25l„Éù„Ç§„É≥„Çø */[?12l[?25h[?25lt */[?12l[?25h[?25lta */[?12l[?25h[?25lab */[?12l[?25h[?25lbl */[?12l[?25h[?25lle */[?12l[?25h[29;1H[K[15;37H[?25l[?12l[?25h[?25l[29;1H/[?12l[?25htable[?25l[21;7H[?12l[?25h[?25l[29;1H[K[29;1H/[?12l[?25hfree(table[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[41mE486: Pattern not found: free(table[m[29;36H[K[21;7H[?12l[?25h[49C[?25l[29;1H[K[29;1H/[?12l[?25hfree[?25l(table[?12l[?25h[?25l[29;6H[K[29;6H[?12l[?25h[?25l[29;5H[K[29;5H[?12l[?25h[?25l[29;4H[K[29;4H[?12l[?25h[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25h [21;56H[?25l[21;28H[46m([24C)[m[35C[94m>>[m[22;1H[93m [21;53H[?12l[?25h[?25l[m[21;28H([19C[46m([mint[46m)[m)[35C[94m>>[m[22;1H[93m [21;52H[?12l[?25h[?25l[m(int)[36C[94m>>[m[22;1H[93m [23;52H[?12l[?25h[?25l[m[21;48H[46m([mint[46m)[m[36C[94m>>[m[22;1H[93m [21;52H[?12l[?25h[?25l[m(int)[36C[94m>>[m[22;1H[93m [47C[?12l[?25h[?25l[m[22;25H[46m([20C)[?12l[?25h[?25l[m[29;1H[1m-- INSERT --[22;47H[?12l[?25h[?25l[?12l[?25h[?25l[m[46m)[m */[22;48H[K[22;44H[?12l[?25h[?25l[46m)[m */[22;46H[K[22;42H[?12l[?25h[?25l[46m)[m */[22;44H[K[22;40H[?12l[?25h[?25l[46m)[m */[22;42H[K[22;38H[?12l[?25h[?25l[46m)[m */[22;40H[K[22;36H[?12l[?25h[?25l[46m)[m */[22;38H[K[22;34H[?12l[?25h[?25l)[46m)[m */[22;36H[K[22;32H[?12l[?25h[?25l[22;25H(free[46m()[m */[22;35H[K[22;31H[?12l[?25h[?25l[46m([mfree[46m)[m */[22;34H[K[22;30H[?12l[?25h[?25le[46m)[m */[22;33H[K[22;29H[?12l[?25h[?25lr[46m)[m */[22;32H[K[22;28H[?12l[?25h[?25lf[46m)[m */[22;31H[K[22;27H[?12l[?25h[?25l[46m()[m */[22;30H[K[22;26H[?12l[?25h[?25l[46m([m?[46m)[m */[?12l[?25h[?25l[46m()[m */[22;30H[K[22;26H[?12l[?25h[?25l[46m([m„Åì„ÅÆ[46m)[m */[?12l[?25h[?25l„É°„É¢„É™„ÅØ[46m)[m */[?12l[?25h[?25l„Å©„Åì„Åß[46m)[m */[?12l[?25h[?25lËß£Êîæ[46m)[m */[?12l[?25h[?25lÔºü[46m)[m */[?12l[?25h[?25l[22;25H([24C)[?12l[?25h[?25l[46m([24C)[22;26H[?12l[?25h[?25l[?12l[?25h[m[29;1H[K[22;23H[?25l[2C([24C)[22;23H[?12l[?25h[?25l[29;1H/[?12l[?25hfree[?25l[27m[m[H[2J[1;1H[93m149 [m  // Sort the vocabulary and keep </s> at the first position /* Ë™ûÂΩô„Çí‰∏¶Êõø„Åà„Å¶ÊñáÂ≠óÂàó<<[2;1H[93m    [m/s>„ÇíÂÖàÈ†≠„Å´‰øù„Å§ */
[93m150 [m  qsort(&vocab[1], vocab_size - 1, sizeof(struct vocab_word), VocabCompare);/* vocab[[[4;1H[93m    [m1]„ÅÆ„Ç¢„Éâ„É¨„ÇπÔºåvocab_size -1Ôºå */
[93m151 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1;
[93m152 [m  size = vocab_size;
[93m153 [m  train_words = 0;
[93m154 [m  for (a = 0; a < size; a++) {
[93m155 [m    // Words occuring less than min_count times will be discarded from the vocab /* mm[10;1H[93m    [min_count‰ª•‰∏ã„ÅÆÈ†ªÂ∫¶„ÅÆÂçòË™û„Çívocab„Åã„ÇâÈô§Â§ñ„Åô„Çã */
[93m156 [m    if ((vocab[a].cn < min_count) && (a != 0)) { /* vocab[a].cn„Ååmin_countÊú™Ê∫Ä„Åã„Å§a„Åå[12;1H[93m    [m0„Åß„Å™„ÅÑÊôÇ */
[93m157 [m      vocab_size--; /* vocab_size„Åã„Çâ1Âºï„Åè */
[93m158 [m      free(vocab[a].word); /* vocab[a].word„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m159 [m    } else {
[93m160 [m      // Hash will be re-computed, as after the sorting it is not actual /* „Éè„ÉÉ„Ç∑„É•[94m>>[m[17;1H[93m    [m„Çí */
[93m161 [m      hash=GetWordHash(vocab[a].word);
[93m162 [m      while (vocab_hash[hash] != -1) hash = (hash + 1) % vocab_hash_size;
[93m163 [m      vocab_hash[hash] = a;
[93m164 [m      train_words += vocab[a].cn;
[93m165 [m    }
[93m166 [m  }
[93m167 [m  vocab = (struct vocab_word *)realloc(vocab, (vocab_size + 1) * sizeof(struct vocab__[25;1H[93m    [mword));
[93m168 [m  // Allocate memory for the binary tree construction
[93m169 [m  for (a = 0; a < vocab_size; a++) {
[93m170 [m    vocab[a].code = (char *)calloc(MAX_CODE_LENGTH, sizeof(char));[14;11H[?12l[?25h[?25l[11;52H[46m{[15;9H}[?12l[?25h[?25l[m[29;1H/free[1;28r[1;1H[13M[1;29r[2;9H}[16;1H[93m171 [m    vocab[a].point = (int *)calloc(MAX_CODE_LENGTH, sizeof(int));
[93m172 [m  }
[93m173 [m}
[93m174 
175 [m// Reduces the vocabulary by removing infrequent tokens
[93m176 [mvoid ReduceVocab() {
[93m177 [m  int a, b = 0;
[93m178 [m  unsigned int hash;
[93m179 [m  for (a = 0; a < vocab_size; a++) if (vocab[a].cn > min_reduce) {
[93m180 [m    vocab[b].cn = vocab[a].cn;
[93m181 [m    vocab[b].word = vocab[a].word;
[93m182 [m    b++;
[93m183 [m  } else free(vocab[a].word);[29;1H[K[28;14H[?12l[?25h[?25l
/free[27m[m[H[2J[1;1H[93m246 [m      point[i] = b; /* pont[i]„Å´b„Çí‰ª£ÂÖ•*/
[93m247 [m      i++;
[93m248 [m      b = parent_node[b]; /* b„Å´parent_node„Çí‰ª£ÂÖ• */
[93m249 [m      if (b == vocab_size * 2 - 2) break; /* b == vocab_size * 2 - 2„ÅÆÊôÇÁÑ°Èôê„É´„Éº„Éó„Åã[94m>>[m[5;1H[93m    [m„ÇâËÑ±Âá∫ */
[93m250 [m    }
[93m251 [m    vocab[a].codelen = i;
[93m252 [m    vocab[a].point[0] = vocab_size - 2;
[93m253 [m    for (b = 0; b < i; b++) {
[93m254 [m      vocab[a].code[i - b - 1] = code[b];
[93m255 [m      vocab[a].point[i - b] = point[b] - vocab_size;
[93m256 [m    }
[93m257 [m  }
[93m258 [m  free(count); /* countÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m259 [m  free(binary); /* binaryÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m260 [m  free(parent_node); /* parent_nodeÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m261 [m}
[93m262 
263 [mvoid LearnVocabFromTrainFile() { /* voidÂûãÈñ¢Êï∞LearnVocabFromTrainFile() */
[93m264 [m  char word[MAX_STRING];
[93m265 [m  FILE *fin; /* FILEÂûã„Éù„Ç§„É≥„Çøfin */
[93m266 [m  long long a, i; /* long longÂûãÂ§âÊï∞a, i */
[93m267 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1; /* 0 <= a < vocab_hash_sii[24;1H[93m    [mze„ÅÆÊôÇvocab_hash[a]„Å´-1„Çí‰ª£ÂÖ• */
[93m268 [m  fin = fopen(train_file, "rb"); /* train_file„ÇíË™≠Ëæº„É¢„Éº„Éâ„ÅßÈñã„Åè */
[93m269 [m  if (fin == NULL) { /* „Éù„Ç§„É≥„Çøfin„ÅåNULL„ÅÆÊôÇ */
[93m270 [m    printf("ERROR: training data file not found!\n");
[93m271 [m    exit(1);[14;7H[?12l[?25h[?25l[29;1H/free[15;7H[?12l[?25h[?25l[29;1H[16;7H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m528 [m[7C } /* 509Ë°åÁõÆ„Åã„Çâ„ÅÆforÊñá„ÅØ„Åì„Åì„Åæ„Åß */
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[10;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();[14;7H[?12l[?25h[?25l[29;1H/free[15;7H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m597 [m[9C x = 0;
[93m598 [m[9C for (b = 0; b < layer1_size; b++) x += cent[layer1_size * d + b] * syn0[c **[3;1H[93m    [m layer1_size + b];
[93m599 [m[9C if (x > closev) {
[93m600 [m[11C closev = x;
[93m601 [m[11C closeid = d;
[93m602 [m[9C }
[93m603 [m[7C }
[93m604 [m[7C cl[c] = closeid;
[93m605 [m      }
[93m606 [m    }
[93m607 [m    // Save the K-means classes
[93m608 [m    for (a = 0; a < vocab_size; a++) fprintf(fo, "%s %d\n", vocab[a].word, cl[a]);
[93m609 [m    free(centcn); /* 572Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücentcn„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m610 [m    free(cent); /* 575Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücent„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m611 [m    free(cl); /* 573Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücl„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m612 [m  } /* 569Ë°åÁõÆelse„Åã„Çâ */
[93m613 [m  fclose(fo);
[93m614 [m} /* 545Ë°åÁõÆvoid TrainModel()„Åã„Çâ */
[93m615 
616 [mint ArgPos(char *str, int argc, char **argv) {
[93m617 [m  int a;
[93m618 [m  for (a = 1; a < argc; a++) if (!strcmp(str, argv[a])) {
[93m619 [m    if (a == argc - 1) {
[93m620 [m      printf("Argument missing for %s\n", str);
[93m621 [m      exit(1);
[93m622 [m    }
[93m623 [m    return a;[14;9H[?12l[?25h[?25l[29;1H/free[15;9H[?12l[?25h[?25l[29;1H[16;9H[?12l[?25h[?25l[29;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[93m149 [m  // Sort the vocabulary and keep </s> at the first position /* Ë™ûÂΩô„Çí‰∏¶Êõø„Åà„Å¶ÊñáÂ≠óÂàó<<[2;1H[93m    [m/s>„ÇíÂÖàÈ†≠„Å´‰øù„Å§ */
[93m150 [m  qsort(&vocab[1], vocab_size - 1, sizeof(struct vocab_word), VocabCompare);/* vocab[[[4;1H[93m    [m1]„ÅÆ„Ç¢„Éâ„É¨„ÇπÔºåvocab_size -1Ôºå */
[93m151 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1;
[93m152 [m  size = vocab_size;
[93m153 [m  train_words = 0;
[93m154 [m  for (a = 0; a < size; a++) {
[93m155 [m    // Words occuring less than min_count times will be discarded from the vocab /* mm[10;1H[93m    [min_count‰ª•‰∏ã„ÅÆÈ†ªÂ∫¶„ÅÆÂçòË™û„Çívocab„Åã„ÇâÈô§Â§ñ„Åô„Çã */
[93m156 [m    if ((vocab[a].cn < min_count) && (a != 0)) { /* vocab[a].cn„Ååmin_countÊú™Ê∫Ä„Åã„Å§a„Åå [12;1H[93m    [m0„Åß„Å™„ÅÑÊôÇ */
[93m157 [m      vocab_size--; /* vocab_size„Åã„Çâ1Âºï„Åè */
[93m158 [m      free(vocab[a].word); /* vocab[a].word„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m159 [m    } else {
[93m160 [m      // Hash will be re-computed, as after the sorting it is not actual /* „Éè„ÉÉ„Ç∑„É•[94m>>[m[17;1H[93m    [m„Çí */
[93m161 [m      hash=GetWordHash(vocab[a].word);
[93m162 [m      while (vocab_hash[hash] != -1) hash = (hash + 1) % vocab_hash_size;
[93m163 [m      vocab_hash[hash] = a;
[93m164 [m      train_words += vocab[a].cn;
[93m165 [m    }
[93m166 [m  }
[93m167 [m  vocab = (struct vocab_word *)realloc(vocab, (vocab_size + 1) * sizeof(struct vocab__[25;1H[93m    [mword));
[93m168 [m  // Allocate memory for the binary tree construction
[93m169 [m  for (a = 0; a < vocab_size; a++) {
[93m170 [m    vocab[a].code = (char *)calloc(MAX_CODE_LENGTH, sizeof(char));
[38;5;224msearch hit BOTTOM, continuing at TOP[14;11H[?12l[?25h[?25l[m[29;1H/free[29;6H[K[29;1H[1;28r[1;1H[13M[1;29r[16;1H[93m171 [m    vocab[a].point = (int *)calloc(MAX_CODE_LENGTH, sizeof(int));
[93m172 [m  }
[93m173 [m}
[93m174 
175 [m// Reduces the vocabulary by removing infrequent tokens
[93m176 [mvoid ReduceVocab() {
[93m177 [m  int a, b = 0;
[93m178 [m  unsigned int hash;
[93m179 [m  for (a = 0; a < vocab_size; a++) if (vocab[a].cn > min_reduce) {
[93m180 [m    vocab[b].cn = vocab[a].cn;
[93m181 [m    vocab[b].word = vocab[a].word;
[93m182 [m    b++;
[93m183 [m  } else free(vocab[a].word);[29;1H[K[28;14H[?12l[?25h[?25l
?free[1;11H[?12l[?25h[?25l[29;1H[38;5;224msearch hit TOP, continuing at BOTTOM[27m[m[H[2J[1;1H[93m598 [m[9C for (b = 0; b < layer1_size; b++) x += cent[layer1_size * d + b] * syn0[c **[2;1H[93m    [m layer1_size + b];
[93m599 [m[9C if (x > closev) {
[93m600 [m[11C closev = x;
[93m601 [m[11C closeid = d;
[93m602 [m[9C }
[93m603 [m[7C }
[93m604 [m[7C cl[c] = closeid;
[93m605 [m      }
[93m606 [m    }
[93m607 [m    // Save the K-means classes
[93m608 [m    for (a = 0; a < vocab_size; a++) fprintf(fo, "%s %d\n", vocab[a].word, cl[a]);
[93m609 [m    free(centcn); /* 572Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücentcn„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m610 [m    free(cent); /* 575Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücent„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m611 [m    free(cl); /* 573Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åücl„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m612 [m  } /* 569Ë°åÁõÆelse„Åã„Çâ */
[93m613 [m  fclose(fo);
[93m614 [m} /* 545Ë°åÁõÆvoid TrainModel()„Åã„Çâ */
[93m615 
616 [mint ArgPos(char *str, int argc, char **argv) {
[93m617 [m  int a;
[93m618 [m  for (a = 1; a < argc; a++) if (!strcmp(str, argv[a])) {
[93m619 [m    if (a == argc - 1) {
[93m620 [m      printf("Argument missing for %s\n", str);
[93m621 [m      exit(1);
[93m622 [m    }
[93m623 [m    return a;
[93m624 [m  }
[38;5;224msearch hit TOP, continuing at BOTTOM[15;9H[?12l[?25h[?25l[m[29;1H?free[29;6H[K[29;1H[14;9H[?12l[?25h[?25l[29;1H[13;9H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[9;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();
[93m555 [m  if (negative > 0) InitUnigramTable();[14;7H[?12l[?25h[?25l[29;1H?free[13;7H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m248 [m      b = parent_node[b]; /* b„Å´parent_node„Çí‰ª£ÂÖ• */
[93m249 [m      if (b == vocab_size * 2 - 2) break; /* b == vocab_size * 2 - 2„ÅÆÊôÇÁÑ°Èôê„É´„Éº„Éó„Åã[94m>>[m[3;1H[93m    [m„ÇâËÑ±Âá∫ */
[93m250 [m    }
[93m251 [m    vocab[a].codelen = i;
[93m252 [m    vocab[a].point[0] = vocab_size - 2;
[93m253 [m    for (b = 0; b < i; b++) {
[93m254 [m      vocab[a].code[i - b - 1] = code[b];
[93m255 [m      vocab[a].point[i - b] = point[b] - vocab_size;
[93m256 [m    }
[93m257 [m  }
[93m258 [m  free(count); /* countÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m259 [m  free(binary); /* binaryÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m260 [m  free(parent_node); /* parent_nodeÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m261 [m}
[93m262 
263 [mvoid LearnVocabFromTrainFile() { /* voidÂûãÈñ¢Êï∞LearnVocabFromTrainFile() */
[93m264 [m  char word[MAX_STRING];
[93m265 [m  FILE *fin; /* FILEÂûã„Éù„Ç§„É≥„Çøfin */
[93m266 [m  long long a, i; /* long longÂûãÂ§âÊï∞a, i */
[93m267 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1; /* 0 <= a < vocab_hash_sii[22;1H[93m    [mze„ÅÆÊôÇvocab_hash[a]„Å´-1„Çí‰ª£ÂÖ• */
[93m268 [m  fin = fopen(train_file, "rb"); /* train_file„ÇíË™≠Ëæº„É¢„Éº„Éâ„ÅßÈñã„Åè */
[93m269 [m  if (fin == NULL) { /* „Éù„Ç§„É≥„Çøfin„ÅåNULL„ÅÆÊôÇ */
[93m270 [m    printf("ERROR: training data file not found!\n");
[93m271 [m    exit(1);
[93m272 [m  }
[93m273 [m  vocab_size = 0;[14;7H[?12l[?25h[?25l[29;1H/free[27m[m[H[2J[1;1H[93m528 [m[7C } /* 509Ë°åÁõÆ„Åã„Çâ„ÅÆforÊñá„ÅØ„Åì„Åì„Åæ„Åß */
[93m529 [m[7C // Learn weights input -> hidden
[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];
[93m531 [m      }
[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */
[93m534 [m    if (sentence_position >= sentence_length) {
[93m535 [m      sentence_length = 0;
[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[10;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */
[93m537 [m    }
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */
[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m542 [m  pthread_exit(NULL);
[93m543 [m}
[93m544 
545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */
[93m546 [m  long a, b, c, d;
[93m547 [m  FILE *fo;
[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));
[93m549 [m  printf("Starting training using file %s\n", train_file);
[93m550 [m  starting_alpha = alpha;
[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();
[93m553 [m  if (output_file[0] == 0) return;
[93m554 [m  InitNet();[14;7H[?12l[?25h[?25l[29;1H?free[27m[m[H[2J[1;1H[93m248 [m      b = parent_node[b]; /* b„Å´parent_node„Çí‰ª£ÂÖ• */
[93m249 [m      if (b == vocab_size * 2 - 2) break; /* b == vocab_size * 2 - 2„ÅÆÊôÇÁÑ°Èôê„É´„Éº„Éó„Åã[94m>>[m[3;1H[93m    [m„ÇâËÑ±Âá∫ */
[93m250 [m    }
[93m251 [m    vocab[a].codelen = i;
[93m252 [m    vocab[a].point[0] = vocab_size - 2;
[93m253 [m    for (b = 0; b < i; b++) {
[93m254 [m      vocab[a].code[i - b - 1] = code[b];
[93m255 [m      vocab[a].point[i - b] = point[b] - vocab_size;
[93m256 [m    }
[93m257 [m  }
[93m258 [m  free(count); /* countÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m259 [m  free(binary); /* binaryÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m260 [m  free(parent_node); /* parent_nodeÂàÜ„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */
[93m261 [m}
[93m262 
263 [mvoid LearnVocabFromTrainFile() { /* voidÂûãÈñ¢Êï∞LearnVocabFromTrainFile() */
[93m264 [m  char word[MAX_STRING];
[93m265 [m  FILE *fin; /* FILEÂûã„Éù„Ç§„É≥„Çøfin */
[93m266 [m  long long a, i; /* long longÂûãÂ§âÊï∞a, i */
[93m267 [m  for (a = 0; a < vocab_hash_size; a++) vocab_hash[a] = -1; /* 0 <= a < vocab_hash_sii[22;1H[93m    [mze„ÅÆÊôÇvocab_hash[a]„Å´-1„Çí‰ª£ÂÖ• */
[93m268 [m  fin = fopen(train_file, "rb"); /* train_file„ÇíË™≠Ëæº„É¢„Éº„Éâ„ÅßÈñã„Åè */
[93m269 [m  if (fin == NULL) { /* „Éù„Ç§„É≥„Çøfin„ÅåNULL„ÅÆÊôÇ */
[93m270 [m    printf("ERROR: training data file not found!\n");
[93m271 [m    exit(1);
[93m272 [m  }
[93m273 [m  vocab_size = 0;[14;7H[?12l[?25h[?25l[29;1H/[?12l[?25htable[?25l[27m[m[H[2J[1;1H[93m446 [m[9C g = (1 - vocab[word].code[d] - f) * alpha;
[93m447 [m[9C // Propagate errors output -> hidden
[93m448 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m449 [m[9C // Learn weights hidden -> output
[93m450 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * neu1[c];
[93m451 [m[7C }
[93m452 [m[7C // NEGATIVE SAMPLING
[93m453 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) {
[93m454 [m[9C if (d == 0) {
[93m455 [m[11C target = word;
[93m456 [m[11C label = 1;
[93m457 [m[9C } else {
[93m458 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11;
[93m459 [m[11C target = table[(next_random >> 16) % table_size];
[93m460 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m461 [m[11C if (target == word) continue;
[93m462 [m[11C label = 0;
[93m463 [m[9C }
[93m464 [m[9C l2 = target * layer1_size;
[93m465 [m[9C f = 0;
[93m466 [m[9C for (c = 0; c < layer1_size; c++) f += neu1[c] * syn1neg[c + l2];
[93m467 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m468 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m469 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [25;1H[93m    [m/ 2))]) * alpha;
[93m470 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m471 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * neu1[c];
[93m472 [m[7C }[14;26H[?12l[?25h[?25l[29;1H/table[14;54H[?12l[?25h[?25l[29;1H[27m[m[H[2J[1;1H[93m504 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1[c + l2];
[93m505 [m[9C // Learn weights hidden -> output /* Èáç„Åø„ÇíÂ≠¶Áøí„Åó„Å¶hiden„Åã„Çâ */
[93m506 [m[9C for (c = 0; c < layer1_size; c++) syn1[c + l2] += g * syn0[c + l1];
[93m507 [m[7C } /* 493Ë°åÁõÆ„Åã„Çâ */
[93m508 [m[7C // NEGATIVE SAMPLING /* „Éç„Ç¨„ÉÜ„Ç£„Éñ„Çµ„É≥„Éó„É™„É≥„Ç∞ */
[93m509 [m[7C if (negative > 0) for (d = 0; d < negative + 1; d++) { /* 528Ë°åÁõÆ„Åæ„Åß(„Éá„Éï„Ç©[94m>>[m[7;1H[93m    [m„É´„Éà„Å†„Å®negative == 5„Å†„Åã„Çâ„Åì„Å£„Å°„ÅåÂãï„Åè) */
[93m510 [m[9C if (d == 0) { /* „É´„Éº„Éó„ÅÆÊúÄÂàù„Å†„Åë */
[93m511 [m[11C target = word;
[93m512 [m[11C label = 1;
[93m513 [m[9C } else { /* „É´„Éº„Éó„ÅÆ2ÂõûÁõÆ‰ª•Èôç */
[93m514 [m[11C next_random = next_random * (unsigned long long)25214903917 + 11; /* Á∑öÂΩ¢[13;1H[93m    [mÂêàÂêåÊ≥ï */
[93m515 [m[11C target = table[(next_random >> 16) % table_size];
[93m516 [m[11C if (target == 0) target = next_random % (vocab_size - 1) + 1;
[93m517 [m[11C if (target == word) continue; /* target == word„ÅÆÊôÇÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó */
[93m518 [m[11C label = 0;
[93m519 [m[9C }
[93m520 [m[9C l2 = target * layer1_size;
[93m521 [m[9C f = 0;
[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];
[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;
[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;
[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [25;1H[93m    [m/ 2))]) * alpha;
[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];
[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];
[93m528 [m[7C } /* 509Ë°åÁõÆ„Åã„Çâ„ÅÆforÊñá„ÅØ„Åì„Åì„Åæ„Åß */[14;26H[?12l[?25htabl[?25le[46m[[32C][14;31H[?12l[?25h[?25l[m[[46m([17C)[m[13C][14;32H[?12l[?25h[?25l([17C)[14;33H[?12l[?25hnext_random >> 1[?25l[14;32H[46m([17C)[?12l[?25h[?25l[m[14;32H([17C)[?12l[?25h % table_siz[?25l[14;31H[46m[[32C][?12l[?25h[?25l[m[14;31H[[32C][?12l[?25h[?25l[29;1H[1m-- INSERT --[14;66H[?12l[?25h[?25l[m;/[?12l[?25h[?25l[14;66H[K[14;66H[?12l[?25h[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l t */[?12l[?25h[?25lta */[?12l[?25h[?25lag */[?12l[?25h[?25la */[14;75H[K[14;72H[?12l[?25h[?25lar */[?12l[?25h[?25lrg */[?12l[?25h[?25lge */[?12l[?25h[?25let */[?12l[?25h[?25lt„Å´ */[?12l[?25h[?25lt */[?12l[?25h[?25lta */[?12l[?25h[?25lab */[?12l[?25h[?25lbl */[?12l[?25h[?25lle */[?12l[?25h[?25le[ */[?12l[?25h[?25l[46m[][m */[?12l[?25h[?25l[?12l[?25h[?25l[1C[?12l[?25h[?25l[] [?12l[?25h[?25l[46m[][?12l[?25h[?25l[m[ */[14;87H[K[14;84H[?12l[?25h[?25le */[14;86H[K[14;83H[?12l[?25h[?25l[15;28r[15;1H[L[1;29r[14;82He[46m[[m(next__[15;1H[93m    [mrandom >> 16) % table_size[46m][m */[?12l[?25h[?25l[14;83H[(next__[15;1H[93m [m[29C] [?12l[?25h[?25l[14;83H[46m[[m(next__[15;1H[93m [m[29C[46m][?12l[?25h[?25l[m[14;83H[(next__[15;1H[93m [m[29C]„Çí */[?12l[?25h[?25l‰ª£ÂÖ• */[?12l[?25h *[16;78H[17;85H[16;78H[?25l [?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l t */[?12l[?25h[?25lta */[?12l[?25h[?25lar */[?12l[?25h [17;85H[?25l„Åó„Å¶ */[?12l[?25h[?25l5 */[17;87H[?12l[?25h[?25l[18;28r[18;1H[L[1;29r[17;86H51 **[18;1H[93m    [m/[17;88H[?12l[?25h[?25l10  [18;1H[93m    [m*/[17;89H[?12l[?25h[?25l0[94m>>[m[18;1H[93m    [mË°åÁõÆ */[?12l[?25h[?25l„Å´ */[?12l[?25h[?25lÊàª„Çã */[?12l[?25h[17;88H[16;84Hr */[?25l[16;87H[K[16;87H[?12l[?25h[?25l[16;86H[K[16;86H[?12l[?25h[?25l[?12l[?25h[?25l[16;84H[K[16;84H[?12l[?25h[?25l[16;83H[K[16;83H[?12l[?25h[?25l[16;82H[K[16;82H[?12l[?25h[?25l[?12l[?25h[?25l[16;80H[K[16;80H[?12l[?25h[?25l[16;79H[K[16;79H[?12l[?25h[?25l[?12l[?25h[17;78H[19;27H[?25l[11;22H[46m{[20;15H}[?12l[?25h[?25l[m[11;22H{[20;15H}[21;41H[?12l[?25h[22;21H[23;78H[24;56H[25;62H[26;78H[28;78H[?25l[1;28r[28;1H
[1;29r[28;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];[28;78H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m528 [m[7C } /* 509Ë°åÁõÆ„Åã„Çâ„ÅÆforÊñá„ÅØ„Åì„Åì„Åæ„Åß */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m529 [m[7C // Learn weights input -> hidden[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[c + l1] += neu1e[c];[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m531 [m      }[?12l[?25h[27;72H[26;45H[25;49H[24;78H[25;49H[26;45H[27;72H[?25l[28;12H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */
[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */[27;45H[?12l[?25h[28;68H[?25l[1;28r[28;1H
[1;29r[28;1H[93m534 [m    if (sentence_position >= sentence_length) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m535 [m      sentence_length = 0;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[28;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */[27;78H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[23;51H[46m{[m[27;1H[93m537 [m    [46m}[m
[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[27;10H[?12l[?25h[?25l[23;51H{[27;9H}[28;40H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */
[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */[27;58H[?12l[?25h[28;60H[?25l[1;28r[28;1H
[1;29r[28;1H[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m542 [m  pthread_exit(NULL);
[93m543 [m}[27;26H[?12l[?25h[?25l[28;6H[?12l[?25h[27;26H[26;62H[25;60H[24;58H[23;40H[?25l[18;51H[46m{[22;9H}[?12l[?25h[?25l[m[18;51H{[22;9H}a[?12l[?25h[?25l[18;51H[46m{[22;9H}[m[22;10H[K[22;10H[?12l[?25h[?25l[18;51H{[22;9H}[20;10H[?12l[?25h[19;10H[18;10Hf[?25l [46m([36C)[18;12H[?12l[?25h[?25l([?12l[?25h[?25l[m([36C)[18;14H[?12l[?25hentence_position >= sentence_lengt[?25l[18;12H[46m([36C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[18;12H([36C) [46m{[22;9H}[18;51H[?12l[?25h[?25l{[?12l[?25h[?25l[m{[22;9H}[18;53H[?12l[?25h[?25l /[?12l[?25h[?25l/*[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l *[?12l[?25h[?25l*/[?12l[?25h[?25l s */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_p */[?12l[?25h[?25lpo */[?12l[?25h[?25los */[?12l[?25h[?25lsi */[?12l[?25h[?25lit */[?12l[?25h[?25lti */[?12l[?25h[?25lio */[?12l[?25h[?25lon */[?12l[?25h[?25ln„Åå */[?12l[?25h[?25ls */[?12l[?25h[?25lse */[?12l[?25h[?25len */[?12l[?25h[?25lnt */[?12l[?25h[?25lte */[?12l[?25h[?25len */[?12l[?25h[?25lnc */[?12l[?25h[?25lce */[?12l[?25h[?25le_ */[?12l[?25h[?25l_l */[?12l[?25h[?25lle */[?12l[?25h[?25len */[18;87H[?12l[?25h[?25l[19;28r[19;1H[L[1;29r[18;86Hng **[19;1H[93m    [m/[18;88H[?12l[?25h[?25lgt  [19;1H[93m    [m*/[18;89H[?12l[?25h[?25lthh[19;1H[93m    [m */[?12l[?25h[?25l[93m [m‰ª•‰∏ä */[?12l[?25h[?25l„ÅÆ */[?12l[?25h[?25lÊôÇ */[?12l[?25h[20;31H[21;10H[?25l[18;51H[46m{[m[37Chh[19;1H[93m [m[23;9H[46m}[?12l[?25h[?25l[?12l[?25h[?25l}[?12l[?25h[?25l[m[18;51H{[37Chh[19;1H[93m [m[23;9H}[24;10H[?12l[?25h[?25l[?12l[?25h[?25l}[?12l[?25h /* 374[2C[2C[2C[2C[2C[2C[2C[2C[2C[2C[?25l[18;51H[46m{[m[37Chh[19;1H[93m [m[23;9H[46m}[?12l[?25h[?25l[m[18;51H{[37Chh[19;1H[93m [m[23;9H}[21;35H[?12l[?25h[20;31H[18;35H[20;31H[18;35Hentence_lengt[?25l[18;12H[46m([36C)[m[39Chh[19;1H[93m [18;49H[?12l[?25h[?25l[m[40Chh[19;1H[93m [18;50H[?12l[?25h[?25l[m[18;12H([36C) [46m{[m[37Chh[19;1H[93m [m[23;9H[46m}[18;51H[?12l[?25h[?25l[m[38Chh[19;1H[93m [18;52H[?12l[?25h[?25l[m{[37Chh[19;1H[93m [m[23;9H}[18;53H[?12l[?25h[29;1H[K[18;52H[?25l[?12l[?25h[?25l{/* sentence_position„Ååsentence_length[94m>>[m[19;1H[93m [18;52H[?12l[?25h[?25l[m{* sentence_position„Ååsentence_length‰ª•[19;5H‰∏ä„ÅÆÊôÇ */[19;14H[K[18;52H[?12l[?25h[?25l{ sentence_position„Ååsentence_length‰ª•[94m>>[m[19;1H[93m [18;52H[?12l[?25h[?25l[m{sentence_position„Ååsentence_length‰ª•‰∏ä[19;4H[93m [m„ÅÆÊôÇ */[19;12H[K[18;52H[?12l[?25h[?25l{entence_position„Ååsentence_length‰ª•‰∏ä[94m>>[m[19;1H[93m [18;52H[?12l[?25h[?25l[m{ntence_position„Ååsentence_length‰ª•‰∏ä„ÅÆ[19;4H[93m [mÊôÇ */[19;10H[K[18;52H[?12l[?25h[?25l{tence_position„Ååsentence_length‰ª•‰∏ä„ÅÆ[94m>>[m[19;1H[93m [18;52H[?12l[?25h[?25l[m{ence_position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ[19;4H[93m [m */[19;8H[K[18;52H[?12l[?25h[?25l{nce_position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ  [19;1H[93m    [m*/[19;7H[K[18;52H[?12l[?25h[?25l{ce_position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ **[19;1H[93m    [m/[19;6H[K[18;52H[?12l[?25h[?25l[18;28r[28;1H
[1;29r[18;1H[93m534 [m    if (sentence_position >= sentence_length) {e_position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[28;1H[93m543 [m}[18;52H[?12l[?25h[?25l{_position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;89H[K[18;52H[?12l[?25h[?25l{position„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;88H[K[18;52H[?12l[?25h[?25l{osition„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;87H[K[18;52H[?12l[?25h[?25l{sition„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;86H[K[18;52H[?12l[?25h[?25l{ition„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;85H[K[18;52H[?12l[?25h[?25l{tion„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;84H[K[18;52H[?12l[?25h[?25l{ion„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;83H[K[18;52H[?12l[?25h[?25l{on„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;82H[K[18;52H[?12l[?25h[?25l{n„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;81H[K[18;52H[?12l[?25h[?25l{„Ååsentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;80H[K[18;52H[?12l[?25h[?25l{sentence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;78H[K[18;52H[?12l[?25h[?25l{entence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;77H[K[18;52H[?12l[?25h[?25l{ntence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;76H[K[18;52H[?12l[?25h[?25l{tence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;75H[K[18;52H[?12l[?25h[?25l{ence_length‰ª•‰∏ä„ÅÆÊôÇ */[18;74H[K[18;52H[?12l[?25h[?25l{nce_length‰ª•‰∏ä„ÅÆÊôÇ */[18;73H[K[18;52H[?12l[?25h[?25l{ce_length‰ª•‰∏ä„ÅÆÊôÇ */[18;72H[K[18;52H[?12l[?25h[?25l{e_length‰ª•‰∏ä„ÅÆÊôÇ */[18;71H[K[18;52H[?12l[?25h[?25l{_length‰ª•‰∏ä„ÅÆÊôÇ */[18;70H[K[18;52H[?12l[?25h[?25l{length‰ª•‰∏ä„ÅÆÊôÇ */[18;69H[K[18;52H[?12l[?25h[?25l{ength‰ª•‰∏ä„ÅÆÊôÇ */[18;68H[K[18;52H[?12l[?25h[?25l{ngth‰ª•‰∏ä„ÅÆÊôÇ */[18;67H[K[18;52H[?12l[?25h[?25l{gth‰ª•‰∏ä„ÅÆÊôÇ */[18;66H[K[18;52H[?12l[?25h[?25l{th‰ª•‰∏ä„ÅÆÊôÇ */[18;65H[K[18;52H[?12l[?25h[?25l{h‰ª•‰∏ä„ÅÆÊôÇ */[18;64H[K[18;52H[?12l[?25h[?25l{‰ª•‰∏ä„ÅÆÊôÇ */[18;63H[K[18;52H[?12l[?25h[?25l‰∏ä„ÅÆÊôÇ */[18;61H[K[18;52H[?12l[?25h[?25l{„ÅÆÊôÇ */[18;59H[K[18;52H[?12l[?25h[?25l{ÊôÇ */[18;57H[K[18;52H[?12l[?25h[?25l{ */[18;55H[K[18;52H[?12l[?25h[?25l{*/[18;54H[K[18;52H[?12l[?25h[?25l{/[18;53H[K[18;52H[?12l[?25h[?25l[46m{[m[18;52H[K[22;9H[46m}[18;51H[?12l[?25h[?25l[m{[22;9H}[19;30H[?12l[?25h[20;51H[?25l[18;51H[46m{[22;9H}[?12l[?25h[?25l[m[18;51H{[22;9H}[23;39H[?12l[?25h[24;51H[25;51H[26;51H[27;25H[28;5H[?25l[1;28r[28;1H
[1;29r[28;1H[93m544 [?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[28;1H[93m545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m546 [m  long a, b, c, d;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m547 [m  FILE *fo;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[28;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m549 [m  printf("Starting training using file %s\n", train_file);[28;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m550 [m  starting_alpha = alpha;[?12l[?25h[?25l
:[?12l[?25h:w[?25l[29;3H[K[29;3H[?12l[?25h[?25l[29;2H[K[29;2H[?12l[?25hw[?25l"word2vec.c" 703L, 39071C written[28;29H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();
[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();[29;1H[K[27;51H[?12l[?25h[28;47H[?25l[1;28r[28;1H
[1;29r[28;1H[93m553 [m  if (output_file[0] == 0) return;[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m554 [m  InitNet();[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m555 [m  if (negative > 0) InitUnigramTable();[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m556 [m  start = clock();[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m557 [m  for (a = 0; a < num_threads; a++) pthread_create(&pt[a], NULL, TrainModelThread, (vv[28;1H[93m    [moid *)a);[27;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m558 [m  for (a = 0; a < num_threads; a++) pthread_join(pt[a], NULL);[28;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m559 [m  fo = fopen(output_file, "wb");[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m560 [m  if (classes == 0) {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m561 [m    // Save the word vectors[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m562 [m    fprintf(fo, "%lld %lld\n", vocab_size, layer1_size);
[93m563 [m    for (a = 0; a < vocab_size; a++) {[27;51H[?12l[?25h[28;42H[?25l[1;28r[28;1H
[1;29r[28;1H[93m564 [m      fprintf(fo, "%s ", vocab[a].word);[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m565 [m      if (binary) for (b = 0; b < layer1_size; b++) fwrite(&syn0[a * layer1_size + b]][28;1H[93m    [m, sizeof(real), 1, fo);[27;51H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m566 [m      else for (b = 0; b < layer1_size; b++) fprintf(fo, "%lf ", syn0[a * layer1_sizee[28;1H[93m    [m + b]);[27;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m567 [m      fprintf(fo, "\n");[?12l[?25h[?25l[1;28r[28;1H
[1;29r[21;42H[46m{[m[28;1H[93m568 [m    [46m}[?12l[?25h[?25l[1;28r[m[28;1H
[1;29r[20;42H{[27;9H}
[93m569 [m  } else {[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m570 [m    // Run K-means on the word vectors[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m571 [m    int clcn = classes, iter = 10, closeid;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m572 [m    int *centcn = (int *)malloc(classes * sizeof(int)); /* *centcn„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩì[94m>>[m[28;1H[93m    [mÔºå609Ë°åÁõÆ„ÅßËß£Êîæ */[27;51H[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m573 [m    int *cl = (int *)calloc(vocab_size, sizeof[46m([mint[46m)[m); /* *cl„Å´ÂãïÁöÑ„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå611Ë°å [28;1H[93m    [mÁõÆ„ÅßËß£Êîæ */[27;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[26;51H(int)[33C  [27;1H[93m 
574 [m    real closev, x;[?12l[?25h[?25l[1;28r[1;1H[2M[1;29r[27;1H[93m575 [m    real *cent = (real *)calloc(classes * layer1_size, sizeof(real)); /* *cent„Å´ÂãïÁöÑ[94m>>[m[28;1H[93m    [m„Å´„É°„É¢„É™Ââ≤ÂΩìÔºå610Ë°åÁõÆ„ÅßËß£Êîæ */[27;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m576 [m    for (a = 0; a < vocab_size; a++) cl[a] = a % clcn;[28;51H[?12l[?25h[?25l[1;28r[28;1H
[1;29r[28;1H[93m577 [m    for (a = 0; a < iter; a++) {[?12l[?25h[27;51H[25;51H[24;23H[?25l[22;51H[46m([mint[46m)[m[33C  [23;1H[93m [22;51H[?12l[?25h[?25l[m(int)[33C  [23;1H[93m [20;51H[?12l[?25h[19;47H[18;42H[17;14H[?25l[m[9;42H[46m{[16;9H}[?12l[?25h[?25l[m[9;42H{[16;9H}[15;28H[?12l[?25h[13;51H[11;51H[10;44H[?25l[9;42H[46m{[16;9H}[9;42H[?12l[?25h[?25l[m{[16;9H}[8;51H[?12l[?25h[7;32H[?25l[6;25H[46m{[17;7H}[6;25H[?12l[?25h[?25l[m{[17;7H}[5;36H[?12l[?25h[4;51H[2;51H[1;22H[?25l[1;28r[1;1H[L[1;29r[1;1H[93m555 [m  if (negative > 0) InitUnigramTable();[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m554 [m  InitNet();[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m553 [m  if (output_file[0] == 0) return;[28;1H[94m@                                                                                        [1;38H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m552 [m  if (save_vocab_file[0] != 0) SaveVocab();[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m551 [m  if (read_vocab_file[0] != 0) ReadVocab(); else LearnVocabFromTrainFile();[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m550 [m  starting_alpha = alpha;[28;1H[94m@                                                                                        [1;29H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m549 [m  printf("Starting training using file %s\n", train_file);[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m548 [m  pthread_t *pt = (pthread_t *)malloc(num_threads * sizeof(pthread_t));[28;1H[94m@                                                                                        [1;51H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m547 [m  FILE *fo;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m546 [m  long a, b, c, d;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m545 [mvoid TrainModel() { /* 614Ë°åÁõÆ„Åæ„Åß */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m544 [?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m543 [m}[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m542 [m  pthread_exit(NULL);[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m541 [m  free(neu1e); /* 371Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1e„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */[28;1H[94m@                                                                                        [1;51H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m540 [m  free(neu1); /* 370Ë°åÁõÆ„ÅßÁ¢∫‰øù„Åó„Åüneu1„ÅÆ„É°„É¢„É™„ÇíËß£Êîæ */[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m539 [m  fclose(fi); /* 372Ë°åÁõÆ„ÅßÈñã„ÅÑ„Åütrain_file„ÇíÈñâ„Åò„Çã */[28;1H[94m@                                                                                        [1;51H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m538 [m  } /* 374Ë°åÁõÆ„Åã„ÇâÁÑ°Èôê„É´„Éº„ÉóÁµÇ„Çä */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m537 [m    }[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m536 [m      continue; /* sentence_position >= sentence_length„ÅÆÊôÇsentence_length = 0„Å®„Åó„Åü[94m>>[m[2;1H[93m    [m‰∏ä„ÅßÂá¶ÁêÜ„Çí„Çπ„Ç≠„ÉÉ„Éó„ÅóÔºå375Ë°åÁõÆ„Å´Êàª„Çã */[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m535 [m      sentence_length = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m534 [m    if (sentence_position >= sentence_length) [46m{[5;9H}[1;51H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m533 [m    sentence_position++; /* sentence_position„ÅØ„Åì„Åì„Åß1Â¢ó„Åà„Çã */[2;51H{[6;9H}[1;50H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m532 [m    } /* 483Ë°åÁõÆ„Åã„Çâ„ÅÆskip-gramÁµÇ„Çè„Çä */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m531 [m      }[28;1H[94m@                                                                                        [1;11H[?12l[?25h[?25l[1;28r[m[1;1H[L[1;29r[1;1H[93m530 [m[7C for (c = 0; c < layer1_size; c++) syn0[46m[[mc + l1[46m][m += neu1e[c];[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m529 [m[7C // Learn weights input -> hidden[2;51H[c + l1][1;44H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m528 [m[7C } /* 509Ë°åÁõÆ„Åã„Çâ„ÅÆforÊñá„ÅØ„Åì„Åì„Åæ„Åß */[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m527 [m[9C for (c = 0; c < layer1_size; c++) syn1neg[c + l2] += g * syn0[c + l1];[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m526 [m[9C for (c = 0; c < layer1_size; c++) neu1e[c] += g * syn1neg[c + l2];[1;51H[?12l[?25h[?25l[1;28r[1;1H[2L[1;29r[1;1H[93m525 [m[9C else g = (label - expTable[(int)((f + MAX_EXP) * (EXP_TABLE_SIZE / MAX_EXP  [2;1H[93m    [m/ 2))]) * alpha;[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m524 [m[9C else if (f < -MAX_EXP) g = (label - 0) * alpha;[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m523 [m[9C if (f > MAX_EXP) g = (label - 1) * alpha;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m522 [m[9C for (c = 0; c < layer1_size; c++) f += syn0[c + l1] * syn1neg[c + l2];[1;51H[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m521 [m[9C f = 0;[?12l[?25h[?25l[1;28r[1;1H[L[1;29r[1;1H[93m520 [m[9C l2 = target * layer1_size;[?12l[?25h[?25l[29;1H:[?12l[?25hq[?25l[29;1H[K[29;1H[?1l>[?12l[?25h[?1049lbash-3.2$ vi word2vec.c[C[C[C[C[C[C[C[C[C[Cexit[Kvi word2vec.c[C[C[C[C[C[C[C[C[C[Cscript log-2015-10-20[C[C[C[C[C[C[C[C[C[Cls[Kscript log-2015-10-20[C[C[C[C[C[C[C[C[C[C[8Pvi word2vec.c[C[C[C[C[C[C[C[C[C[Cexit[Kvi word2vec.c[C[C[C[C[C[C[C[C[C[C[Kgit add .
bash-3.2$ git [K[K[K[Kgit [K[K[K[Kmake
gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
bash-3.2$ git add .
bash-3.2$ git commit -m ""A"d"d" "c"o"m"m"e"n"t"s" "o"n" "w"o"r"3"[1P"d"2"v"e"c"."c" "2"0"1"5"-"2"[1P"1"0"-"2"2"
[other bb3ee09] Add comments on word2vec.c 2015-10-22
 2 files changed, 8914 insertions(+), 66 deletions(-)
 create mode 100644 log_2015-10-22
bash-3.2$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': tatst
Password for 'https://tatst@github.com': 
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects:  25% (1/4)   Compressing objects:  50% (2/4)   Compressing objects:  75% (3/4)   Compressing objects: 100% (4/4)   Compressing objects: 100% (4/4), done.
Writing objects:  25% (1/4)   Writing objects:  50% (2/4)   Writing objects:  75% (3/4)   Writing objects: 100% (4/4)   Writing objects: 100% (4/4), 97.92 KiB | 0 bytes/s, done.
Total 4 (delta 2), reused 0 (delta 0)
To https://github.com/tatst/word2vec.git
   c0565f7..bb3ee09  other -> other
bash-3.2$ exit
exit

Script done on Thu Oct 22 20:55:46 2015
